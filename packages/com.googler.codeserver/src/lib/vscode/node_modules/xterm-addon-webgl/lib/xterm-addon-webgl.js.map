{"version":3,"file":"xterm-addon-webgl.js","mappings":"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","sources":["webpack://WebglAddon/webpack/universalModuleDefinition","webpack://WebglAddon/./src/GlyphRenderer.ts","webpack://WebglAddon/./src/RectangleRenderer.ts","webpack://WebglAddon/./src/RenderModel.ts","webpack://WebglAddon/./src/WebglRenderer.ts","webpack://WebglAddon/./src/WebglUtils.ts","webpack://WebglAddon/./src/atlas/CharAtlasCache.ts","webpack://WebglAddon/./src/atlas/CharAtlasUtils.ts","webpack://WebglAddon/./src/atlas/WebglCharAtlas.ts","webpack://WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://WebglAddon/../../src/browser/Lifecycle.ts","webpack://WebglAddon/../../src/browser/renderer/Constants.ts","webpack://WebglAddon/../../src/browser/renderer/CustomGlyphs.ts","webpack://WebglAddon/../../src/browser/renderer/DevicePixelObserver.ts","webpack://WebglAddon/../../src/browser/renderer/RendererUtils.ts","webpack://WebglAddon/../../src/common/Color.ts","webpack://WebglAddon/../../src/common/EventEmitter.ts","webpack://WebglAddon/../../src/common/Lifecycle.ts","webpack://WebglAddon/../../src/common/MultiKeyMap.ts","webpack://WebglAddon/../../src/common/Platform.ts","webpack://WebglAddon/../../src/common/TaskQueue.ts","webpack://WebglAddon/../../src/common/TypedArrayUtils.ts","webpack://WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://WebglAddon/../../src/common/buffer/CellData.ts","webpack://WebglAddon/../../src/common/buffer/Constants.ts","webpack://WebglAddon/../../src/common/input/TextDecoder.ts","webpack://WebglAddon/webpack/bootstrap","webpack://WebglAddon/./src/WebglAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel, IRasterizedGlyph } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXCOORD = 4,\n  TEXSIZE = 5\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\n\nuniform sampler2D u_texture;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(u_texture, v_texcoord);\n}`;\n\nconst INDICES_PER_CELL = 10;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\n/** Work variables to avoid garbage collection. */\nconst w: { i: number, glyph: IRasterizedGlyph | undefined, leftCellPadding: number, clippedPixels: number } = {\n  i: 0,\n  glyph: undefined,\n  leftCellPadding: 0,\n  clippedPixels: 0\n};\n\nexport class GlyphRenderer  extends Disposable {\n  private _atlas: WebglCharAtlas | undefined;\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _projectionLocation: WebGLUniformLocation;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _textureLocation: WebGLUniformLocation;\n  private _atlasTexture: WebGLTexture;\n  private _attributesBuffer: WebGLBuffer;\n  private _activeBuffer: number = 0;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n\n    const gl = this._gl;\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 6 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 8 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup empty texture atlas\n    this._atlasTexture = throwIfFalsy(gl.createTexture());\n    this.register(toDisposable(() => gl.deleteTexture(this._atlasTexture)));\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.onResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, ext: number, chars: string, lastBg: number): void {\n    // Since this function is called for every cell (`rows*cols`), it must be very optimized. It\n    // should not instantiate any variables unless a new glyph is drawn to the cache where the\n    // slight slowdown is acceptable for the developer ergonomics provided as it's a once of for\n    // each glyph.\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, ext, chars, lastBg);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, ext: number, chars: string, lastBg: number): void {\n    w.i = (y * this._terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      fill(array, 0, w.i, w.i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      w.glyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg, ext);\n    } else {\n      w.glyph = this._atlas.getRasterizedGlyph(code, bg, fg, ext);\n    }\n\n    w.leftCellPadding = Math.floor((this._dimensions.scaledCellWidth - this._dimensions.scaledCharWidth) / 2);\n    if (bg !== lastBg && w.glyph.offset.x > w.leftCellPadding) {\n      w.clippedPixels = w.glyph.offset.x - w.leftCellPadding;\n      // a_origin\n      array[w.i    ] = -(w.glyph.offset.x - w.clippedPixels) + this._dimensions.scaledCharLeft;\n      array[w.i + 1] = -w.glyph.offset.y + this._dimensions.scaledCharTop;\n      // a_size\n      array[w.i + 2] = (w.glyph.size.x - w.clippedPixels) / this._dimensions.scaledCanvasWidth;\n      array[w.i + 3] = w.glyph.size.y / this._dimensions.scaledCanvasHeight;\n      // a_texcoord\n      array[w.i + 4] = w.glyph.texturePositionClipSpace.x + w.clippedPixels / this._atlas.cacheCanvas.width;\n      array[w.i + 5] = w.glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[w.i + 6] = w.glyph.sizeClipSpace.x - w.clippedPixels / this._atlas.cacheCanvas.width;\n      array[w.i + 7] = w.glyph.sizeClipSpace.y;\n    } else {\n      // a_origin\n      array[w.i    ] = -w.glyph.offset.x + this._dimensions.scaledCharLeft;\n      array[w.i + 1] = -w.glyph.offset.y + this._dimensions.scaledCharTop;\n      // a_size\n      array[w.i + 2] = w.glyph.size.x / this._dimensions.scaledCanvasWidth;\n      array[w.i + 3] = w.glyph.size.y / this._dimensions.scaledCanvasHeight;\n      // a_texcoord\n      array[w.i + 4] = w.glyph.texturePositionClipSpace.x;\n      array[w.i + 5] = w.glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[w.i + 6] = w.glyph.sizeClipSpace.x;\n      array[w.i + 7] = w.glyph.sizeClipSpace.y;\n    }\n    // a_cellpos only changes on resize\n  }\n\n  public clear(): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Clear vertices\n    if (this._vertices.count !== newCount) {\n      this._vertices.attributes = new Float32Array(newCount);\n    } else {\n      this._vertices.attributes.fill(0);\n    }\n    for (let i = 0; i < this._vertices.attributesBuffers.length; i++) {\n      if (this._vertices.count !== newCount) {\n        this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n      } else {\n        this._vertices.attributesBuffers[i].fill(0);\n      }\n    }\n    this._vertices.count = newCount;\n    let i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 8] = x / terminal.cols;\n        this._vertices.attributes[i + 9] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public onResize(): void {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the texture atlas if it's changed\n    if (this._atlas.hasCanvasChanged) {\n      this._atlas.hasCanvasChanged = false;\n      gl.uniform1i(this._textureLocation, 0);\n      gl.activeTexture(gl.TEXTURE0 + 0);\n      gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._atlas.cacheCanvas);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    // Set uniforms\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: WebglCharAtlas): void {\n    const gl = this._gl;\n    this._atlas = atlas;\n\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.cacheCanvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext } from './Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColor } from 'common/Types';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { DIM_OPACITY } from 'browser/renderer/Constants';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = a_position + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\n/** Work variables to avoid garbage collection. */\nconst w: { rgba: number, isDefault: boolean, x1: number, y1: number, r: number, g: number, b: number, a: number } = {\n  rgba: 0,\n  isDefault: false,\n  x1: 0,\n  y1: 0,\n  r: 0,\n  g: 0,\n  b: 0,\n  a: 0\n};\n\nexport class RectangleRenderer extends Disposable {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors();\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n  }\n\n  public onResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setColors(): void {\n    this._updateCachedColors();\n    this._updateViewportRectangle();\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n\n  private _updateCachedColors(): void {\n    this._bgFloat = this._colorToFloat32Array(this._colors.background);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.scaledCellWidth,\n      this._terminal.rows * this._dimensions.scaledCellHeight,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let rectangleCount = 1;\n    let y: number;\n    let x: number;\n    let currentStartX: number;\n    let currentBg: number;\n    let currentFg: number;\n    let currentInverse: boolean;\n    let modelIndex: number;\n    let bg: number;\n    let fg: number;\n    let inverse: boolean;\n    let offset: number;\n\n    for (y = 0; y < terminal.rows; y++) {\n      currentStartX = -1;\n      currentBg = 0;\n      currentFg = 0;\n      currentInverse = false;\n      for (x = 0; x < terminal.cols; x++) {\n        modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    w.isDefault = false;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          w.rgba = this._colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          w.rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          w.rgba = this._colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          w.rgba = this._colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          w.rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          w.rgba = this._colors.background.rgba;\n          w.isDefault = true;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    w.x1 = startX * this._dimensions.scaledCellWidth;\n    w.y1 = y * this._dimensions.scaledCellHeight;\n    w.r = ((w.rgba >> 24) & 0xFF) / 255;\n    w.g = ((w.rgba >> 16) & 0xFF) / 255;\n    w.b = ((w.rgba >> 8 ) & 0xFF) / 255;\n    w.a = (!w.isDefault && bg & BgFlags.DIM) ? DIM_OPACITY : 1;\n\n    this._addRectangle(vertices.attributes, offset, w.x1, w.y1, (endX - startX) * this._dimensions.scaledCellWidth, this._dimensions.scaledCellHeight, w.r, w.g, w.b, w.a);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1 / this._dimensions.scaledCanvasWidth;\n    array[offset + 1] = y1 / this._dimensions.scaledCanvasHeight;\n    array[offset + 2] = width / this._dimensions.scaledCanvasWidth;\n    array[offset + 3] = height / this._dimensions.scaledCanvasHeight;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1 / this._dimensions.scaledCanvasWidth;\n    array[offset + 1] = y1 / this._dimensions.scaledCanvasHeight;\n    array[offset + 2] = width / this._dimensions.scaledCanvasWidth;\n    array[offset + 3] = height / this._dimensions.scaledCanvasHeight;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel, ISelectionRenderModel } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 4;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\nexport const RENDER_MODEL_EXT_OFFSET = 3;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = {\n      hasSelection: false,\n      columnSelectMode: false,\n      viewportStartRow: 0,\n      viewportEndRow: 0,\n      viewportCappedStartRow: 0,\n      viewportCappedEndRow: 0,\n      startCol: 0,\n      endCol: 0\n    };\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    fill(this.cells, 0, 0);\n    fill(this.lineLengths, 0, 0);\n  }\n\n  public clearSelection(): void {\n    this.selection.hasSelection = false;\n    this.selection.viewportStartRow = 0;\n    this.selection.viewportEndRow = 0;\n    this.selection.viewportCappedStartRow = 0;\n    this.selection.viewportCappedEndRow = 0;\n    this.selection.startCol = 0;\n    this.selection.endCol = 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { acquireCharAtlas, removeTerminalFromCache } from './atlas/CharAtlasCache';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { IWebGL2RenderingContext } from './Types';\nimport { RenderModel, COMBINED_CHAR_BIT_MASK, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_EXT_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable } from 'common/Lifecycle';\nimport { Attributes, BgFlags, Content, FgFlags, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IEvent } from 'xterm';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { observeDevicePixelDimensions } from 'browser/renderer/DevicePixelObserver';\nimport { ITerminal, IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { CellData } from 'common/buffer/CellData';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICharacterJoinerService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IDecorationService } from 'common/services/Services';\n\n/** Work variables to avoid garbage collection. */\nconst w: { fg: number, bg: number, hasFg: boolean, hasBg: boolean, isSelected: boolean } = {\n  fg: 0,\n  bg: 0,\n  hasFg: false,\n  hasBg: false,\n  isSelected: false\n};\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlas: WebglCharAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n  private _workColors: { fg: number, bg: number, ext: number } = { fg: 0, bg: 0, ext: 0 };\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer!: RectangleRenderer;\n  private _glyphRenderer!: GlyphRenderer;\n\n  public dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n  private _contextRestorationTimeout: number | undefined;\n\n  private _onChangeTextureAtlas = new EventEmitter<HTMLCanvasElement>();\n  public get onChangeTextureAtlas(): IEvent<HTMLCanvasElement> { return this._onChangeTextureAtlas.event; }\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    coreService: ICoreService,\n    private readonly _decorationService: IDecorationService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._colors, this._core, this._coreBrowserService),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._colors, this._onRequestRedraw, this._coreBrowserService, coreService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = this._coreBrowserService.dpr;\n    this._updateDimensions();\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => {\n      console.log('webglcontextlost event received');\n      // Prevent the default behavior in order to enable WebGL context restoration.\n      e.preventDefault();\n      // Wait a few seconds to see if the 'webglcontextrestored' event is fired.\n      // If not, dispatch the onContextLoss notification to observers.\n      this._contextRestorationTimeout = setTimeout(() => {\n        this._contextRestorationTimeout = undefined;\n        console.warn('webgl context not restored; firing onContextLoss');\n        this._onContextLoss.fire(e);\n      }, 3000 /* ms */);\n    }));\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextrestored', (e) => {\n      console.warn('webglcontextrestored event received');\n      clearTimeout(this._contextRestorationTimeout);\n      this._contextRestorationTimeout = undefined;\n      // The texture atlas and glyph renderer must be fully reinitialized\n      // because their contents have been lost.\n      removeTerminalFromCache(this._terminal);\n      this._initializeWebGLState();\n      this._requestRedrawViewport();\n    }));\n\n    this.register(observeDevicePixelDimensions(this._canvas, this._coreBrowserService.window, (w, h) => this._setCanvasDevicePixelDimensions(w, h)));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    this._initializeWebGLState();\n\n    this._isAttached = this._coreBrowserService.window.document.body.contains(this._core.screenElement!);\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    this._canvas.parentElement?.removeChild(this._canvas);\n    removeTerminalFromCache(this._terminal);\n    super.dispose();\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.cacheCanvas;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    }\n\n    this._rectangleRenderer.setColors();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._clearModel(true);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== this._coreBrowserService.dpr) {\n      this._devicePixelRatio = this._coreBrowserService.dpr;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.scaledCanvasWidth;\n    this._canvas.height = this.dimensions.scaledCanvasHeight;\n    this._canvas.style.width = `${this.dimensions.canvasWidth}px`;\n    this._canvas.style.height = `${this.dimensions.canvasHeight}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.canvasWidth}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this._rectangleRenderer.setDimensions(this.dimensions);\n    this._rectangleRenderer.onResize();\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.onResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh. Resizing `_glyphRenderer` should clear it already,\n    // so there is no need to clear it again here.\n    this._clearModel(false);\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    for (const l of this._renderLayers) {\n      l.onBlur(this._terminal);\n    }\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public onFocus(): void {\n    for (const l of this._renderLayers) {\n      l.onFocus(this._terminal);\n    }\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.onSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._updateSelectionModel(start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public onCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.onCursorMove(this._terminal);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    for (const l of this._renderLayers) {\n      l.onOptionsChanged(this._terminal);\n    }\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Initializes members dependent on WebGL context state.\n   */\n  private _initializeWebGLState(): void {\n    // Dispose any previous rectangle and glyph renderers before creating new ones.\n    this._rectangleRenderer?.dispose();\n    this._glyphRenderer?.dispose();\n\n    this._rectangleRenderer = new RectangleRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n    this._glyphRenderer = new GlyphRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n\n    // Update dimensions and acquire char atlas\n    this.onCharSizeChanged();\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.scaledCharWidth <= 0 && this.dimensions.scaledCharHeight <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireCharAtlas(this._terminal, this._colors, this.dimensions.scaledCellWidth, this.dimensions.scaledCellHeight, this.dimensions.scaledCharWidth, this.dimensions.scaledCharHeight, this._coreBrowserService.dpr);\n    if (!('getRasterizedGlyph' in atlas)) {\n      throw new Error('The webgl renderer only works with the webgl char atlas');\n    }\n    if (this._charAtlas !== atlas) {\n      this._onChangeTextureAtlas.fire(atlas.cacheCanvas);\n    }\n    this._charAtlas = atlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  /**\n   * Clear the model.\n   * @param clearGlyphRenderer Whether to also clear the glyph renderer. This\n   * should be true generally to make sure it is in the same state as the model.\n   */\n  private _clearModel(clearGlyphRenderer: boolean): void {\n    this._model.clear();\n    if (clearGlyphRenderer) {\n      this._glyphRenderer.clear();\n    }\n  }\n\n  public clearCharAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._clearModel(true);\n    this._updateModel(0, this._terminal.rows - 1);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._clearModel(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (this._coreBrowserService.window.document.body.contains(this._core.screenElement!) && (this._core as any)._charSizeService.width && (this._core as any)._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.onGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._clearModel(true);\n      this._updateSelectionModel(undefined, undefined);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let lastBg: number;\n    let y: number;\n    let row: number;\n    let line: IBufferLine;\n    let joinedRanges: [number, number][];\n    let isJoined: boolean;\n    let lastCharX: number;\n    let range: [number, number];\n    let chars: string;\n    let code: number;\n    let i: number;\n    let x: number;\n    let j: number;\n\n    for (y = start; y <= end; y++) {\n      row = y + terminal.buffer.ydisp;\n      line = terminal.buffer.lines.get(row)!;\n      this._model.lineLengths[y] = 0;\n      joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (x = 0; x < terminal.cols; x++) {\n        lastBg = this._workColors.bg;\n        line.loadCell(x, cell);\n\n        if (x === 0) {\n          lastBg = this._workColors.bg;\n        }\n\n        // If true, indicates that the current character(s) to draw were joined.\n        isJoined = false;\n        lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly.\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        chars = cell.getChars();\n        code = cell.getCode();\n        i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._loadColorsForCell(x, row);\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._workColors.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._workColors.fg &&\n            this._model.cells[i + RENDER_MODEL_EXT_OFFSET] === this._workColors.ext) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n        this._model.cells[i + RENDER_MODEL_EXT_OFFSET] = this._workColors.ext;\n\n        this._glyphRenderer.updateCell(x, y, code, this._workColors.bg, this._workColors.fg, this._workColors.ext, chars, lastBg);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, 0, NULL_CELL_CHAR, 0);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n            this._model.cells[j + RENDER_MODEL_EXT_OFFSET] = this._workColors.ext;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n  }\n\n  /**\n   * Loads colors for the cell into the work colors object. This resolves overrides/inverse if\n   * necessary which is why the work cell object is not used.\n   */\n  private _loadColorsForCell(x: number, y: number): void {\n    this._workColors.bg = this._workCell.bg;\n    this._workColors.fg = this._workCell.fg;\n    this._workColors.ext = this._workCell.bg & BgFlags.HAS_EXTENDED ? this._workCell.extended.ext : 0;\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n\n    // Reset overrides work variables\n    w.bg = 0;\n    w.fg = 0;\n    w.hasBg = false;\n    w.hasFg = false;\n    w.isSelected = false;\n\n    // Apply decorations on the bottom layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'bottom', d => {\n      if (d.backgroundColorRGB) {\n        w.bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        w.hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        w.fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        w.hasFg = true;\n      }\n    });\n\n    // Apply the selection color if needed\n    w.isSelected = this._isCellSelected(x, y);\n    if (w.isSelected) {\n      w.bg = (this._coreBrowserService.isFocused ? this._colors.selectionBackgroundOpaque : this._colors.selectionInactiveBackgroundOpaque).rgba >> 8 & 0xFFFFFF;\n      w.hasBg = true;\n      if (this._colors.selectionForeground) {\n        w.fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n        w.hasFg = true;\n      }\n    }\n\n    // Apply decorations on the top layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'top', d => {\n      if (d.backgroundColorRGB) {\n        w.bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        w.hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        w.fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        w.hasFg = true;\n      }\n    });\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if (w.hasBg) {\n      if (w.isSelected) {\n        // Non-RGB attributes from model + force non-dim + override + force RGB color mode\n        w.bg = (this._workCell.bg & ~Attributes.RGB_MASK & ~BgFlags.DIM) | w.bg | Attributes.CM_RGB;\n      } else {\n        // Non-RGB attributes from model + override + force RGB color mode\n        w.bg = (this._workCell.bg & ~Attributes.RGB_MASK) | w.bg | Attributes.CM_RGB;\n      }\n    }\n    if (w.hasFg) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      w.fg = (this._workCell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | w.fg | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bg override or fg override was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this._workColors.fg & FgFlags.INVERSE) {\n      if (w.hasBg && !w.hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          w.fg = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | ((this._colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          w.fg = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this._workColors.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        w.hasFg = true;\n      }\n      if (!w.hasBg && w.hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          w.bg = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | ((this._colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          w.bg = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this._workColors.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        w.hasBg = true;\n      }\n    }\n\n    // Use the override if it exists\n    this._workColors.bg = w.hasBg ? w.bg : this._workColors.bg;\n    this._workColors.fg = w.hasFg ? w.fg : this._workColors.fg;\n  }\n\n  private _isCellSelected(x: number, y: number): boolean {\n    if (!this._model.selection.hasSelection) {\n      return false;\n    }\n    y -= this._terminal.buffer.active.viewportY;\n    if (this._model.selection.columnSelectMode) {\n      if (this._model.selection.startCol <= this._model.selection.endCol) {\n        return x >= this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n          x < this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n      }\n      return x < this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n        x >= this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n    }\n    return (y > this._model.selection.viewportStartRow && y < this._model.selection.viewportEndRow) ||\n      (this._model.selection.viewportStartRow === this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportEndRow && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol);\n  }\n\n  private _updateSelectionModel(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    const terminal = this._terminal;\n\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this._model.clearSelection();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this._model.clearSelection();\n      return;\n    }\n\n    this._model.selection.hasSelection = true;\n    this._model.selection.columnSelectMode = columnSelectMode;\n    this._model.selection.viewportStartRow = viewportStartRow;\n    this._model.selection.viewportEndRow = viewportEndRow;\n    this._model.selection.viewportCappedStartRow = viewportCappedStartRow;\n    this._model.selection.viewportCappedEndRow = viewportCappedEndRow;\n    this._model.selection.startCol = start[0];\n    this._model.selection.endCol = end[0];\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // TODO: Acquire CharSizeService properly\n\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!(this._core as any)._charSizeService.width || !(this._core as any)._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be drawn to an integer grid\n    // in order for the char atlas glyphs to not be blurry.\n    this.dimensions.scaledCharWidth = Math.floor((this._core as any)._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case devicePixelRatio is a\n    // floating point number in order to ensure there is enough space to draw the character to the\n    // cell.\n    this.dimensions.scaledCharHeight = Math.ceil((this._core as any)._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is _not_ 1, the resulting value will be\n    // floored since lineHeight can never be lower then 1, this guarentees the scaled cell height\n    // will always be larger than scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y offset within a cell that glyph should draw at in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x offset with a cell that text should draw from in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions, the scaled dimensions define the actual number of pixel in\n    // the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's important that this rounds to nearest integer\n    // and not ceils as browsers often have floating point precision issues where\n    // `window.devicePixelRatio` ends up being something like `1.100000023841858` for example, when\n    // it's actually 1.1. Ceiling may causes blurriness as the backing canvas image is 1 pixel too\n    // large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / this._devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / this._devicePixelRatio);\n\n    // Get the CSS dimensions of an individual cell. This needs to be derived from the calculated\n    // device pixel canvas value above. CharMeasure.width/height by itself is insufficient when the\n    // page is not at 100% zoom level as CharMeasure is measured in CSS pixels, but the actual char\n    // size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.scaledCellHeight / this._devicePixelRatio;\n    this.dimensions.actualCellWidth = this.dimensions.scaledCellWidth / this._devicePixelRatio;\n  }\n\n  private _setCanvasDevicePixelDimensions(width: number, height: number): void {\n    if (this._canvas.width === width && this._canvas.height === height) {\n      return;\n    }\n    // While the actual canvas size has changed, keep scaledCanvasWidth/Height as the value before\n    // the change as it's an exact multiple of the cell sizes.\n    this._canvas.width = width;\n    this._canvas.height = height;\n    this._requestRedrawViewport();\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { WebglCharAtlas } from './WebglCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { Terminal } from 'xterm';\nimport { IColorSet, ITerminal } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: WebglCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: Terminal,\n  colors: IColorSet,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  scaledCharWidth: number,\n  scaledCharHeight: number,\n  devicePixelRatio: number\n): WebglCharAtlas {\n  const newConfig = generateConfig(scaledCellWidth, scaledCellHeight, scaledCharWidth, scaledCharHeight, terminal, colors, devicePixelRatio);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const core: ITerminal = (terminal as any)._core;\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new WebglCharAtlas(document, newConfig, core.unicodeService),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { Terminal, FontWeight } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nconst NULL_COLOR: IColor = {\n  css: '',\n  rgba: 0\n};\n\nexport function generateConfig(scaledCellWidth: number, scaledCellHeight: number, scaledCharWidth: number, scaledCharHeight: number, terminal: Terminal, colors: IColorSet, devicePixelRatio: number): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    selectionBackgroundTransparent: NULL_COLOR,\n    selectionBackgroundOpaque: NULL_COLOR,\n    selectionInactiveBackgroundTransparent: NULL_COLOR,\n    selectionInactiveBackgroundOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: terminal.options.customGlyphs,\n    devicePixelRatio,\n    letterSpacing: terminal.options.letterSpacing,\n    lineHeight: terminal.options.lineHeight,\n    scaledCellWidth,\n    scaledCellHeight,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily,\n    fontSize: terminal.options.fontSize,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    allowTransparency: terminal.options.allowTransparency,\n    drawBoldTextInBrightColors: terminal.options.drawBoldTextInBrightColors,\n    minimumContrastRatio: terminal.options.minimumContrastRatio,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/Constants';\nimport { IRasterizedGlyph, IBoundingBox } from '../Types';\nimport { DEFAULT_COLOR, Attributes, DEFAULT_EXT, UnderlineStyle } from 'common/buffer/Constants';\nimport { throwIfFalsy } from '../WebglUtils';\nimport { IColor } from 'common/Types';\nimport { IDisposable } from 'xterm';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { color, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph, isRestrictedPowerlineGlyph } from 'browser/renderer/RendererUtils';\nimport { IUnicodeService } from 'common/services/Services';\nimport { FourKeyMap } from 'common/MultiKeyMap';\nimport { IdleTaskQueue } from 'common/TaskQueue';\n\n// For debugging purposes, it can be useful to set this to a really tiny value,\n// to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\n/**\n * The amount of the texture to be filled before throwing it away and starting\n * again. Since the throw away and individual glyph draws don't cost too much,\n * this prevent juggling multiple textures in the GL context.\n */\nconst TEXTURE_CAPACITY = Math.floor(TEXTURE_HEIGHT * 0.8);\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  offset: { x: 0, y: 0 },\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\ninterface ICharAtlasActiveRow {\n  x: number;\n  y: number;\n  height: number;\n}\n\n/** Work variables to avoid garbage collection. */\nconst w: { glyph: IRasterizedGlyph | undefined } = {\n  glyph: undefined\n};\n\nexport class WebglCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: FourKeyMap<number, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n  private _cacheMapCombined: FourKeyMap<string, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n\n  // The texture that the atlas is drawn to\n  public cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // Texture atlas current positioning data. The texture packing strategy used is to fill from\n  // left-to-right and top-to-bottom. When the glyph being written is less than half of the current\n  // row's height, the following happens:\n  //\n  // - The current row becomes the fixed height row A\n  // - A new fixed height row B the exact size of the glyph is created below the current row\n  // - A new dynamic height current row is created below B\n  //\n  // This strategy does a good job preventing space being wasted for very short glyphs such as\n  // underscores, hyphens etc. or those with underlines rendered.\n  private _currentRow: ICharAtlasActiveRow = {\n    x: 0,\n    y: 0,\n    height: 0\n  };\n  private readonly _fixedRows: ICharAtlasActiveRow[] = [];\n\n  public hasCanvasChanged = false;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  constructor(\n    document: Document,\n    private readonly _config: ICharAtlasConfig,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this.cacheCanvas = document.createElement('canvas');\n    this.cacheCanvas.width = TEXTURE_WIDTH;\n    this.cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this.cacheCanvas.getContext('2d', { alpha: true }));\n\n    this._tmpCanvas = document.createElement('canvas');\n    this._tmpCanvas.width = this._config.scaledCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCanvas.height = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', {\n      alpha: this._config.allowTransparency,\n      willReadFrequently: true\n    }));\n  }\n\n  public dispose(): void {\n    if (this.cacheCanvas.parentElement) {\n      this.cacheCanvas.parentElement.removeChild(this.cacheCanvas);\n    }\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126, this is not urgent and done in idle callbacks\n    const queue = new IdleTaskQueue();\n    for (let i = 33; i < 126; i++) {\n      queue.enqueue(() => {\n        if (!this._cacheMap.get(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT)) {\n          const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT);\n          this._cacheMap.set(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT, rasterizedGlyph);\n        }\n      });\n    }\n  }\n\n  public beginFrame(): boolean {\n    if (this._currentRow.y > TEXTURE_CAPACITY) {\n      this.clearTexture();\n      this.warmUp();\n      return true;\n    }\n    return false;\n  }\n\n  public clearTexture(): void {\n    if (this._currentRow.x === 0 && this._currentRow.y === 0) {\n      return;\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._cacheMap.clear();\n    this._cacheMapCombined.clear();\n    this._currentRow.x = 0;\n    this._currentRow.y = 0;\n    this._currentRow.height = 0;\n    this._fixedRows.length = 0;\n    this._didWarmUp = false;\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMapCombined, chars, bg, fg, ext);\n  }\n\n  public getRasterizedGlyph(code: number, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMap, code, bg, fg, ext);\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  private _getFromCacheMap(\n    cacheMap: FourKeyMap<string | number, number, number, number, IRasterizedGlyph>,\n    key: string | number,\n    bg: number,\n    fg: number,\n    ext: number\n  ): IRasterizedGlyph {\n    w.glyph = cacheMap.get(key, bg, fg, ext);\n    if (!w.glyph) {\n      w.glyph = this._drawToCache(key, bg, fg, ext);\n      cacheMap.set(key, bg, fg, ext, w.glyph);\n    }\n    return w.glyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean, dim: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n\n    let result: IColor;\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        result = this._getColorFromAnsiIndex(bgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.foreground;\n        } else {\n          result = this._config.colors.background;\n        }\n        break;\n    }\n\n    if (dim) {\n      // Blend here instead of using opacity because transparent colors mess with clipping the\n      // glyph's bounding box\n      result = color.blend(this._config.colors.background, color.multiplyOpacity(result, DIM_OPACITY));\n    }\n\n    return result;\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, dim: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    // TODO: Pass dim along to get min contrast?\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, false, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    let result: IColor;\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        result = this._getColorFromAnsiIndex(fgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.background;\n        } else {\n          result = this._config.colors.foreground;\n        }\n    }\n\n    // Always use an opaque color regardless of allowTransparency\n    if (this._config.allowTransparency) {\n      result = color.opaque(result);\n    }\n\n    // Apply dim to the color, opacity is fine to use for the foreground color\n    if (dim) {\n      result = color.multiplyOpacity(result, DIM_OPACITY);\n    }\n\n    return result;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = rgba.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    this.hasCanvasChanged = true;\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.scaledCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 4;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n    this._workAttributeData.extended.ext = ext;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse, dim);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerlineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const restrictedPowerlineGlyph = chars.length === 1 && isRestrictedPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, dim, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = restrictedPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING * 2;\n\n    // Draw custom characters if applicable\n    let customGlyph = false;\n    if (this._config.customGlyphs !== false) {\n      customGlyph = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight, this._config.fontSize, this._config.devicePixelRatio);\n    }\n\n    // Whether to clear pixels based on a threshold difference between the glyph color and the\n    // background color. This should be disabled when the glyph contains multiple colors such as\n    // underline colors to prevent important colors could get cleared.\n    let enableClearThresholdCheck = !powerlineGlyph;\n\n    let chWidth: number;\n    if (typeof codeOrChars === 'number') {\n      chWidth = this._unicodeService.wcwidth(codeOrChars);\n    } else {\n      chWidth = this._unicodeService.getStringCellWidth(codeOrChars);\n    }\n\n    // Draw underline\n    if (underline) {\n      this._tmpCtx.save();\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      // When the line width is odd, draw at a 0.5 position\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n\n      // Underline color\n      if (this._workAttributeData.isUnderlineColorDefault()) {\n        this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      } else if (this._workAttributeData.isUnderlineColorRGB()) {\n        enableClearThresholdCheck = false;\n        this._tmpCtx.strokeStyle = `rgb(${AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(',')})`;\n      } else {\n        enableClearThresholdCheck = false;\n        let fg = this._workAttributeData.getUnderlineColor();\n        if (this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(fg).css;\n      }\n\n      // Underline style/stroke\n      this._tmpCtx.beginPath();\n      const xLeft = padding;\n      const yTop = Math.ceil(padding + this._config.scaledCharHeight) - yOffset;\n      const yMid = padding + this._config.scaledCharHeight + lineWidth - yOffset;\n      const yBot = Math.ceil(padding + this._config.scaledCharHeight + lineWidth * 2) - yOffset;\n\n      for (let i = 0; i < chWidth; i++) {\n        this._tmpCtx.save();\n        const xChLeft = xLeft + i * this._config.scaledCellWidth;\n        const xChRight = xLeft + (i + 1) * this._config.scaledCellWidth;\n        const xChMid = xChLeft + this._config.scaledCellWidth / 2;\n        switch (this._workAttributeData.extended.underlineStyle) {\n          case UnderlineStyle.DOUBLE:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            this._tmpCtx.moveTo(xChLeft, yBot);\n            this._tmpCtx.lineTo(xChRight, yBot);\n            break;\n          case UnderlineStyle.CURLY:\n            // Choose the bezier top and bottom based on the device pixel ratio, the curly line is\n            // made taller when the line width is  as otherwise it's not very clear otherwise.\n            const yCurlyBot = lineWidth <= 1 ? yBot : Math.ceil(padding + this._config.scaledCharHeight - lineWidth / 2) - yOffset;\n            const yCurlyTop = lineWidth <= 1 ? yTop : Math.ceil(padding + this._config.scaledCharHeight + lineWidth / 2) - yOffset;\n            // Clip the left and right edges of the underline such that it can be drawn just outside\n            // the edge of the cell to ensure a continuous stroke when there are multiple underlined\n            // glyphs adjacent to one another.\n            const clipRegion = new Path2D();\n            clipRegion.rect(xChLeft, yTop, this._config.scaledCellWidth, yBot - yTop);\n            this._tmpCtx.clip(clipRegion);\n            // Start 1/2 cell before and end 1/2 cells after to ensure a smooth curve with other cells\n            this._tmpCtx.moveTo(xChLeft - this._config.scaledCellWidth / 2, yMid);\n            this._tmpCtx.bezierCurveTo(\n              xChLeft - this._config.scaledCellWidth / 2, yCurlyTop,\n              xChLeft, yCurlyTop,\n              xChLeft, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChLeft, yCurlyBot,\n              xChMid, yCurlyBot,\n              xChMid, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChMid, yCurlyTop,\n              xChRight, yCurlyTop,\n              xChRight, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChRight, yCurlyBot,\n              xChRight + this._config.scaledCellWidth / 2, yCurlyBot,\n              xChRight + this._config.scaledCellWidth / 2, yMid\n            );\n            break;\n          case UnderlineStyle.DOTTED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 2, this._config.devicePixelRatio]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.DASHED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 4, this._config.devicePixelRatio * 3]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.SINGLE:\n          default:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n        }\n        this._tmpCtx.stroke();\n        this._tmpCtx.restore();\n      }\n      this._tmpCtx.restore();\n\n      // Draw stroke in the background color for non custom characters in order to give an outline\n      // between the text and the underline. Only do this when font size is >= 12 as the underline\n      // looks odd when the font size is too small\n      if (!customGlyph && this._config.fontSize >= 12) {\n        // This only works when transparency is disabled because it's not clear how to clear stroked\n        // text\n        if (!this._config.allowTransparency && chars !== ' ') {\n          // Measure the text, only draw the stroke if there is a descent beyond an alphabetic text\n          // baseline\n          this._tmpCtx.save();\n          this._tmpCtx.textBaseline = 'alphabetic';\n          const metrics = this._tmpCtx.measureText(chars);\n          this._tmpCtx.restore();\n          if ('actualBoundingBoxDescent' in metrics && metrics.actualBoundingBoxDescent > 0) {\n            // This translates to 1/2 the line width in either direction\n            this._tmpCtx.save();\n            // Clip the region to only draw in valid pixels near the underline to avoid a slight\n            // outline around the whole glyph, as well as additional pixels in the glyph at the top\n            // which would increase GPU memory demands\n            const clipRegion = new Path2D();\n            clipRegion.rect(xLeft, yTop - Math.ceil(lineWidth / 2), this._config.scaledCellWidth, yBot - yTop + Math.ceil(lineWidth / 2));\n            this._tmpCtx.clip(clipRegion);\n            this._tmpCtx.lineWidth = this._config.devicePixelRatio * 3;\n            this._tmpCtx.strokeStyle = backgroundColor.css;\n            this._tmpCtx.strokeText(chars, padding, padding + this._config.scaledCharHeight);\n            this._tmpCtx.restore();\n          }\n        }\n      }\n    }\n\n    // Draw the character\n    if (!customGlyph) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible\n    // even on the bottom row, try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.save();\n          this._tmpCtx.fillStyle = backgroundColor.css;\n          this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.restore();\n          this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw strokethrough\n    if (strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n      this._tmpCtx.lineTo(padding + this._config.scaledCharWidth * chWidth, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    let isEmpty: boolean;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor, foregroundColor, enableClearThresholdCheck);\n    } else {\n      isEmpty = checkCompletelyTransparent(imageData);\n    }\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, restrictedPowerlineGlyph, customGlyph, padding);\n    const clippedImageData = this._clipImageData(imageData, this._workBoundingBox);\n\n    // Find the best atlas row to use\n    let activeRow: ICharAtlasActiveRow;\n    while (true) {\n      // Select the ideal existing row, preferring fixed rows over the current row\n      activeRow = this._currentRow;\n      for (const row of this._fixedRows) {\n        if ((activeRow === this._currentRow || row.height < activeRow.height) && rasterizedGlyph.size.y <= row.height) {\n          activeRow = row;\n        }\n      }\n\n      // Create a new one if vertical space would be wasted, fixing the previously active row in the\n      // process as it now has a fixed height\n      if (activeRow.height > rasterizedGlyph.size.y * 2) {\n        // Fix the current row as the new row is being added below\n        if (this._currentRow.height > 0) {\n          this._fixedRows.push(this._currentRow);\n        }\n\n        // Create the new fixed height row\n        activeRow = {\n          x: 0,\n          y: this._currentRow.y + this._currentRow.height,\n          height: rasterizedGlyph.size.y\n        };\n        this._fixedRows.push(activeRow);\n\n        // Create the new current row below the new fixed height row\n        this._currentRow = {\n          x: 0,\n          y: activeRow.y + activeRow.height,\n          height: 0\n        };\n      }\n\n      // Exit the loop if there is enough room in the row\n      if (activeRow.x + rasterizedGlyph.size.x <= TEXTURE_WIDTH) {\n        break;\n      }\n\n      // If there is enough room in the current row, finish it and try again\n      if (activeRow === this._currentRow) {\n        activeRow.x = 0;\n        activeRow.y += activeRow.height;\n        activeRow.height = 0;\n      } else {\n        this._fixedRows.splice(this._fixedRows.indexOf(activeRow), 1);\n      }\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePosition.x = activeRow.x;\n    rasterizedGlyph.texturePosition.y = activeRow.y;\n    rasterizedGlyph.texturePositionClipSpace.x = activeRow.x / TEXTURE_WIDTH;\n    rasterizedGlyph.texturePositionClipSpace.y = activeRow.y / TEXTURE_HEIGHT;\n\n    // Update atlas current row, for fixed rows the glyph height will never be larger than the row\n    // height\n    activeRow.height = Math.max(activeRow.height, rasterizedGlyph.size.y);\n    activeRow.x += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(clippedImageData, rasterizedGlyph.texturePosition.x, rasterizedGlyph.texturePosition.y);\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean, padding: number): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.scaledCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.scaledCellWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = width - 1; x >= 0; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1) / TEXTURE_WIDTH,\n        y: (boundingBox.bottom - boundingBox.top + 1) / TEXTURE_HEIGHT\n      },\n      offset: {\n        x: -boundingBox.left + padding + ((restrictedGlyph || customGlyph) ? Math.floor((this._config.scaledCellWidth - this._config.scaledCharWidth) / 2) : 0),\n        y: -boundingBox.top + padding + ((restrictedGlyph || customGlyph) ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.scaledCellHeight - this._config.scaledCharHeight) / 2) : 0)\n      }\n    };\n  }\n\n  private _clipImageData(imageData: ImageData, boundingBox: IBoundingBox): ImageData {\n    const width = boundingBox.right - boundingBox.left + 1;\n    const height = boundingBox.bottom - boundingBox.top + 1;\n    const clippedData = new Uint8ClampedArray(width * height * 4);\n    for (let y = boundingBox.top; y <= boundingBox.bottom; y++) {\n      for (let x = boundingBox.left; x <= boundingBox.right; x++) {\n        const oldOffset = y * this._tmpCanvas.width * 4 + x * 4;\n        const newOffset = (y - boundingBox.top) * width * 4 + (x - boundingBox.left) * 4;\n        clippedData[newOffset] = imageData.data[oldOffset];\n        clippedData[newOffset + 1] = imageData.data[oldOffset + 1];\n        clippedData[newOffset + 2] = imageData.data[oldOffset + 2];\n        clippedData[newOffset + 3] = imageData.data[oldOffset + 3];\n      }\n    }\n    return new ImageData(clippedData, width, height);\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, enableThresholdCheck: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    // Check exact match\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold based difference\n      if (enableThresholdCheck &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction checkCompletelyTransparent(imageData: ImageData): boolean {\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset + 3] > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireCharAtlas } from '../atlas/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/Constants';\nimport { ICoreBrowserService } from 'browser/services/Services';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WebglCharAtlas } from 'atlas/WebglCharAtlas';\nimport { throwIfFalsy } from '../WebglUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: WebglCharAtlas | undefined;\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    protected readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._canvas.remove();\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {}\n  public onBlur(terminal: Terminal): void {}\n  public onFocus(terminal: Terminal): void {}\n  public onCursorMove(terminal: Terminal): void {}\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: Terminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCellWidth, this._scaledCellHeight, this._scaledCharWidth, this._scaledCharHeight, this._coreBrowserService.dpr);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - this._coreBrowserService.dpr - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      this._coreBrowserService.dpr * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = this._coreBrowserService.dpr;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + this._coreBrowserService.dpr / 2,\n      y * this._scaledCellHeight + (this._coreBrowserService.dpr / 2),\n      width * this._scaledCellWidth - this._coreBrowserService.dpr,\n      (height * this._scaledCellHeight) - this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipCell(x, y, cell.getWidth());\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Clips a cell to ensure no pixels will be drawn outside of it.\n   * @param x The column to clip.\n   * @param y The row to clip.\n   * @param width The number of columns to clip.\n   */\n  private _clipCell(x: number, y: number, width: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * this._coreBrowserService.dpr}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>,\n    coreBrowserService: ICoreBrowserService,\n    private readonly _coreService: ICoreService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, coreBrowserService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.onOptionsChanged(terminal);\n  }\n\n  public override dispose(): void {\n    this._cursorBlinkStateManager?.dispose();\n    this._cursorBlinkStateManager = undefined;\n    super.dispose();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this.onOptionsChanged(terminal);\n  }\n\n  public onBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(() => {\n          this._render(terminal, true);\n        }, this._coreBrowserService);\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = terminal.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle!;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle!;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (this._coreBrowserService.dpr < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, terminal.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    private _renderCallback: () => void,\n    private _coreBrowserService: ICoreBrowserService\n  ) {\n    this.isCursorVisible = true;\n    if (this._coreBrowserService.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = this._coreBrowserService.window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/Constants';\nimport { is256Color } from '../atlas/CharAtlasUtils';\nimport { ITerminal, IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    terminal: ITerminal,\n    coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'link', zIndex, true, colors, coreBrowserService);\n\n    terminal.linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 8, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  leftPadding?: number;\n  rightPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * The line variants draw beyond the cell and get clipped to ensure the end of the line is not visible.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL, rightPadding: 2 },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M-1,-.5 L1,.5 L-1,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL, leftPadding: 2 },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M2,-.5 L0,.5 L2,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Right semi-circle solid,\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL, rightPadding: 1 },\n  // Right semi-circle line,\n  '\\u{E0B5}': { d: 'M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.STROKE, rightPadding: 1 },\n  // Left semi-circle solid,\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL, leftPadding: 1 },\n  // Left semi-circle line,\n  '\\u{E0B7}': { d: 'M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.STROKE, leftPadding: 1 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight, devicePixelRatio);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight, fontSize, devicePixelRatio);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  devicePixelRatio: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, true, devicePixelRatio));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): void {\n  ctx.beginPath();\n  // Scale the stroke with DPR and font size\n  const cssLineWidth = fontSize / 12;\n  ctx.lineWidth = devicePixelRatio * cssLineWidth;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(\n      args,\n      scaledCellWidth,\n      scaledCellHeight,\n      xOffset,\n      yOffset,\n      false,\n      (charDefinition.leftPadding ?? 0) * (cssLineWidth / 2),\n      (charDefinition.rightPadding ?? 0) * (cssLineWidth / 2)\n    ));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, doClamp: boolean, devicePixelRatio: number, leftPadding: number = 0, rightPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (leftPadding * devicePixelRatio) - (rightPadding * devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (leftPadding * devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport function observeDevicePixelDimensions(element: HTMLElement, parentWindow: Window & typeof globalThis, callback: (deviceWidth: number, deviceHeight: number) => void): IDisposable {\n  // Observe any resizes to the element and extract the actual pixel size of the element if the\n  // devicePixelContentBoxSize API is supported. This allows correcting rounding errors when\n  // converting between CSS pixels and device pixels which causes blurry rendering when device\n  // pixel ratio is not a round number.\n  let observer: ResizeObserver | undefined = new parentWindow.ResizeObserver((entries) => {\n    const entry = entries.find((entry) => entry.target === element);\n    if (!entry) {\n      return;\n    }\n\n    // Disconnect if devicePixelContentBoxSize isn't supported by the browser\n    if (!('devicePixelContentBoxSize' in entry)) {\n      observer?.disconnect();\n      observer = undefined;\n      return;\n    }\n\n    // Fire the callback, ignore events where the dimensions are 0x0 as the canvas is likely hidden\n    const width = entry.devicePixelContentBoxSize[0].inlineSize;\n    const height = entry.devicePixelContentBoxSize[0].blockSize;\n    if (width > 0 && height > 0) {\n      callback(width, height);\n    }\n  });\n  try {\n    observer.observe(element, { box: ['device-pixel-content-box'] } as any);\n  } catch {\n    observer.disconnect();\n    observer = undefined;\n  }\n  return toDisposable(() => observer?.disconnect());\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   */\n  enqueue(task: () => void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      this._tasks[this._i++]();\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      cancelIdleCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = requestIdleCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: IdleDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = performance.now();\n      this._tasks[this._i++]();\n      taskDuration = performance.now() - taskDuration;\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      if (longestTask * 1.5 > deadline.timeRemaining()) {\n        this._start();\n        return;\n      }\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = performance.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - performance.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon, IEvent } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\nimport { ICharacterJoinerService, ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IColorSet } from 'browser/Types';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { isSafari } from 'common/Platform';\nimport { ICoreService, IDecorationService } from 'common/services/Services';\n\nexport class WebglAddon implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n\n  private _onChangeTextureAtlas = new EventEmitter<HTMLElement>();\n  public get onChangeTextureAtlas(): IEvent<HTMLElement> { return this._onChangeTextureAtlas.event; }\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {}\n\n  public activate(terminal: Terminal): void {\n    if (!terminal.element) {\n      throw new Error('Cannot activate WebglAddon before Terminal.open');\n    }\n    if (isSafari) {\n      throw new Error('Webgl is not currently supported on Safari');\n    }\n    this._terminal = terminal;\n    const renderService: IRenderService = (terminal as any)._core._renderService;\n    const characterJoinerService: ICharacterJoinerService = (terminal as any)._core._characterJoinerService;\n    const coreBrowserService: ICoreBrowserService = (terminal as any)._core._coreBrowserService;\n    const coreService: ICoreService = (terminal as any)._core.coreService;\n    const decorationService: IDecorationService = (terminal as any)._core._decorationService;\n    const colors: IColorSet = (terminal as any)._core._colorManager.colors;\n    this._renderer = new WebglRenderer(terminal, colors, characterJoinerService, coreBrowserService, coreService, decorationService, this._preserveDrawingBuffer);\n    forwardEvent(this._renderer.onContextLoss, this._onContextLoss);\n    forwardEvent(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas);\n    renderService.setRenderer(this._renderer);\n  }\n\n  public dispose(): void {\n    if (!this._terminal) {\n      throw new Error('Cannot dispose WebglAddon because it is activated');\n    }\n    const renderService: IRenderService = (this._terminal as any)._core._renderService;\n    renderService.setRenderer((this._terminal as any)._core._createRenderer());\n    renderService.onResize(this._terminal.cols, this._terminal.rows);\n    this._renderer?.dispose();\n    this._renderer = undefined;\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearCharAtlas();\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","INDICES_PER_CELL","BYTES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","w","i","glyph","undefined","leftCellPadding","clippedPixels","GlyphRenderer","Disposable","constructor","_terminal","_colors","_gl","_dimensions","super","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","this","_program","throwIfFalsy","createProgram","register","toDisposable","deleteProgram","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","deleteBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","_atlasTexture","createTexture","deleteTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onResize","beginFrame","_atlas","updateCell","x","y","code","bg","fg","ext","chars","lastBg","_updateCell","array","cols","NULL_CELL_CODE","length","getRasterizedGlyphCombinedChar","getRasterizedGlyph","Math","floor","scaledCellWidth","scaledCharWidth","offset","scaledCharLeft","scaledCharTop","size","scaledCanvasWidth","scaledCanvasHeight","texturePositionClipSpace","cacheCanvas","width","sizeClipSpace","fill","clear","terminal","newCount","rows","viewport","canvas","height","render","renderModel","useProgram","activeBuffer","bufferLength","lineLengths","si","sub","subarray","set","STREAM_DRAW","hasCanvasChanged","uniform1i","activeTexture","TEXTURE0","generateMipmap","uniformMatrix4fv","PROJECTION_MATRIX","uniform2f","drawElementsInstanced","TRIANGLES","setAtlas","atlas","setDimensions","dimensions","BYTES_PER_RECTANGLE","rgba","isDefault","x1","y1","r","g","b","a","RectangleRenderer","_updateCachedColors","DYNAMIC_DRAW","_updateViewportRectangle","setColors","_bgFloat","_colorToFloat32Array","background","_addRectangleFloat","scaledCellHeight","updateBackgrounds","model","vertices","currentStartX","currentBg","currentFg","currentInverse","modelIndex","inverse","rectangleCount","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","_updateRectangle","startX","endX","ansi","foreground","expandFloat32Array","DIM_OPACITY","_addRectangle","color","RENDER_MODEL_EXT_OFFSET","COMBINED_CHAR_BIT_MASK","Uint32Array","selection","hasSelection","columnSelectMode","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startCol","endCol","resize","indexCount","clearSelection","hasFg","hasBg","isSelected","WebglRenderer","_characterJoinerService","_coreBrowserService","coreService","_decorationService","preserveDrawingBuffer","_model","RenderModel","_workCell","CellData","_workColors","_onChangeTextureAtlas","EventEmitter","_onRequestRedraw","_onContextLoss","_core","_renderLayers","LinkRenderLayer","screenElement","CursorRenderLayer","scaledCharHeight","canvasWidth","canvasHeight","actualCellWidth","actualCellHeight","_devicePixelRatio","dpr","_updateDimensions","_canvas","document","createElement","contextAttributes","antialias","depth","getContext","Error","addDisposableDomListener","e","console","log","preventDefault","_contextRestorationTimeout","setTimeout","warn","fire","clearTimeout","removeTerminalFromCache","_initializeWebGLState","_requestRedrawViewport","observeDevicePixelDimensions","window","h","_setCanvasDevicePixelDimensions","appendChild","_isAttached","body","contains","onChangeTextureAtlas","event","onRequestRedraw","onContextLoss","dispose","l","parentElement","removeChild","textureAtlas","_charAtlas","colors","reset","_rectangleRenderer","_refreshCharAtlas","_clearModel","onDevicePixelRatioChange","style","_glyphRenderer","onCharSizeChanged","onBlur","onFocus","onSelectionChanged","start","end","_updateSelectionModel","onCursorMove","onOptionsChanged","acquireCharAtlas","warmUp","clearGlyphRenderer","clearCharAtlas","clearTexture","_updateModel","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","_charSizeService","onGridChanged","row","line","joinedRanges","isJoined","lastCharX","range","j","cell","buffer","ydisp","lines","get","getJoinedCharacters","loadCell","shift","JoinedCellData","translateToString","getChars","getCode","_loadColorsForCell","NULL_CELL_CHAR","extended","forEachDecorationAtCell","d","backgroundColorRGB","foregroundColorRGB","_isCellSelected","isFocused","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","selectionForeground","active","viewportY","max","min","ceil","options","lineHeight","round","letterSpacing","AttributeData","firstCell","content","combinedData","_width","isCombined","getWidth","setFromCharData","value","getAsCharData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","program","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","newLength","newArray","charAtlasCache","devicePixelRatio","newConfig","generateConfig","entry","ownedByIndex","ownedBy","indexOf","configEquals","config","splice","push","core","newEntry","WebglCharAtlas","unicodeService","index","NULL_COLOR","css","clonedColors","cursor","cursorAccent","selectionBackgroundTransparent","selectionInactiveBackgroundTransparent","slice","contrastCache","customGlyphs","fontFamily","fontSize","fontWeight","fontWeightBold","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","TEXTURE_WIDTH","TEXTURE_HEIGHT","TEXTURE_CAPACITY","TRANSPARENT_COLOR","NULL_RASTERIZED_GLYPH","texturePosition","clearColor","imageData","enableThresholdCheck","fgR","fgG","fgB","threshold","abs","isEmpty","data","_config","_unicodeService","_didWarmUp","_cacheMap","FourKeyMap","_cacheMapCombined","_currentRow","_fixedRows","_workBoundingBox","top","left","bottom","right","_workAttributeData","_cacheCtx","alpha","_tmpCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","willReadFrequently","_doWarmUp","queue","IdleTaskQueue","enqueue","DEFAULT_COLOR","DEFAULT_EXT","rasterizedGlyph","_drawToCache","clearRect","_getFromCacheMap","cacheMap","key","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","dim","result","arr","toColorRGB","toColor","blend","multiplyOpacity","_getForegroundColor","fgColorMode","fgColor","bold","excludeFromContrastRatioDemands","minimumContrastColor","_getMinimumContrastColor","opaque","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getColor","bgRgba","fgRgba","ensureContrastRatio","setColor","codeOrChars","String","fromCharCode","allowedWidth","allowedHeight","save","isInvisible","isBold","isInverse","isDim","italic","isItalic","underline","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","backgroundColor","globalCompositeOperation","fillStyle","fillRect","fontStyle","font","textBaseline","TEXT_BASELINE","powerlineGlyph","isPowerlineGlyph","charCodeAt","restrictedPowerlineGlyph","isRestrictedPowerlineGlyph","foregroundColor","padding","customGlyph","tryDrawCustomChar","chWidth","enableClearThresholdCheck","wcwidth","getStringCellWidth","lineWidth","yOffset","isUnderlineColorDefault","strokeStyle","isUnderlineColorRGB","getUnderlineColor","join","beginPath","xLeft","yTop","yMid","yBot","xChLeft","xChRight","xChMid","underlineStyle","moveTo","lineTo","yCurlyBot","yCurlyTop","clipRegion","Path2D","rect","clip","bezierCurveTo","setLineDash","stroke","restore","metrics","measureText","actualBoundingBoxDescent","strokeText","fillText","isBeyondCellBounds","getImageData","checkCompletelyTransparent","_findGlyphBoundingBox","clippedImageData","_clipImageData","activeRow","putImageData","boundingBox","restrictedGlyph","found","alphaOffset","clippedData","Uint8ClampedArray","oldOffset","newOffset","ImageData","_container","id","zIndex","_alpha","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","classList","add","toString","_initCanvas","remove","_ctx","_clearAll","startRow","endRow","colorSet","_setTransparency","oldCanvas","cloneNode","replaceChild","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","_getFont","_clipCell","BaseRenderLayer","container","_onRequestRefreshRowsEvent","coreBrowserService","_coreService","_cell","_state","_cursorRenderers","_renderBarCursor","bind","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","cursorY","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorInitialized","isCursorHidden","baseY","viewportRelativeCursorY","cursorX","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","BLINK_INTERVAL","time","setInterval","linkifier2","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","isFirefox","isLegacyEdge","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","rightPadding","leftPadding","ctx","c","xOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","Map","pattern","tmpCanvas","tmpCtx","startsWith","parseInt","substring","split","map","parseFloat","createPattern","drawPatternChar","boxDrawingDefinition","instructions","Object","entries","actualInstructions","Number","instruction","f","svgToCanvasInstructionMap","args","translateArgs","closePath","drawBoxDrawingChar","powerlineDefinition","cssLineWidth","drawPowerlineChar","clamp","cellWidth","cellHeight","doClamp","element","parentWindow","callback","observer","ResizeObserver","find","target","disconnect","devicePixelContentBoxSize","inlineSize","blockSize","observe","codepoint","isBoxOrBlockGlyph","$r","$g","$b","$a","channels","rgb","toPaddedHex","s","contrastRatio","l1","l2","toCss","toRgba","opacity","toChannels","bgR","bgG","bgB","isOpaque","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","createLinearGradient","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","_listeners","_disposed","_event","listener","arg1","arg2","call","from","to","disposeArray","disposables","_disposables","_isDisposed","unregister","TwoKeyMap","_data","first","second","third","fourth","navigator","userAgent","platform","includes","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","TaskQueue","_tasks","_i","task","_start","flush","_idleCallback","cancelIdleCallback","requestIdleCallback","_process","deadline","taskDuration","longestTask","performance","timeRemaining","PriorityTaskQueue","_requestCallback","_createDeadline","_cancelCallback","identifier","duration","_queue","fillFallback","ExtendedAttrs","static","clone","newObj","hasExtendedAttrs","isBlink","isProtected","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","updateExtended","underlineColor","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","urlId","_ext","_urlId","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_WIDTH","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","codePoint","_interim","decode","input","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","cp","tmp","pos","missing","fourStop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","_preserveDrawingBuffer","activate","renderService","_renderService","characterJoinerService","decorationService","_colorManager","_renderer","forwardEvent","setRenderer","_createRenderer","clearTextureAtlas"],"sourceRoot":""}