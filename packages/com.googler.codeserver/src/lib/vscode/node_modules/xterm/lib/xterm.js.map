{"version":3,"file":"xterm.js","mappings":"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CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/ColorManager.ts","webpack://xterm/./src/browser/Dom.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/Constants.ts","webpack://xterm/./src/browser/renderer/RendererUtils.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/TypedArrayUtils.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/DirtyRowService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor() {\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string, value: any): void {\n    switch (key) {\n      case 'minimumContrastRatio':\n        this._contrastCache.clear();\n        break;\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    this.colors.selectionBackgroundTransparent = this._parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    this.colors.selectionBackgroundOpaque = color.blend(this.colors.background, this.colors.selectionBackgroundTransparent);\n    this.colors.selectionInactiveBackgroundTransparent = this._parseColor(theme.selectionInactiveBackground, this.colors.selectionBackgroundTransparent);\n    this.colors.selectionInactiveBackgroundOpaque = color.blend(this.colors.background, this.colors.selectionInactiveBackgroundTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionBackgroundTransparent = color.opacity(this.colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(this.colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionInactiveBackgroundTransparent = color.opacity(this.colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    this.colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(this.colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        this.colors.ansi[i + 16] = this._parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    cssString: string | undefined,\n    fallback: IColor\n  ): IColor {\n    if (cssString !== undefined) {\n      try {\n        return css.toColor(cssString);\n      } catch {\n        // no-op\n      }\n    }\n    return fallback;\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._lastMouseEvent = undefined;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n          // OSC links always use underline and pointer decorations\n          result.push({\n            text,\n            range,\n            activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n            hover: (e, text) => linkHandler?.hover?.(e, text, range),\n            leave: (e, text) => linkHandler?.leave?.(e, text, range)\n          });\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._colorManager.colors.ansi[req.index]\n            : this._colorManager.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n          else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n          break;\n        case ColorRequestType.RESTORE:\n          this._colorManager.restoreColor(req.index);\n          break;\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager();\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e, this.optionsService.rawOptions[e])));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.canvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.canvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.actualCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.actualCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / this._coreBrowserService.dpr;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.scaledCharWidth = this._charSizeService.width * dpr;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / dpr);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / dpr);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = this._colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? this._colors.selectionBackgroundOpaque : this._colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : this._textarea.ownerDocument;\n    return docOrShadowRoot.activeElement === this._textarea && this._textarea.ownerDocument.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.canvasWidth\n      || coords[1] >= this._renderService.dimensions.canvasHeight) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.actualCellWidth),\n      row: Math.floor(coords[1] / this._renderService.dimensions.actualCellHeight),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.onResize(cols, rows));\n    } else {\n      this._renderer.onResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _currentLinkId?: number;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._currentLinkId !== undefined) {\n        this._oscLinkService.addLineToLink(this._currentLinkId, this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._currentLinkId !== undefined) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._currentLinkId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.extended.urlId = this._currentLinkId;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    this._currentLinkId = undefined;\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   */\n  enqueue(task: () => void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      this._tasks[this._i++]();\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = performance.now();\n      this._tasks[this._i++]();\n      taskDuration = performance.now() - taskDuration;\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      if (longestTask * 1.5 > deadline.timeRemaining()) {\n        this._start();\n        return;\n      }\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = performance.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - performance.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/** Work variables to avoid garbage collection. */\nconst w: { startIndex: number } = {\n  startIndex: 0\n};\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    w.startIndex = index * CELL_SIZE;\n    cell.content = this._data[w.startIndex + Cell.CONTENT];\n    cell.fg = this._data[w.startIndex + Cell.FG];\n    cell.bg = this._data[w.startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately in an upcoming microtask to minimize reduce input,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n/** Work variables to avoid garbage collection. */\nconst w = {\n  xmin: 0,\n  xmax: 0\n};\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      w.xmin = d.options.x ?? 0;\n      w.xmax = w.xmin + (d.options.width ?? 1);\n      if (x >= w.xmin && x < w.xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle } from 'common/Types';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n  readonly options: Required<ITerminalOptions>;\n\n  readonly onOptionChange: IEvent<string>;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","dispose","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","r","g","b","channels","toCss","toRgba","c","_contrastCache","ColorContrastCache","foreground","background","cursor","cursorAccent","selectionForeground","undefined","selectionBackgroundTransparent","selectionBackgroundOpaque","color","blend","selectionInactiveBackgroundTransparent","selectionInactiveBackgroundOpaque","ansi","slice","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selectionBackground","selectionInactiveBackground","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","Math","min","restoreColor","slot","_restoreColors","cssString","fallback","elements","parentElement","node","type","handler","options","disposed","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","getDisposeArrayDisposable","currentLink","_currentLink","onShowLinkUnderline","event","onHideLinkUnderline","_lastMouseEvent","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","cell","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","onSelectionChange","onBell","onFocus","_colorManager","req","acc","ident","toColorRGB","C0","ESC","toRgbString","C1_ESCAPED","ST","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","ColorManager","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","_createRenderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","MouseService","IMouseService","Viewport","amount","onRequestSyncScrollBar","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","scaledCellHeight","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","onDispose","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","o","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","INVERTED_DEFAULT_COLOR","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_colors","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","scaledCharWidth","scaledCharHeight","scaledCellWidth","scaledCharLeft","scaledCharTop","scaledCanvasWidth","scaledCanvasHeight","_updateDimensions","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","opaque","onDevicePixelRatioChange","onCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","onOptionsChanged","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","ensureContrastRatio","padChar","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","onTrim","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","onCharSizeChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","_handleOptionsChanged","observer","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","onRefreshRequest","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","setRenderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","onDelete","onInsert","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","canvas","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onData","onBinary","_writeBuffer","handleUserInput","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","onWriteParsed","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","_currentLinkId","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","fill","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","parseColor","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","includes","isSafari","test","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","performance","timeRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","fillFallback","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","w","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","_nextId","isDisposed","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","queueMicrotask","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","BufferApiView","_alternate","onBufferChange","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","name","addProtocol","addEncoding","protocol","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","xmin","xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","_end","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","UnicodeV6","_activeProvider","onChange","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}