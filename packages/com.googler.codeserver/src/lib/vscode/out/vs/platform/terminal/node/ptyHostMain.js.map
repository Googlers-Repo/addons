{"version":3,"sources":["out-vscode-reh-web/vs/platform/terminal/node/fake","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/decorators.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/errors.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/arrays.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/functional.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/iterator.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/lazy.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/lifecycle.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/linkedList.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/platform.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/process.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/path.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/processes.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/stopwatch.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/event.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/cancellation.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/cache.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/stream.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/strings.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/map.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/normalization.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/types.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/objects.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/uri.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/console.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/marshalling.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/node/pfs.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/node/powershell.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/node/processes.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/node/ps.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/node/shell.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/date.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/base/common/errorMessage.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/environment/common/environmentService.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/environment/node/argv.ts","out-vscode-reh-web/vs/platform/terminal/node/vs/platform/environment/node/userDataPath.js","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/environment/node/environmentService.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/files/common/files.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/log/common/log.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/log/common/logIpc.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/log/node/spdlogLog.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/product/common/product.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/product/common/productService.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/capabilities/bufferMarkCapability.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/capabilities/commandDetectionCapability.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/capabilities/cwdDetectionCapability.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/capabilities/partialCommandDetectionCapability.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/capabilities/terminalCapabilityStore.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/requestStore.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/terminal.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/terminalAutoResponder.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/terminalDataBuffering.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/terminalEnvironment.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/terminalStrings.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/common/xterm/shellIntegrationAddon.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/childProcessMonitor.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/heartbeatService.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/terminalEnvironment.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/windowsShellHelper.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/terminalProcess.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/ptyService.ts","out-vscode-reh-web/vs/platform/terminal/node/file:/vscode/code-server/lib/vscode/src/vs/platform/terminal/node/ptyHostMain.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'CodeExpectedError';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'CodeExpectedError';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// eslint-disable-next-line no-debugger\n\t\tdebugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => any = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function findLast<T>(arr: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = lastIndex(arr, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn arr[idx];\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function lastOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\n/**\n * @deprecated Use `[].flat()`\n */\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tconst result = array.splice(index, deleteCount);\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findMinBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findMaxBy(items, (a, b) => -comparator(a, b));\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: readonly T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable<T> {\n\tpublic static readonly empty = new CallbackIterable<never>(_callback => { });\n\n\tconstructor(\n\t\t/**\n\t\t * Calls the callback for every item.\n\t\t * Stops when the callback returns false.\n\t\t*/\n\t\tpublic readonly iterate: (callback: (item: T) => boolean) => void\n\t) {\n\t}\n\n\tforEach(handler: (item: T) => void) {\n\t\tthis.iterate(item => { handler(item); return true; });\n\t}\n\n\ttoArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tthis.iterate(item => { result.push(item); return true; });\n\t\treturn result;\n\t}\n\n\tfilter(predicate: (item: T) => boolean): CallbackIterable<T> {\n\t\treturn new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n\t}\n\n\tmap<TResult>(mapFn: (item: T) => TResult): CallbackIterable<TResult> {\n\t\treturn new CallbackIterable<TResult>(cb => this.iterate(item => cb(mapFn(item))));\n\t}\n\n\tsome(predicate: (item: T) => boolean): boolean {\n\t\tlet result = false;\n\t\tthis.iterate(item => { result = predicate(item); return !result; });\n\t\treturn result;\n\t}\n\n\tfindFirst(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLast(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLastMaxBy(comparator: Comparator<T>): T | undefined {\n\t\tlet result: T | undefined;\n\t\tlet first = true;\n\t\tthis.iterate(item => {\n\t\t\tif (first || CompareResult.isGreaterThan(comparator(item, result!))) {\n\t\t\t\tfirst = false;\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => unknown): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\texport function forEach<T>(iterable: Iterable<T>, fn: (t: T, index: number) => any): void {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tfn(element, index++);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function collect<T>(iterable: Iterable<T>): T[] {\n\t\treturn consume(iterable)[0];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A value that is resolved synchronously when it is first needed.\n */\nexport interface Lazy<T> {\n\n\thasValue(): boolean;\n\n\n\tgetValue(): T;\n\n\n\tmap<R>(f: (x: T) => R): Lazy<R>;\n}\n\nexport class Lazy<T> {\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\thasValue() { return this._didRun; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n\n\t/**\n\t * Create a new lazy value that is the result of applying `f` to the wrapped value.\n\t *\n\t * This does not force the evaluation of the current lazy value.\n\t */\n\tmap<R>(f: (x: T) => R): Lazy<R> {\n\t\treturn new Lazy<R>(() => f(this.getValue()));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nfunction markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new AggregateError(errors, 'Encountered errors while disposing of store');\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\nexport function disposeIfDisposable<T extends IDisposable | object>(disposables: Array<T>): Array<T> {\n\tfor (const d of disposables) {\n\t\tif (isDisposable(d)) {\n\t\t\td.dispose();\n\t\t}\n\t}\n\treturn [];\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: once(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Returns `true` if this object has been disposed\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable implements IDisposable {\n\n\tdispose: () => void = () => { };\n\tunset: () => void = () => { };\n\tisset: () => boolean = () => false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tset(fn: Function) {\n\t\tlet callback: Function | undefined = fn;\n\t\tthis.unset = () => callback = undefined;\n\t\tthis.isset = () => callback !== undefined;\n\t\tthis.dispose = () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = undefined;\n\t\t\t\tmarkAsDisposed(this);\n\t\t\t}\n\t\t};\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isMobile = _userAgent?.indexOf('Mobi') >= 0;\n\t_isWeb = true;\n\n\t_locale = LANGUAGE_DEFAULT;\n\n\t_language = _locale;\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals, INodeProcess, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isLinux, isMacintosh } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_(?!SHELL_LOGIN).+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t\t/^CODE_SERVER_.+$/,\n\t\t/^CS_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: IProcessEnvironment | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (isMacintosh) {\n\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/104525\n\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\tdelete env['DYLD_LIBRARY_PATH'];\n\t}\n\n\tif (isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, DisposableStore, IDisposable, SafeDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IObservable, IObserver } from 'vs/base/common/observable';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\n// _enableSnapshotPotentialLeakWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onListenerDidAdd: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onListenerDidAdd = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> extends IDisposable {\n\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tprivate readonly disposables = new DisposableStore();\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn, this.disposables));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn, this.disposables));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn, this.disposables));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial, this.disposables));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event, undefined, this.disposables));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold, this.disposables));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.disposables.dispose();\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => any): IDisposable {\n\t\thandler(undefined);\n\t\treturn event(e => handler(e));\n\t}\n\n\texport function runAndSubscribeWithStore<T>(event: Event<T>, handler: (e: T | undefined, disposableStore: DisposableStore) => any): IDisposable {\n\t\tlet store: DisposableStore | null = null;\n\n\t\tfunction run(e: T | undefined) {\n\t\t\tstore?.dispose();\n\t\t\tstore = new DisposableStore();\n\t\t\thandler(e, store);\n\t\t}\n\n\t\trun(undefined);\n\t\tconst disposable = event(e => run(e));\n\t\treturn toDisposable(() => {\n\t\t\tdisposable.dispose();\n\t\t\tstore?.dispose();\n\t\t});\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly obs: IObservable<T, any>, store: DisposableStore | undefined) {\n\t\t\tconst options = {\n\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\tobs.addObserver(this);\n\t\t\t\t},\n\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\tobs.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// console.assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservable<T, TChange>, _change: TChange): void {\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\tif (--this._counter === 0) {\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this.obs.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\texport function fromObservable<T>(obs: IObservable<T, any>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n}\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nexport class EventProfiling {\n\n\tstatic readonly all = new Set<EventProfiling>();\n\n\tprivate static _idPool = 0;\n\n\treadonly name: string;\n\tpublic listenerCount: number = 0;\n\tpublic invocationCount = 0;\n\tpublic elapsedOverall = 0;\n\tpublic durations: number[] = [];\n\n\tprivate _stopWatch?: StopWatch;\n\n\tconstructor(name: string) {\n\t\tthis.name = `${name}_${EventProfiling._idPool++}`;\n\t\tEventProfiling.all.add(this);\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis.listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis.durations.push(elapsed);\n\t\t\tthis.elapsedOverall += elapsed;\n\t\t\tthis.invocationCount += 1;\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\treturn new Stacktrace(new Error().stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\nclass Listener<T> {\n\n\treadonly subscription = new SafeDisposable();\n\n\tconstructor(\n\t\treadonly callback: (e: T) => void,\n\t\treadonly callbackThis: any | undefined,\n\t\treadonly stack: Stacktrace | undefined\n\t) { }\n\n\tinvoke(e: T) {\n\t\tthis.callback.call(this.callbackThis, e);\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: EventDeliveryQueue;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = Array.from(this._listeners);\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tfor (const listener of listeners) {\n\t\t\t\t\t\t\tif (listener.subscription.isset()) {\n\t\t\t\t\t\t\t\tlistener.subscription.unset();\n\t\t\t\t\t\t\t\tlistener.stack?.print();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners.clear();\n\t\t\t}\n\t\t\tthis._deliveryQueue?.clear(this);\n\t\t\tthis._options?.onLastListenerRemove?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (callback: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tlet removeMonitor: Function | undefined;\n\t\t\t\tlet stack: Stacktrace | undefined;\n\t\t\t\tif (this._leakageMon && this._listeners.size >= 30) {\n\t\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\t\tstack = Stacktrace.create();\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(stack, this._listeners.size + 1);\n\t\t\t\t}\n\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tstack = stack ?? Stacktrace.create();\n\t\t\t\t}\n\n\t\t\t\tconst listener = new Listener(callback, thisArgs, stack);\n\t\t\t\tconst removeListener = this._listeners.push(listener);\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options?.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, callback, thisArgs);\n\t\t\t\t}\n\n\t\t\t\tconst result = listener.subscription.set(() => {\n\t\t\t\t\tremoveMonitor?.();\n\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new PrivateEventDeliveryQueue();\n\t\t\t}\n\n\t\t\tfor (const listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push(this, listener, event);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\tthis._deliveryQueue.deliver();\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\thasListeners(): boolean {\n\t\tif (!this._listeners) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this._listeners.isEmpty();\n\t}\n}\n\nexport class EventDeliveryQueue {\n\tprotected _queue = new LinkedList<EventDeliveryQueueElement>();\n\n\tget size(): number {\n\t\treturn this._queue.size;\n\t}\n\n\tpush<T>(emitter: Emitter<T>, listener: Listener<T>, event: T): void {\n\t\tthis._queue.push(new EventDeliveryQueueElement(emitter, listener, event));\n\t}\n\n\tclear<T>(emitter: Emitter<T>): void {\n\t\tconst newQueue = new LinkedList<EventDeliveryQueueElement>();\n\t\tfor (const element of this._queue) {\n\t\t\tif (element.emitter !== emitter) {\n\t\t\t\tnewQueue.push(element);\n\t\t\t}\n\t\t}\n\t\tthis._queue = newQueue;\n\t}\n\n\tdeliver(): void {\n\t\twhile (this._queue.size > 0) {\n\t\t\tconst element = this._queue.shift()!;\n\t\t\ttry {\n\t\t\t\telement.listener.invoke(element.event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * An `EventDeliveryQueue` that is guaranteed to be used by a single `Emitter`.\n */\nclass PrivateEventDeliveryQueue extends EventDeliveryQueue {\n\toverride clear<T>(emitter: Emitter<T>): void {\n\t\t// Here we can just clear the entire linked list because\n\t\t// all elements are guaranteed to belong to this emitter\n\t\tthis._queue.clear();\n\t}\n}\n\nclass EventDeliveryQueueElement<T = any> {\n\tconstructor(\n\t\treadonly emitter: Emitter<T>,\n\t\treadonly listener: Listener<T>,\n\t\treadonly event: T\n\t) { }\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener.callback);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener.invoke(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tif (this._eventQueue.size > 0) {\n\t\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\t\tthis._eventQueue.clear();\n\t\t\t\t\tsuper.fire(this._mergeFn(events));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\n\t\tif (!this.hasListeners()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tthis._parentListener?.dispose();\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: string | undefined = undefined;\n\n\tconstructor(private readonly fn: (arg: TArg) => TComputed) {\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = JSON.stringify(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this.fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache (referential equality) to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TValue> {\n\tprivate readonly _map = new Map<TArg, TValue>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TValue> {\n\t\treturn this._map;\n\t}\n\n\tconstructor(private readonly fn: (arg: TArg) => TValue) { }\n\n\tpublic get(arg: TArg): TValue {\n\t\tif (this._map.has(arg)) {\n\t\t\treturn this._map.get(arg)!;\n\t\t}\n\t\tconst value = this.fn(arg);\n\t\tthis._map.set(arg, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): IDisposable {\n\tlet destroyed = false;\n\n\tstream.on('error', error => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n\n\treturn toDisposable(() => destroyed = true);\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from 'vs/base/common/cache';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\nexport function charCount(str: string): number {\n\tconst iterator = new GraphemeIterator(str);\n\tlet length = 0;\n\twhile (!iterator.eol()) {\n\t\tlength++;\n\t\titerator.nextGraphemeLength();\n\t}\n\treturn length;\n}\n\nlet CONTAINS_RTL: RegExp | undefined = undefined;\n\nfunction makeContainsRtl() {\n\t// Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n\treturn /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\tif (!CONTAINS_RTL) {\n\t\tCONTAINS_RTL = makeContainsRtl();\n\t}\n\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>((locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.getValue();\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.getValue();\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from 'vs/base/common/arrays';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _valueLen!: number;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\tthis._value = key;\n\t\tthis._valueLen = key.length;\n\t\tfor (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n\t\t\tconst ch = this._value.charCodeAt(pos);\n\t\t\tif (!(ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._valueLen;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._valueLen; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _ignorePathCasing: (uri: URI) => boolean,\n\t\tprivate readonly _ignoreQueryAndFragment: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (!this._ignoreQueryAndFragment(key)) {\n\t\t\tif (this._value.query) {\n\t\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t\t}\n\t\t\tif (this._value.fragment) {\n\t\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t\t}\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1,\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false, ignoreQueryAndFragment: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n\t}\n\n\tstatic forPaths<E>(ignorePathCasing = false): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator(undefined, !ignorePathCasing));\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\t// replace deleted-node with the min-node of the right branch.\n\t\t\t\t// If there is no true min-node leave things as they are\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tif (min.key) {\n\t\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\t\tthis._delete(min.key!, false);\n\t\t\t\t\tnode.key = key;\n\t\t\t\t\tnode.value = value;\n\t\t\t\t\tnode.segment = segment;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = node.right!.rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = node.left!.rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate _entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tconst result: [K, V][] = [];\n\t\tthis._dfsEntries(node, result);\n\t\treturn result[Symbol.iterator]();\n\t}\n\n\tprivate _dfsEntries(node: TernarySearchTreeNode<K, V> | undefined, bucket: [K, V][]) {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tthis._dfsEntries(node.left, bucket);\n\t\t}\n\t\tif (node.value) {\n\t\t\tbucket.push([node.key!, node.value]);\n\t\t}\n\t\tif (node.mid) {\n\t\t\tthis._dfsEntries(node.mid, bucket);\n\t\t}\n\t\tif (node.right) {\n\t\t\tthis._dfsEntries(node.right, bucket);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = str.normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\t// transform into NFD form and remove accents\n\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\tconst regex = /[\\u0300-\\u036f]/g;\n\treturn function (str: string) {\n\t\treturn normalizeNFD(str).replace(regex, '');\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj: unknown): obj is Object {\n\tconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\treturn typeof obj === 'object'\n\t\t&& obj instanceof TypedArray;\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (const key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Given an object with all optional properties, requires at least one to be defined.\n * i.e. AtLeastOne<MyObject>;\n */\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tsuffix += pathChars.charAt(Math.floor(Math.random() * pathChars.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isTypedArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\ntype obj = { [key: string]: any };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport * as paths from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t\t_validateUri(result, true);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\nexport interface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[]; stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledId } from './marshallingIds';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t\tcase MarshalledId.Date: return <any>new Date(obj.source);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractive = 'vscode-interactive';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _remoteResourcesPath: string = `/${Schemas.vscodeRemoteResource}`;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(serverRootPath: string): void {\n\t\tthis._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/** Can be passed into the Delayed to defer using a microtask */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T>{\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t * An event that fires when every promise in the queue\n\t * has started to execute. In other words: no work is\n\t * pending to be scheduled.\n\t *\n\t * This is NOT an event that signals when all promises\n\t * have finished though.\n\t */\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): ILimiter<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tthis.pendingWork.push(...units);\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface INextTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithNextTask {\n\treadonly next: INextTask;\n}\n\nexport class TaskSequentializer {\n\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: INextTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending?.promise;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n\n\thasNext(): this is ITaskSequentializerWithNextTask {\n\t\treturn !!this._next;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._next?.promise ?? this._pending?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(new CancellationError());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { promisify } from 'util';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isEqualOrParent, isRootOrDriveLetter, randomPath } from 'vs/base/common/extpath';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provided path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nasync function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rm\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = randomPath(tmpdir());\n\t\ttry {\n\t\t\t// Intentionally using `fs.promises` here to skip\n\t\t\t// the patched graceful-fs method that can result\n\t\t\t// in very long running `rename` calls when the\n\t\t\t// folder is locked by a file watcher. We do not\n\t\t\t// really want to slow down this operation more\n\t\t\t// than necessary and we have a fallback to delete\n\t\t\t// via unlink.\n\t\t\t// https://github.com/microsoft/vscode/issues/139908\n\t\t\tawait fs.promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\treturn; // ignore - path to delete did not exist\n\t\t\t}\n\n\t\t\treturn rimrafUnlink(path); // otherwise fallback to unlink\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn promisify(fs.rm)(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmSync(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nasync function readdir(path: string): Promise<string[]>;\nasync function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nasync function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : promisify(fs.readdir)(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await promisify(fs.readdir)(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await Promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convenience method to read all children of a path that\n * are directories.\n */\nasync function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await Promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await Promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await Promises.stat(await Promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v14.16.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nfunction writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\ninterface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\nexport function configureFlushOnWrite(enabled: boolean): void {\n\tcanFlush = enabled;\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\t// https://github.com/microsoft/vscode/issues/9589\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tconfigureFlushOnWrite(false);\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tconfigureFlushOnWrite(false);\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - allows to move across multiple disks\n */\nasync function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\ttry {\n\t\tawait Promises.rename(source, target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string; target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nasync function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait Promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait Promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait Promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await Promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait Promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Promise based fs methods\n\n/**\n * Prefer this helper class over the `fs.promises` API to\n * enable `graceful-fs` to function properly. Given issue\n * https://github.com/isaacs/node-graceful-fs/issues/160 it\n * is evident that the module only takes care of the non-promise\n * based fs methods.\n *\n * Another reason is `realpath` being entirely different in\n * the promise based implementation compared to the other\n * one (https://github.com/microsoft/vscode/issues/118562)\n *\n * Note: using getters for a reason, since `graceful-fs`\n * patching might kick in later after modules have been\n * loaded we need to defer access to fs methods.\n * (https://github.com/microsoft/vscode/issues/124176)\n */\nexport const Promises = new class {\n\n\t//#region Implemented by node.js\n\n\tget access() { return promisify(fs.access); }\n\n\tget stat() { return promisify(fs.stat); }\n\tget lstat() { return promisify(fs.lstat); }\n\tget utimes() { return promisify(fs.utimes); }\n\n\tget read() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes read, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number, length: number, position: number | null) => {\n\t\t\treturn new Promise<{ bytesRead: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesRead, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\tget readFile() { return promisify(fs.readFile); }\n\n\tget write() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes written, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number | undefined | null, length: number | undefined | null, position: number | undefined | null) => {\n\t\t\treturn new Promise<{ bytesWritten: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.write(fd, buffer, offset, length, position, (err, bytesWritten, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesWritten, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\n\tget appendFile() { return promisify(fs.appendFile); }\n\n\tget fdatasync() { return promisify(fs.fdatasync); }\n\tget truncate() { return promisify(fs.truncate); }\n\n\tget rename() { return promisify(fs.rename); }\n\tget copyFile() { return promisify(fs.copyFile); }\n\n\tget open() { return promisify(fs.open); }\n\tget close() { return promisify(fs.close); }\n\n\tget symlink() { return promisify(fs.symlink); }\n\tget readlink() { return promisify(fs.readlink); }\n\n\tget chmod() { return promisify(fs.chmod); }\n\n\tget mkdir() { return promisify(fs.mkdir); }\n\n\tget unlink() { return promisify(fs.unlink); }\n\tget rmdir() { return promisify(fs.rmdir); }\n\n\tget realpath() { return promisify(fs.realpath); }\n\n\t//#endregion\n\n\t//#region Implemented by us\n\n\tasync exists(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tawait Promises.access(path);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget readdir() { return readdir; }\n\tget readDirsInDir() { return readDirsInDir; }\n\n\tget writeFile() { return writeFile; }\n\n\tget rm() { return rimraf; }\n\n\tget move() { return move; }\n\tget copy() { return copy; }\n\n\t//#endregion\n};\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\n\n// This is required, since parseInt(\"7-preview\") will return 7.\nconst IntRegex: RegExp = /^\\d+$/;\n\nconst PwshMsixRegex: RegExp = /^Microsoft.PowerShell_.*/;\nconst PwshPreviewMsixRegex: RegExp = /^Microsoft.PowerShellPreview_.*/;\n\nconst enum Arch {\n\tx64,\n\tx86,\n\tARM\n}\n\nlet processArch: Arch;\nswitch (process.arch) {\n\tcase 'ia32':\n\tcase 'x32':\n\t\tprocessArch = Arch.x86;\n\t\tbreak;\n\tcase 'arm':\n\tcase 'arm64':\n\t\tprocessArch = Arch.ARM;\n\t\tbreak;\n\tdefault:\n\t\tprocessArch = Arch.x64;\n\t\tbreak;\n}\n\n/*\nCurrently, here are the values for these environment variables on their respective archs:\n\nOn x86 process on x86:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on x64:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is AMD64\n\nOn x64 process on x64:\nPROCESSOR_ARCHITECTURE is AMD64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn ARM process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on ARM:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is ARM64\n\nOn x64 process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n*/\nlet osArch: Arch;\nif (process.env['PROCESSOR_ARCHITEW6432']) {\n\tosArch = process.env['PROCESSOR_ARCHITEW6432'] === 'ARM64'\n\t\t? Arch.ARM\n\t\t: Arch.x64;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'ARM64') {\n\tosArch = Arch.ARM;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'X86') {\n\tosArch = Arch.x86;\n} else {\n\tosArch = Arch.x64;\n}\n\nexport interface IPowerShellExeDetails {\n\treadonly displayName: string;\n\treadonly exePath: string;\n}\n\nexport interface IPossiblePowerShellExe extends IPowerShellExeDetails {\n\texists(): Promise<boolean>;\n}\n\nclass PossiblePowerShellExe implements IPossiblePowerShellExe {\n\tconstructor(\n\t\tpublic readonly exePath: string,\n\t\tpublic readonly displayName: string,\n\t\tprivate knownToExist?: boolean) { }\n\n\tpublic async exists(): Promise<boolean> {\n\t\tif (this.knownToExist === undefined) {\n\t\t\tthis.knownToExist = await pfs.SymlinkSupport.existsFile(this.exePath);\n\t\t}\n\t\treturn this.knownToExist;\n\t}\n}\n\nfunction getProgramFilesPath(\n\t{ useAlternateBitness = false }: { useAlternateBitness?: boolean } = {}): string | null {\n\n\tif (!useAlternateBitness) {\n\t\t// Just use the native system bitness\n\t\treturn process.env.ProgramFiles || null;\n\t}\n\n\t// We might be a 64-bit process looking for 32-bit program files\n\tif (processArch === Arch.x64) {\n\t\treturn process.env['ProgramFiles(x86)'] || null;\n\t}\n\n\t// We might be a 32-bit process looking for 64-bit program files\n\tif (osArch === Arch.x64) {\n\t\treturn process.env.ProgramW6432 || null;\n\t}\n\n\t// We're a 32-bit process on 32-bit Windows, there is no other Program Files dir\n\treturn null;\n}\n\nasync function findPSCoreWindowsInstallation(\n\t{ useAlternateBitness = false, findPreview = false }:\n\t\t{ useAlternateBitness?: boolean; findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\n\tconst programFilesPath = getProgramFilesPath({ useAlternateBitness });\n\tif (!programFilesPath) {\n\t\treturn null;\n\t}\n\n\tconst powerShellInstallBaseDir = path.join(programFilesPath, 'PowerShell');\n\n\t// Ensure the base directory exists\n\tif (!await pfs.SymlinkSupport.existsDirectory(powerShellInstallBaseDir)) {\n\t\treturn null;\n\t}\n\n\tlet highestSeenVersion: number = -1;\n\tlet pwshExePath: string | null = null;\n\tfor (const item of await pfs.Promises.readdir(powerShellInstallBaseDir)) {\n\n\t\tlet currentVersion: number = -1;\n\t\tif (findPreview) {\n\t\t\t// We are looking for something like \"7-preview\"\n\n\t\t\t// Preview dirs all have dashes in them\n\t\t\tconst dashIndex = item.indexOf('-');\n\t\t\tif (dashIndex < 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Verify that the part before the dash is an integer\n\t\t\t// and that the part after the dash is \"preview\"\n\t\t\tconst intPart: string = item.substring(0, dashIndex);\n\t\t\tif (!IntRegex.test(intPart) || item.substring(dashIndex + 1) !== 'preview') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(intPart, 10);\n\t\t} else {\n\t\t\t// Search for a directory like \"6\" or \"7\"\n\t\t\tif (!IntRegex.test(item)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(item, 10);\n\t\t}\n\n\t\t// Ensure we haven't already seen a higher version\n\t\tif (currentVersion <= highestSeenVersion) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Now look for the file\n\t\tconst exePath = path.join(powerShellInstallBaseDir, item, 'pwsh.exe');\n\t\tif (!await pfs.SymlinkSupport.existsFile(exePath)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tpwshExePath = exePath;\n\t\thighestSeenVersion = currentVersion;\n\t}\n\n\tif (!pwshExePath) {\n\t\treturn null;\n\t}\n\n\tconst bitness: string = programFilesPath.includes('x86') ? ' (x86)' : '';\n\tconst preview: string = findPreview ? ' Preview' : '';\n\n\treturn new PossiblePowerShellExe(pwshExePath, `PowerShell${preview}${bitness}`, true);\n}\n\nasync function findPSCoreMsix({ findPreview }: { findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\t// We can't proceed if there's no LOCALAPPDATA path\n\tif (!process.env.LOCALAPPDATA) {\n\t\treturn null;\n\t}\n\n\t// Find the base directory for MSIX application exe shortcuts\n\tconst msixAppDir = path.join(process.env.LOCALAPPDATA, 'Microsoft', 'WindowsApps');\n\n\tif (!await pfs.SymlinkSupport.existsDirectory(msixAppDir)) {\n\t\treturn null;\n\t}\n\n\t// Define whether we're looking for the preview or the stable\n\tconst { pwshMsixDirRegex, pwshMsixName } = findPreview\n\t\t? { pwshMsixDirRegex: PwshPreviewMsixRegex, pwshMsixName: 'PowerShell Preview (Store)' }\n\t\t: { pwshMsixDirRegex: PwshMsixRegex, pwshMsixName: 'PowerShell (Store)' };\n\n\t// We should find only one such application, so return on the first one\n\tfor (const subdir of await pfs.Promises.readdir(msixAppDir)) {\n\t\tif (pwshMsixDirRegex.test(subdir)) {\n\t\t\tconst pwshMsixPath = path.join(msixAppDir, subdir, 'pwsh.exe');\n\t\t\treturn new PossiblePowerShellExe(pwshMsixPath, pwshMsixName);\n\t\t}\n\t}\n\n\t// If we find nothing, return null\n\treturn null;\n}\n\nfunction findPSCoreDotnetGlobalTool(): IPossiblePowerShellExe {\n\tconst dotnetGlobalToolExePath: string = path.join(os.homedir(), '.dotnet', 'tools', 'pwsh.exe');\n\n\treturn new PossiblePowerShellExe(dotnetGlobalToolExePath, '.NET Core PowerShell Global Tool');\n}\n\nfunction findWinPS(): IPossiblePowerShellExe | null {\n\tconst winPSPath = path.join(\n\t\tprocess.env.windir!,\n\t\tprocessArch === Arch.x86 && osArch !== Arch.x86 ? 'SysNative' : 'System32',\n\t\t'WindowsPowerShell', 'v1.0', 'powershell.exe');\n\n\treturn new PossiblePowerShellExe(winPSPath, 'Windows PowerShell', true);\n}\n\n/**\n * Iterates through all the possible well-known PowerShell installations on a machine.\n * Returned values may not exist, but come with an .exists property\n * which will check whether the executable exists.\n */\nasync function* enumerateDefaultPowerShellInstallations(): AsyncIterable<IPossiblePowerShellExe> {\n\t// Find PSCore stable first\n\tlet pwshExe = await findPSCoreWindowsInstallation();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Windows may have a 32-bit pwsh.exe\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Also look for the MSIX/UWP installation\n\tpwshExe = await findPSCoreMsix();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for the .NET global tool\n\t// Some older versions of PowerShell have a bug in this where startup will fail,\n\t// but this is fixed in newer versions\n\tpwshExe = findPSCoreDotnetGlobalTool();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for PSCore preview\n\tpwshExe = await findPSCoreWindowsInstallation({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Find a preview MSIX\n\tpwshExe = await findPSCoreMsix({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for pwsh-preview with the opposite bitness\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true, findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Finally, get Windows PowerShell\n\tpwshExe = findWinPS();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n}\n\n/**\n * Iterates through PowerShell installations on the machine according\n * to configuration passed in through the constructor.\n * PowerShell items returned by this object are verified\n * to exist on the filesystem.\n */\nexport async function* enumeratePowerShellInstallations(): AsyncIterable<IPowerShellExeDetails> {\n\t// Get the default PowerShell installations first\n\tfor await (const defaultPwsh of enumerateDefaultPowerShellInstallations()) {\n\t\tif (await defaultPwsh.exists()) {\n\t\t\tyield defaultPwsh;\n\t\t}\n\t}\n}\n\n/**\n* Returns the first available PowerShell executable found in the search order.\n*/\nexport async function getFirstAvailablePowerShellInstallation(): Promise<IPowerShellExeDetails | null> {\n\tfor await (const pwsh of enumeratePowerShellInstallations()) {\n\t\treturn pwsh;\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats } from 'fs';\nimport * as path from 'vs/base/common/path';\nimport * as Platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { CommandOptions, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from 'vs/base/common/processes';\nimport * as Types from 'vs/base/common/types';\nimport * as pfs from 'vs/base/node/pfs';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await pfs.Promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await pfs.Promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (const pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ProcessItem } from 'vs/base/common/processes';\n\nexport function listProcesses(rootPid: number): Promise<ProcessItem> {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet rootItem: ProcessItem | undefined;\n\t\tconst map = new Map<number, ProcessItem>();\n\n\n\t\tfunction addToTree(pid: number, ppid: number, cmd: string, load: number, mem: number) {\n\n\t\t\tconst parent = map.get(ppid);\n\t\t\tif (pid === rootPid || parent) {\n\n\t\t\t\tconst item: ProcessItem = {\n\t\t\t\t\tname: findName(cmd),\n\t\t\t\t\tcmd,\n\t\t\t\t\tpid,\n\t\t\t\t\tppid,\n\t\t\t\t\tload,\n\t\t\t\t\tmem\n\t\t\t\t};\n\t\t\t\tmap.set(pid, item);\n\n\t\t\t\tif (pid === rootPid) {\n\t\t\t\t\trootItem = item;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t}\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\tparent.children = parent.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction findName(cmd: string): string {\n\n\t\t\tconst SHARED_PROCESS_HINT = /--vscode-window-kind=shared-process/;\n\t\t\tconst ISSUE_REPORTER_HINT = /--vscode-window-kind=issue-reporter/;\n\t\t\tconst PROCESS_EXPLORER_HINT = /--vscode-window-kind=process-explorer/;\n\t\t\tconst UTILITY_NETWORK_HINT = /--utility-sub-type=network/;\n\t\t\tconst UTILITY_EXTENSION_HOST_HINT = /--utility-sub-type=node.mojom.NodeService/;\n\t\t\tconst WINDOWS_CRASH_REPORTER = /--crashes-directory/;\n\t\t\tconst WINDOWS_PTY = /\\\\pipe\\\\winpty-control/;\n\t\t\tconst WINDOWS_CONSOLE_HOST = /conhost\\.exe/;\n\t\t\tconst TYPE = /--type=([a-zA-Z-]+)/;\n\n\t\t\t// find windows crash reporter\n\t\t\tif (WINDOWS_CRASH_REPORTER.exec(cmd)) {\n\t\t\t\treturn 'electron-crash-reporter';\n\t\t\t}\n\n\t\t\t// find windows pty process\n\t\t\tif (WINDOWS_PTY.exec(cmd)) {\n\t\t\t\treturn 'winpty-process';\n\t\t\t}\n\n\t\t\t//find windows console host process\n\t\t\tif (WINDOWS_CONSOLE_HOST.exec(cmd)) {\n\t\t\t\treturn 'console-window-host (Windows internal process)';\n\t\t\t}\n\n\t\t\t// find \"--type=xxxx\"\n\t\t\tlet matches = TYPE.exec(cmd);\n\t\t\tif (matches && matches.length === 2) {\n\t\t\t\tif (matches[1] === 'renderer') {\n\t\t\t\t\tif (SHARED_PROCESS_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'shared-process';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ISSUE_REPORTER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'issue-reporter';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (PROCESS_EXPLORER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'process-explorer';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `window`;\n\t\t\t\t} else if (matches[1] === 'utility') {\n\t\t\t\t\tif (UTILITY_NETWORK_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'utility-network-service';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (UTILITY_EXTENSION_HOST_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'extension-host';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn matches[1];\n\t\t\t}\n\n\t\t\t// find all xxxx.js\n\t\t\tconst JS = /[a-zA-Z-]+\\.js/g;\n\t\t\tlet result = '';\n\t\t\tdo {\n\t\t\t\tmatches = JS.exec(cmd);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult += matches + ' ';\n\t\t\t\t}\n\t\t\t} while (matches);\n\n\t\t\tif (result) {\n\t\t\t\tif (cmd.indexOf('node ') < 0 && cmd.indexOf('node.exe') < 0) {\n\t\t\t\t\treturn `electron_node ${result}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cmd;\n\t\t}\n\n\t\tif (process.platform === 'win32') {\n\n\t\t\tconst cleanUNCPrefix = (value: string): string => {\n\t\t\t\tif (value.indexOf('\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\\\\??\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\"\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else if (value.indexOf('\"\\\\??\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(import('windows-process-tree')).then(windowsProcessTree => {\n\t\t\t\twindowsProcessTree.getProcessList(rootPid, (processList) => {\n\t\t\t\t\tif (!processList) {\n\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twindowsProcessTree.getProcessCpuUsage(processList, (completeProcessList) => {\n\t\t\t\t\t\tconst processItems: Map<number, ProcessItem> = new Map();\n\t\t\t\t\t\tcompleteProcessList.forEach(process => {\n\t\t\t\t\t\t\tconst commandLine = cleanUNCPrefix(process.commandLine || '');\n\t\t\t\t\t\t\tprocessItems.set(process.pid, {\n\t\t\t\t\t\t\t\tname: findName(commandLine),\n\t\t\t\t\t\t\t\tcmd: commandLine,\n\t\t\t\t\t\t\t\tpid: process.pid,\n\t\t\t\t\t\t\t\tppid: process.ppid,\n\t\t\t\t\t\t\t\tload: process.cpu || 0,\n\t\t\t\t\t\t\t\tmem: process.memory || 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trootItem = processItems.get(rootPid);\n\t\t\t\t\t\tif (rootItem) {\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tconst parent = processItems.get(item.ppid);\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tif (item.children) {\n\t\t\t\t\t\t\t\t\titem.children = item.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, windowsProcessTree.ProcessDataFlag.CommandLine | windowsProcessTree.ProcessDataFlag.Memory);\n\t\t\t});\n\t\t} else {\t// OS X & Linux\n\t\t\tfunction calculateLinuxCpuUsage() {\n\t\t\t\t// Flatten rootItem to get a list of all VSCode processes\n\t\t\t\tlet processes = [rootItem];\n\t\t\t\tconst pids: number[] = [];\n\t\t\t\twhile (processes.length) {\n\t\t\t\t\tconst process = processes.shift();\n\t\t\t\t\tif (process) {\n\t\t\t\t\t\tpids.push(process.pid);\n\t\t\t\t\t\tif (process.children) {\n\t\t\t\t\t\t\tprocesses = processes.concat(process.children);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// The cpu usage value reported on Linux is the average over the process lifetime,\n\t\t\t\t// recalculate the usage over a one second interval\n\t\t\t\t// JSON.stringify is needed to escape spaces, https://github.com/nodejs/node/issues/6803\n\t\t\t\tlet cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/cpuUsage.sh', require).fsPath);\n\t\t\t\tcmd += ' ' + pids.join(' ');\n\n\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cpuUsage = stdout.toString().split('\\n');\n\t\t\t\t\t\tfor (let i = 0; i < pids.length; i++) {\n\t\t\t\t\t\t\tconst processInfo = map.get(pids[i])!;\n\t\t\t\t\t\t\tprocessInfo.load = parseFloat(cpuUsage[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\texec('which ps', {}, (err, stdout, stderr) => {\n\t\t\t\tif (err || stderr) {\n\t\t\t\t\tif (process.platform !== 'linux') {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/ps.sh', require).fsPath);\n\t\t\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst ps = stdout.toString().trim();\n\t\t\t\t\tconst args = '-ax -o pid=,ppid=,pcpu=,pmem=,command=';\n\n\t\t\t\t\t// Set numeric locale to ensure '.' is used as the decimal separator\n\t\t\t\t\texec(`${ps} ${args}`, { maxBuffer: 1000 * 1024, env: { LC_NUMERIC: 'en_US.UTF-8' } }, (err, stdout, stderr) => {\n\t\t\t\t\t\t// Silently ignoring the screen size is bogus error. See https://github.com/microsoft/vscode/issues/98590\n\t\t\t\t\t\tif (err || (stderr && !stderr.includes('screen size is bogus'))) {\n\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\n\t\t\t\t\t\t\tif (process.platform === 'linux') {\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction parsePsOutput(stdout: string, addToTree: (pid: number, ppid: number, cmd: string, load: number, mem: number) => void): void {\n\tconst PID_CMD = /^\\s*([0-9]+)\\s+([0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+(.+)$/;\n\tconst lines = stdout.toString().split('\\n');\n\tfor (const line of lines) {\n\t\tconst matches = PID_CMD.exec(line.trim());\n\t\tif (matches && matches.length === 6) {\n\t\t\taddToTree(parseInt(matches[1]), parseInt(matches[2]), matches[5], parseFloat(matches[3]), parseFloat(matches[4]));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, userInfo } from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { getFirstAvailablePowerShellInstallation } from 'vs/base/node/powershell';\nimport * as processes from 'vs/base/node/processes';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param os The platform to detect the shell of.\n */\nexport async function getSystemShell(os: platform.OperatingSystem, env: platform.IProcessEnvironment): Promise<string> {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nexport function getSystemShellSync(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindowsSync(env);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && os === platform.OperatingSystem.Macintosh || platform.isMacintosh && os === platform.OperatingSystem.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal: string | undefined;\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t} else {\n\t\t\tunixLikeTerminal = env['SHELL'];\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\ttry {\n\t\t\t\t\t// It's possible for $SHELL to be unset, this API reads /etc/passwd. See https://github.com/github/codespaces/issues/1639\n\t\t\t\t\t// Node docs: \"Throws a SystemError if a user has no username or homedir.\"\n\t\t\t\t\tunixLikeTerminal = userInfo().shell;\n\t\t\t\t} catch (err) { }\n\t\t\t}\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\tunixLikeTerminal = 'sh';\n\t\t\t}\n\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nasync function getSystemShellWindows(): Promise<string> {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = (await getFirstAvailablePowerShellInstallation())!.exePath;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nfunction getSystemShellWindowsSync(env: platform.IProcessEnvironment): string {\n\tif (_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n\t}\n\n\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(release()) >= 10;\n\tconst is32ProcessOn64Windows = env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst powerShellPath = `${env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\treturn isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(env);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event, EventMultiplexer, Relay } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel; id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose; id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string; name: string; stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(new CancellationError());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Event.None;\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(new CancellationError());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(new CancellationError());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError: {\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(new CancellationError());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\thandler?.(response);\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tconst connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService<TContext>(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel<TContext> {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\tconst target = handler[event];\n\t\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T extends object>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tconst result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { deepClone } from 'vs/base/common/objects';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { removeDangerousEnvVariables } from 'vs/base/common/processes';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tprocess.send?.((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number; signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tthis.disposeDelayer?.cancel();\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean, useFullTimeWords?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.singular.ago.fullWord', '{0} second ago', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.plural.ago.fullWord', '{0} seconds ago', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.singular.fullWord', '{0} second', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.singular', '{0} sec', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.plural.fullWord', '{0} seconds', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.singular.ago.fullWord', '{0} minute ago', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.singular.ago', '{0} min ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.plural.ago.fullWord', '{0} minutes ago', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.singular.fullWord', '{0} minute', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.singular', '{0} min', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.plural.fullWord', '{0} minutes', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.singular.ago.fullWord', '{0} hour ago', value)\n\t\t\t\t\t: localize('date.fromNow.hours.singular.ago', '{0} hr ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.plural.ago.fullWord', '{0} hours ago', value)\n\t\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.singular.fullWord', '{0} hour', value)\n\t\t\t\t\t: localize('date.fromNow.hours.singular', '{0} hr', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.plural.fullWord', '{0} hours', value)\n\t\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.singular.ago.fullWord', '{0} week ago', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.plural.ago.fullWord', '{0} weeks ago', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.singular.fullWord', '{0} week', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.singular', '{0} wk', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.plural.fullWord', '{0} weeks', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.singular.ago.fullWord', '{0} month ago', value)\n\t\t\t\t\t: localize('date.fromNow.months.singular.ago', '{0} mo ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.plural.ago.fullWord', '{0} months ago', value)\n\t\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.singular.fullWord', '{0} month', value)\n\t\t\t\t\t: localize('date.fromNow.months.singular', '{0} mo', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.plural.fullWord', '{0} months', value)\n\t\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.singular.ago.fullWord', '{0} year ago', value)\n\t\t\t\t: localize('date.fromNow.years.singular.ago', '{0} yr ago', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.plural.ago.fullWord', '{0} years ago', value)\n\t\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t\t}\n\t} else {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.singular.fullWord', '{0} year', value)\n\t\t\t\t: localize('date.fromNow.years.singular', '{0} yr', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.plural.fullWord', '{0} years', value)\n\t\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t\t}\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { IAction } from 'vs/base/common/actions';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n\nexport interface IErrorWithActions extends Error {\n\tactions: IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(messageOrError: string | Error, actions: IAction[]): IErrorWithActions {\n\tlet error: IErrorWithActions;\n\tif (typeof messageOrError === 'string') {\n\t\terror = new Error(messageOrError) as IErrorWithActions;\n\t} else {\n\t\terror = messageOrError as IErrorWithActions;\n\t}\n\n\terror.actions = actions;\n\n\treturn error;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { memoize } from 'vs/base/common/decorators';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, join, normalize, resolve } from 'vs/base/common/path';\nimport { env } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ExtensionKind, IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string;\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string;\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget cacheHome(): URI { return URI.file(this.userDataPath); }\n\n\t@memoize\n\tget stateResource(): URI { return joinPath(this.appSettingsHome, 'globalStorage', 'storage.json'); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync'); }\n\n\tget logsPath(): string {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn this.args.logsPath;\n\t}\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget editSessionsLogResource(): URI { return URI.file(join(this.logsPath, 'editSessions.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget localHistoryHome(): URI { return joinPath(this.appSettingsHome, 'History'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.appSettingsHome, 'argv.json');\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn resolve(cliExtensionsDownloadDir);\n\t\t}\n\n\t\treturn join(this.userDataPath, 'CachedExtensionVSIXs');\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\tget logLevel(): string | undefined { return this.args.log; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(join(this.logsPath, 'telemetry.log')); }\n\tget extensionTelemetryLogResource(): URI { return URI.file(join(this.logsPath, 'extensionTelemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !!this.args['disable-workspace-trust']; }\n\n\t@memoize\n\tget policyFile(): URI | undefined {\n\t\tif (this.args['__enable-file-policy']) {\n\t\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\t\tif (vscodePortable) {\n\t\t\t\treturn URI.file(join(vscodePortable, 'policy.json'));\n\t\t\t}\n\n\t\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'policy.json');\n\t\t}\n\t\treturn undefined;\n\t}\n\n\teditSessionId: string | undefined = this.args['editSessionId'];\n\n\tget continueOn(): string | undefined {\n\t\treturn this.args['continueOn'];\n\t}\n\n\tset continueOn(value: string | undefined) {\n\t\tthis.args['continueOn'] = value;\n\t}\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugParams(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId, args.extensionEnvironment);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild, args.extensionEnvironment);\n}\n\nexport function parsePtyHostPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-ptyhost'], args['inspect-brk-ptyhost'], 5877, isBuild, args.extensionEnvironment);\n}\n\nfunction parseDebugParams(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string, environmentString?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { isWindows } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string[]; // old deprecated ids\n\targs?: string | string[];\n\tdescription?: string;\n\tdeprecationMessage?: string;\n\tallowEmptyValue?: boolean;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'merge': { type: 'boolean', cat: 'o', alias: 'm', args: ['path1', 'path2', 'base', 'result'], description: localize('merge', \"Perform a three-way merge by providing paths for two modified versions of a file, the common origin of both modified versions and the output file to save merge results.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'profile': { type: 'string', 'cat': 'o', args: 'settingsProfileName', description: localize('settingsProfileName', \"Opens the provided folder or workspace with the given profile and associates the profile with the workspace. If the profile does not exist, a new empty one is created. A folder or workspace must be provided for the profile to take effect.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: ['extensionHomePath'], cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\"), args: 'category' },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'ext-id | path', description: localize('installExtension', \"Installs or updates an extension. The argument is either an extension id or a path to a VSIX. The identifier of an extension is '${publisher}.${name}'. Use '--force' argument to update to latest version. To install a specific version provide '@${version}'. For example: 'vscode.csharp@1.2.3'.\") },\n\t'pre-release': { type: 'boolean', cat: 'e', description: localize('install prerelease', \"Installs the pre-release version of the extension, when using --install-extension\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'ext-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', allowEmptyValue: true, cat: 'e', args: 'ext-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup.\") },\n\t'prof-append-timers': { type: 'string' },\n\t'no-cached-data': { type: 'boolean' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: ['disableExtensions'], cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'ext-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off.\"), args: ['on | off'] },\n\n\t'inspect-extensions': { type: 'string', allowEmptyValue: true, deprecates: ['debugPluginHost'], args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', allowEmptyValue: true, deprecates: ['debugBrkPluginHost'], args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'ms-enable-electron-run-as-node': { type: 'boolean' },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\"), args: 'memory' },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string', allowEmptyValue: true },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'extensionEnvironment': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-ptyhost': { type: 'string', allowEmptyValue: true },\n\t'inspect-brk-ptyhost': { type: 'string', allowEmptyValue: true },\n\t'inspect-search': { type: 'string', deprecates: ['debugSearch'], allowEmptyValue: true },\n\t'inspect-brk-search': { type: 'string', deprecates: ['debugBrkSearch'], allowEmptyValue: true },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'enable-smoke-test-driver': { type: 'boolean' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'skip-welcome': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-workspace-trust': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\t'__enable-file-policy': { type: 'boolean' },\n\t'editSessionId': { type: 'string' },\n\t'continueOn': { type: 'string' },\n\t'locate-shell-integration-path': { type: 'string', args: ['bash', 'pwsh', 'zsh', 'fish'] },\n\n\t'enable-coi': { type: 'boolean' },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t// Minimist incorrectly parses keys that start with `--no`\n\t// https://github.com/substack/minimist/blob/aeb3e27dae0412de5c0494e9563a5f10c82cc7a9/index.js#L118-L121\n\t// If --no-sandbox is passed via cli wrapper it will be treated as --sandbox which is incorrect, we use\n\t// the alias here to make sure --no-sandbox is always respected.\n\t// For https://github.com/microsoft/vscode/issues/128279\n\t'no-sandbox': { type: 'boolean', alias: 'sandbox' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string', allowEmptyValue: true },\n\t'inspect-brk': { type: 'string', allowEmptyValue: true },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\t'disable-dev-shm-usage': { type: 'boolean' },\n\t'profile-temp': { type: 'boolean' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n\tonEmptyValue(id: string): void;\n\tonDeprecatedOption(deprecatedId: string, message: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { },\n\tonEmptyValue: () => { },\n\tonDeprecatedOption: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = ['_'];\n\tconst boolean: string[] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(...o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(...o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates) {\n\t\t\tfor (const deprecatedId of o.deprecates) {\n\t\t\t\tif (remainingArgs.hasOwnProperty(deprecatedId)) {\n\t\t\t\t\tif (!val) {\n\t\t\t\t\t\tval = remainingArgs[deprecatedId];\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\terrorReporter.onDeprecatedOption(deprecatedId, o.deprecationMessage || localize('deprecated.useInstead', 'Use {0} instead.', optionId));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdelete remainingArgs[deprecatedId];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (!Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t\tif (!o.allowEmptyValue) {\n\t\t\t\t\tconst sanitized = val.filter((v: string) => v.length > 0);\n\t\t\t\t\tif (sanitized.length !== val.length) {\n\t\t\t\t\t\terrorReporter.onEmptyValue(optionId);\n\t\t\t\t\t\tval = sanitized.length > 0 ? sanitized : undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t} else if (!val && !o.allowEmptyValue) {\n\t\t\t\t\terrorReporter.onEmptyValue(optionId);\n\t\t\t\t\tval = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\n\t\t\tif (o.deprecationMessage) {\n\t\t\t\terrorReporter.onDeprecatedOption(optionId, o.deprecationMessage);\n\t\t\t}\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (const key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tconst usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tconst argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tconst descriptionColumns = columns - argLength - 1;\n\tconst result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tconst usage = ut[0];\n\t\tconst wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tconst keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tconst lines: string[] = [];\n\twhile (text.length) {\n\t\tconst index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tconst line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, capabilities?: { noPipe?: boolean; noInputFiles: boolean }): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\tconst inputFiles = capabilities?.noInputFiles !== true ? `[${localize('paths', 'paths')}...]` : '';\n\n\tconst help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}]${inputFiles}`);\n\thelp.push('');\n\tif (capabilities?.noPipe !== true) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (const helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tconst categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @typedef {import('../../environment/common/argv').NativeParsedArgs} NativeParsedArgs\n\t *\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('os')} os\n\t * @param {string} cwd\n\t */\n\tfunction factory(path, os, cwd) {\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t * @param {string} productName\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getUserDataPath(cliArgs, productName) {\n\t\t\tconst userDataPath = doGetUserDataPath(cliArgs, productName);\n\t\t\tconst pathsToResolve = [userDataPath];\n\n\t\t\t// If the user-data-path is not absolute, make\n\t\t\t// sure to resolve it against the passed in\n\t\t\t// current working directory. We cannot use the\n\t\t\t// node.js `path.resolve()` logic because it will\n\t\t\t// not pick up our `VSCODE_CWD` environment variable\n\t\t\t// (https://github.com/microsoft/vscode/issues/120269)\n\t\t\tif (!path.isAbsolute(userDataPath)) {\n\t\t\t\tpathsToResolve.unshift(cwd);\n\t\t\t}\n\n\t\t\treturn path.resolve(...pathsToResolve);\n\t\t}\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t * @param {string} productName\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction doGetUserDataPath(cliArgs, productName) {\n\n\t\t\t// 0. Running out of sources has a fixed productName\n\t\t\tif (process.env['VSCODE_DEV']) {\n\t\t\t\tproductName = 'code-oss-dev';\n\t\t\t}\n\n\t\t\t// 1. Support portable mode\n\t\t\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\t\t\tif (portablePath) {\n\t\t\t\treturn path.join(portablePath, 'user-data');\n\t\t\t}\n\n\t\t\t// 2. Support global VSCODE_APPDATA environment variable\n\t\t\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\t\t\tif (appDataPath) {\n\t\t\t\treturn path.join(appDataPath, productName);\n\t\t\t}\n\n\t\t\t// With Electron>=13 --user-data-dir switch will be propagated to\n\t\t\t// all processes https://github.com/electron/electron/blob/1897b14af36a02e9aa7e4d814159303441548251/shell/browser/electron_browser_client.cc#L546-L553\n\t\t\t// Check VSCODE_PORTABLE and VSCODE_APPDATA before this case to get correct values.\n\t\t\t// 3. Support explicit --user-data-dir\n\t\t\tconst cliPath = cliArgs['user-data-dir'];\n\t\t\tif (cliPath) {\n\t\t\t\treturn cliPath;\n\t\t\t}\n\n\t\t\t// 4. Otherwise check per platform\n\t\t\tswitch (process.platform) {\n\t\t\t\tcase 'win32':\n\t\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\t\tif (!appDataPath) {\n\t\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'darwin':\n\t\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'linux':\n\t\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Platform not supported');\n\t\t\t}\n\n\t\t\treturn path.join(appDataPath, productName);\n\t\t}\n\n\t\treturn {\n\t\t\tgetUserDataPath\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\tdefine(__m[59/*vs/platform/environment/node/userDataPath*/], __M([83/*path*/,16/*os*/,12/*vs/base/common/process*/]), function (\n\t\t\t/** @type {typeof import('path')} */ path,\n\t\t\t/** @type {typeof import('os')} */ os,\n\t\t\t/** @type {typeof import(\"../../../base/common/process\")} */ process\n\t\t) {\n\t\t\treturn factory(path, os, process.cwd()); // amd\n\t\t});\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst path = require('path');\n\t\tconst os = require('os');\n\n\t\tmodule.exports = factory(path, os, process.env['VSCODE_CWD'] || process.cwd()); // commonjs\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir, tmpdir } from 'os';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport { getUserDataPath } from 'vs/platform/environment/node/userDataPath';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class NativeEnvironmentService extends AbstractNativeEnvironmentService {\n\n\tconstructor(args: NativeParsedArgs, productService: IProductService) {\n\t\tsuper(args, {\n\t\t\thomeDir: homedir(),\n\t\t\ttmpDir: tmpdir(),\n\t\t\tuserDataDir: getUserDataPath(args, productService.nameShort)\n\t\t}, productService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A, ...BrandedService[]] ? [A]\n\t: Args extends [infer A, ...infer R] ? [A, ...GetLeadingNonServiceArgs<R>]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IExpression, IRelativePattern } from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { sep } from 'vs/base/common/path';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes its capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource by\n\t * first activating any extension that wants to be activated\n\t * on the provided resource scheme to include extensions that\n\t * contribute file system providers for the given resource.\n\t */\n\tcanHandleResource(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Checks if the file service has a registered provider for the\n\t * provided resource.\n\t *\n\t * Note: this does NOT account for contributed providers from\n\t * extensions that have not been activated yet. To include those,\n\t * consider to call `await fileService.canHandleResource(resource)`.\n\t */\n\thasProvider(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilities for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string; capabilities: FileSystemProviderCapabilities }>;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource. For a folder, children\n\t * information is resolved as well depending on the provided options. Use `stat()` method if\n\t * you do not need children information.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as `resolve()` but supports resolving multiple resources in parallel.\n\t *\n\t * If one of the resolve targets fails to resolve returns a fake `IFileStat` instead of\n\t * making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI; options: IResolveMetadataFileOptions }[]): Promise<IFileStatResult[]>;\n\tresolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]>;\n\n\t/**\n\t * Same as `resolve()` but without resolving the children of a folder if the\n\t * resource is pointing to a folder.\n\t */\n\tstat(resource: URI): Promise<IFileStatWithPartialMetadata>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions, token?: CancellationToken): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t *\n\t * Emits a `FileOperation.WRITE` file operation event when successful.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t *\n\t * Emits a `FileOperation.MOVE` file operation event when successful.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource. A folder is copied\n\t * recursively.\n\t *\n\t * Emits a `FileOperation.COPY` file operation event when successful.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Clones a file to a path identified by the resource. Folders are not supported.\n\t *\n\t * If the target path exists, it will be overwritten.\n\t */\n\tcloneFile(source: URI, target: URI): Promise<void>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t *\n\t * Emits a `FileOperation.DELETE` file operation event when successful.\n\t */\n\tdel(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * An event that signals an error when watching for file changes.\n\t */\n\treadonly onDidWatchError: Event<Error>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: recursive file watching is not supported from this method. Only events from files\n\t * that are direct children of the provided resource will be reported.\n\t */\n\twatch(resource: URI, options?: IWatchOptions): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface IFileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface IFileAtomicReadOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic: true;\n}\n\nexport interface IFileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface IFileWriteOptions extends IFileOverwriteOptions, IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type IFileOpenOptions = IFileOpenForReadOptions | IFileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: IFileOpenOptions): options is IFileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface IFileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface IFileOpenForWriteOptions extends IFileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface IFileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n\t/**\n\t * File is readonly.\n\t */\n\tReadonly = 1\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * The file permissions.\n\t */\n\treadonly permissions?: FilePermission;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t */\n\tincludes?: Array<string | IRelativePattern>;\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13,\n\n\t/**\n\t * Provider support to read files atomically. This implies the\n\t * provider provides the `FileReadWrite` capability too.\n\t */\n\tFileAtomicRead = 1 << 14,\n\n\t/**\n\t * Provider support to clone files atomically.\n\t */\n\tFileClone = 1 << 15\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\treadonly onDidWatchError?: Event<string>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n\tcloneFile?(from: URI, to: URI): Promise<void>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithFileCloneCapability extends IFileSystemProvider {\n\tcloneFile(from: URI, to: URI): Promise<void>;\n}\n\nexport function hasFileCloneCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileCloneCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileClone);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport interface IFileSystemProviderWithFileAtomicReadCapability extends IFileSystemProvider {\n\treadFile(resource: URI, opts?: IFileAtomicReadOptions): Promise<Uint8Array>;\n}\n\nexport function hasFileAtomicReadCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileAtomicReadCapability {\n\tif (!hasReadWriteCapability(provider)) {\n\t\treturn false; // we require the `FileReadWrite` capability too\n\t}\n\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileAtomicRead);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY,\n\tWRITE\n}\n\nexport interface IFileOperationEvent {\n\n\treadonly resource: URI;\n\treadonly operation: FileOperation;\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n}\n\nexport interface IFileOperationEventWithMetadata extends IFileOperationEvent {\n\treadonly target: IFileStatWithMetadata;\n}\n\nexport class FileOperationEvent implements IFileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE | FileOperation.WRITE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(readonly resource: URI, readonly operation: FileOperation, readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], ignorePathCasing: boolean) {\n\t\tthis.rawChanges = changes;\n\n\t\tconst entriesByType = new Map<FileChangeType, [URI, IFileChange][]>();\n\n\t\tfor (const change of changes) {\n\t\t\tconst array = entriesByType.get(change.type);\n\t\t\tif (array) {\n\t\t\t\tarray.push([change.resource, change]);\n\t\t\t} else {\n\t\t\t\tentriesByType.set(change.type, [[change.resource, change]]);\n\t\t\t}\n\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.rawAdded.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.rawUpdated.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.rawDeleted.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of entriesByType) {\n\t\t\tswitch (key) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.added.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.updated.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.deleted.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawChanges: readonly IFileChange[] = [];\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawAdded: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawUpdated: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawDeleted: URI[] = [];\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseFileStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier that represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * The file is read-only.\n\t */\n\treadonly readonly?: boolean;\n}\n\nexport interface IBaseFileStatWithMetadata extends Required<IBaseFileStat> { }\n\n/**\n * A file resource with meta information and resolved children if any.\n */\nexport interface IFileStat extends IBaseFileStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren: IFileStat[] | undefined;\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseFileStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly readonly: boolean;\n\treadonly children: IFileStatWithMetadata[] | undefined;\n}\n\nexport interface IFileStatResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IFileStatResultWithMetadata extends IFileStatResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileStatWithPartialMetadata extends Omit<IFileStatWithMetadata, 'children'> { }\n\nexport interface IFileContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends IFileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly fileOperationResult: FileOperationResult,\n\t\treadonly options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly stat: IFileStatWithMetadata,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\twatcherInclude: string[];\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number; size: number }): string;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createDecorator<ILogService>('logService');\nexport const ILoggerService = createDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport function format(args: any): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger, or gets one if it already exists.\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(file: URI): ILogger | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tgetLogger(resource: URI) {\n\t\treturn this.loggers.get(resource.toString());\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { AbstractLoggerService, AbstractMessageLogger, AdapterLogger, ILogger, ILoggerOptions, ILoggerService, ILogService, log, LogLevel, LogService } from 'vs/platform/log/common/log';\n\nexport class LogLevelChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': return this.service.setLevel(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n}\n\nexport class LogLevelChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLogLevelChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n}\n\nexport class LoggerChannel implements IServerChannel {\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(private readonly loggerService: ILoggerService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createLogger': this.createLogger(URI.revive(arg[0]), arg[1]); return;\n\t\t\tcase 'log': return this.log(URI.revive(arg[0]), arg[1]);\n\t\t\tcase 'consoleLog': return this.consoleLog(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate createLogger(file: URI, options: ILoggerOptions): void {\n\t\tthis.loggers.set(file.toString(), this.loggerService.createLogger(file, options));\n\t}\n\n\tprivate consoleLog(level: LogLevel, args: any[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Error:\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Warning:\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Info:\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n\n\tprivate log(file: URI, messages: [LogLevel, string][]): void {\n\t\tconst logger = this.loggers.get(file.toString());\n\t\tif (!logger) {\n\t\t\tthrow new Error('Create the logger before logging');\n\t\t}\n\t\tfor (const [level, message] of messages) {\n\t\t\tlog(logger, level, message);\n\t\t}\n\t}\n}\n\nexport class LoggerChannelClient extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(logLevel: LogLevel, onDidChangeLogLevel: Event<LogLevel>, private readonly channel: IChannel) {\n\t\tsuper(logLevel, onDidChangeLogLevel);\n\t}\n\n\tcreateConsoleMainLogger(): ILogger {\n\t\treturn new AdapterLogger({\n\t\t\tlog: (level: LogLevel, args: any[]) => {\n\t\t\t\tthis.channel.call('consoleLog', [level, args]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected doCreateLogger(file: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\treturn new Logger(this.channel, file, logLevel, options);\n\t}\n\n}\n\nclass Logger extends AbstractMessageLogger {\n\n\tprivate isLoggerCreated: boolean = false;\n\tprivate buffer: [LogLevel, string][] = [];\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t\tprivate readonly file: URI,\n\t\tlogLevel: LogLevel,\n\t\tloggerOptions?: ILoggerOptions,\n\t) {\n\t\tsuper(loggerOptions?.always);\n\t\tthis.setLevel(logLevel);\n\t\tthis.channel.call('createLogger', [file, loggerOptions])\n\t\t\t.then(() => {\n\t\t\t\tthis.doLog(this.buffer);\n\t\t\t\tthis.isLoggerCreated = true;\n\t\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string) {\n\t\tconst messages: [LogLevel, string][] = [[level, message]];\n\t\tif (this.isLoggerCreated) {\n\t\t\tthis.doLog(messages);\n\t\t} else {\n\t\t\tthis.buffer.push(...messages);\n\t\t}\n\t}\n\n\tprivate doLog(messages: [LogLevel, string][]) {\n\t\tthis.channel.call('log', [this.file, messages]);\n\t}\n}\n\nexport class FollowerLogService extends LogService implements ILogService {\n\n\tconstructor(private parent: LogLevelChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as spdlog from 'spdlog';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { AbstractMessageLogger, ILogger, LogLevel } from 'vs/platform/log/common/log';\n\nasync function createSpdLogLogger(name: string, logfilePath: string, filesize: number, filecount: number, donotUseFormatters: boolean): Promise<spdlog.Logger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setFlushOn(LogLevel.Trace);\n\t\tconst logger = await _spdlog.createAsyncRotatingLogger(name, logfilePath, filesize, filecount);\n\t\tif (donotUseFormatters) {\n\t\t\tlogger.clearFormatters();\n\t\t}\n\t\treturn logger;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.Logger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogLogger extends AbstractMessageLogger implements ILogger {\n\n\tprivate buffer: ILog[] = [];\n\tprivate readonly _loggerCreationPromise: Promise<void>;\n\tprivate _logger: spdlog.Logger | undefined;\n\n\tconstructor(\n\t\tname: string,\n\t\tfilepath: string,\n\t\trotating: boolean,\n\t\tdonotUseFormatters: boolean,\n\t\tlevel: LogLevel,\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._loggerCreationPromise = this._createSpdLogLogger(name, filepath, rotating, donotUseFormatters);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tthis._logger?.setLevel(level);\n\t\t}));\n\t}\n\n\tprivate async _createSpdLogLogger(name: string, filepath: string, rotating: boolean, donotUseFormatters: boolean): Promise<void> {\n\t\tconst filecount = rotating ? 6 : 1;\n\t\tconst filesize = (30 / filecount) * ByteSize.MB;\n\t\tconst logger = await createSpdLogLogger(name, filepath, filesize, filecount, donotUseFormatters);\n\t\tif (logger) {\n\t\t\tthis._logger = logger;\n\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\tlog(this._logger, level, message);\n\t\t\t}\n\t\t\tthis.buffer = [];\n\t\t}\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\toverride flush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { globals } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nlet product: IProductConfiguration;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.context !== 'undefined') {\n\tconst configuration: ISandboxConfiguration | undefined = globals.vscode.context.configuration();\n\tif (configuration) {\n\t\tproduct = configuration.product;\n\t} else {\n\t\tthrow new Error('Sandbox: unable to resolve product configuration from preload script.');\n\t}\n}\n\n// Native node.js environment\nelse if (typeof require?.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`,\n\t\t\tserverDataFolderName: product.serverDataFolderName ? `${product.serverDataFolderName}-dev` : undefined\n\t\t});\n\t}\n\n\t// Version is added during built time, but we still\n\t// want to have it running out of sources so we\n\t// read it from package.json only when we need it.\n\tif (!product.version) {\n\t\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string };\n\n\t\tObject.assign(product, {\n\t\t\tversion: pkg.version\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\textensionsGallery: env.EXTENSIONS_GALLERY ? JSON.parse(env.EXTENSIONS_GALLERY) : (product.extensionsGallery || {\n\t\t\tserviceUrl: \"https://open-vsx.org/vscode/gallery\",\n\t\t\titemUrl: \"https://open-vsx.org/vscode/item\",\n\t\t\tresourceUrlTemplate: \"https://open-vsx.org/vscode/asset/{publisher}/{name}/{version}/Microsoft.VisualStudio.Code.WebResources/{path}\",\n\t\t\tcontrolUrl: \"\",\n\t\t\trecommendationsUrl: \"\",\n\t\t})\n\t});\n}\n\n// Web environment or unknown\nelse {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.72.0-dev',\n\t\t\tnameShort: 'Code - OSS Dev',\n\t\t\tnameLong: 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt'\n\t\t});\n\t}\n}\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n\nexport const productSchemaId = 'vscode://schemas/vscode-product';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { IBufferMarkCapability, TerminalCapability, IMarkProperties } from 'vs/platform/terminal/common/capabilities/capabilities';\n// Importing types is safe in any layer\n// eslint-disable-next-line local/code-import-patterns\nimport type { IMarker, Terminal } from 'xterm-headless';\n\n/**\n * Manages \"marks\" in the buffer which are lines that are tracked when lines are added to or removed\n * from the buffer.\n */\nexport class BufferMarkCapability implements IBufferMarkCapability {\n\n\treadonly type = TerminalCapability.BufferMarkDetection;\n\n\tprivate _idToMarkerMap: Map<string, IMarker> = new Map();\n\tprivate _anonymousMarkers: IMarker[] = [];\n\n\tprivate readonly _onMarkAdded = new Emitter<IMarkProperties>();\n\treadonly onMarkAdded = this._onMarkAdded.event;\n\n\tconstructor(\n\t\tprivate readonly _terminal: Terminal\n\t) {\n\t}\n\n\t*markers(): IterableIterator<IMarker> {\n\t\tfor (const m of this._idToMarkerMap.values()) {\n\t\t\tyield m;\n\t\t}\n\t\tfor (const m of this._anonymousMarkers) {\n\t\t\tyield m;\n\t\t}\n\t}\n\n\taddMark(properties?: IMarkProperties): void {\n\t\tconst marker = properties?.marker || this._terminal.registerMarker();\n\t\tconst id = properties?.id;\n\t\tif (!marker) {\n\t\t\treturn;\n\t\t}\n\t\tif (id) {\n\t\t\tthis._idToMarkerMap.set(id, marker);\n\t\t\tmarker.onDispose(() => this._idToMarkerMap.delete(id));\n\t\t} else {\n\t\t\tthis._anonymousMarkers.push(marker);\n\t\t\tmarker.onDispose(() => this._anonymousMarkers.filter(m => m !== marker));\n\t\t}\n\t\tthis._onMarkAdded.fire({ marker, id, hidden: properties?.hidden, hoverMessage: properties?.hoverMessage });\n\t}\n\n\tgetMark(id: string): IMarker | undefined {\n\t\treturn this._idToMarkerMap.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ICommandDetectionCapability, TerminalCapability, ITerminalCommand, IHandleCommandOptions, ICommandInvalidationRequest, CommandInvalidationReason, ISerializedCommand, ISerializedCommandDetectionCapability, ITerminalOutputMatcher } from 'vs/platform/terminal/common/capabilities/capabilities';\n\n// Importing types is safe in any layer\n// eslint-disable-next-line local/code-import-patterns\nimport type { IBuffer, IBufferLine, IDisposable, IMarker, Terminal } from 'xterm-headless';\n\nexport interface ICurrentPartialCommand {\n\tpreviousCommandMarker?: IMarker;\n\n\tpromptStartMarker?: IMarker;\n\n\tcommandStartMarker?: IMarker;\n\tcommandStartX?: number;\n\tcommandStartLineContent?: string;\n\n\tcommandRightPromptStartX?: number;\n\tcommandRightPromptEndX?: number;\n\n\tcommandLines?: IMarker;\n\n\tcommandExecutedMarker?: IMarker;\n\tcommandExecutedX?: number;\n\n\tcommandFinishedMarker?: IMarker;\n\n\tcurrentContinuationMarker?: IMarker;\n\tcontinuations?: { marker: IMarker; end: number }[];\n\n\tcommand?: string;\n\n\t/**\n\t * Something invalidated the command before it finished, this will prevent the onCommandFinished\n\t * event from firing.\n\t */\n\tisInvalid?: boolean;\n}\n\ninterface ITerminalDimensions {\n\tcols: number;\n\trows: number;\n}\n\nexport class CommandDetectionCapability implements ICommandDetectionCapability {\n\treadonly type = TerminalCapability.CommandDetection;\n\n\tprotected _commands: ITerminalCommand[] = [];\n\tprivate _exitCode: number | undefined;\n\tprivate _cwd: string | undefined;\n\tprivate _currentCommand: ICurrentPartialCommand = {};\n\tprivate _isWindowsPty: boolean = false;\n\tprivate _onCursorMoveListener?: IDisposable;\n\tprivate _commandMarkers: IMarker[] = [];\n\tprivate _dimensions: ITerminalDimensions;\n\tprivate __isCommandStorageDisabled: boolean = false;\n\tprivate _handleCommandStartOptions?: IHandleCommandOptions;\n\n\tget commands(): readonly ITerminalCommand[] { return this._commands; }\n\tget executingCommand(): string | undefined { return this._currentCommand.command; }\n\t// TODO: as is unsafe here and it duplicates behavor of executingCommand\n\tget executingCommandObject(): ITerminalCommand | undefined {\n\t\tif (this._currentCommand.commandStartMarker) {\n\t\t\treturn { marker: this._currentCommand.commandStartMarker } as ITerminalCommand;\n\t\t}\n\t\treturn undefined;\n\t}\n\tget cwd(): string | undefined { return this._cwd; }\n\tprivate get _isInputting(): boolean {\n\t\treturn !!(this._currentCommand.commandStartMarker && !this._currentCommand.commandExecutedMarker);\n\t}\n\n\tget hasInput(): boolean | undefined {\n\t\tif (!this._isInputting || !this._currentCommand?.commandStartMarker) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (this._terminal.buffer.active.baseY + this._terminal.buffer.active.cursorY === this._currentCommand.commandStartMarker?.line) {\n\t\t\tconst line = this._terminal.buffer.active.getLine(this._terminal.buffer.active.cursorY)?.translateToString(true, this._currentCommand.commandStartX);\n\t\t\tif (line === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn line.length > 0;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate readonly _onCommandStarted = new Emitter<ITerminalCommand>();\n\treadonly onCommandStarted = this._onCommandStarted.event;\n\tprivate readonly _onBeforeCommandFinished = new Emitter<ITerminalCommand>();\n\treadonly onBeforeCommandFinished = this._onBeforeCommandFinished.event;\n\tprivate readonly _onCommandFinished = new Emitter<ITerminalCommand>();\n\treadonly onCommandFinished = this._onCommandFinished.event;\n\tprivate readonly _onCommandExecuted = new Emitter<void>();\n\treadonly onCommandExecuted = this._onCommandExecuted.event;\n\tprivate readonly _onCommandInvalidated = new Emitter<ITerminalCommand[]>();\n\treadonly onCommandInvalidated = this._onCommandInvalidated.event;\n\tprivate readonly _onCurrentCommandInvalidated = new Emitter<ICommandInvalidationRequest>();\n\treadonly onCurrentCommandInvalidated = this._onCurrentCommandInvalidated.event;\n\n\tconstructor(\n\t\tprivate readonly _terminal: Terminal,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._dimensions = {\n\t\t\tcols: this._terminal.cols,\n\t\t\trows: this._terminal.rows\n\t\t};\n\t\tthis._terminal.onResize(e => this._handleResize(e));\n\t\tthis._terminal.onCursorMove(() => this._handleCursorMove());\n\t\tthis._setupClearListeners();\n\t}\n\n\tprivate _handleResize(e: { cols: number; rows: number }) {\n\t\tif (this._isWindowsPty) {\n\t\t\tthis._preHandleResizeWindows(e);\n\t\t}\n\t\tthis._dimensions.cols = e.cols;\n\t\tthis._dimensions.rows = e.rows;\n\t}\n\n\t@debounce(500)\n\tprivate _handleCursorMove() {\n\t\t// Early versions of conpty do not have real support for an alt buffer, in addition certain\n\t\t// commands such as tsc watch will write to the top of the normal buffer. The following\n\t\t// checks when the cursor has moved while the normal buffer is empty and if it is above the\n\t\t// current command, all decorations within the viewport will be invalidated.\n\t\t//\n\t\t// This function is debounced so that the cursor is only checked when it is stable so\n\t\t// conpty's screen reprinting will not trigger decoration clearing.\n\t\t//\n\t\t// This is mostly a workaround for Windows but applies to all OS' because of the tsc watch\n\t\t// case.\n\t\tif (this._terminal.buffer.active === this._terminal.buffer.normal && this._currentCommand.commandStartMarker) {\n\t\t\tif (this._terminal.buffer.active.baseY + this._terminal.buffer.active.cursorY < this._currentCommand.commandStartMarker.line) {\n\t\t\t\tthis._clearCommandsInViewport();\n\t\t\t\tthis._currentCommand.isInvalid = true;\n\t\t\t\tthis._onCurrentCommandInvalidated.fire({ reason: CommandInvalidationReason.Windows });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _setupClearListeners() {\n\t\t// Setup listeners for when clear is run in the shell. Since we don't know immediately if\n\t\t// this is a Windows pty, listen to both routes and do the Windows check inside them\n\n\t\t// For a Windows backend we cannot listen to CSI J, instead we assume running clear or\n\t\t// cls will clear all commands in the viewport. This is not perfect but it's right most\n\t\t// of the time.\n\t\tthis.onBeforeCommandFinished(command => {\n\t\t\tif (this._isWindowsPty) {\n\t\t\t\tif (command.command.trim().toLowerCase() === 'clear' || command.command.trim().toLowerCase() === 'cls') {\n\t\t\t\t\tthis._clearCommandsInViewport();\n\t\t\t\t\tthis._currentCommand.isInvalid = true;\n\t\t\t\t\tthis._onCurrentCommandInvalidated.fire({ reason: CommandInvalidationReason.Windows });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// For non-Windows backends we can just listen to CSI J which is what the clear command\n\t\t// typically emits.\n\t\tthis._terminal.parser.registerCsiHandler({ final: 'J' }, params => {\n\t\t\tif (!this._isWindowsPty) {\n\t\t\t\tif (params.length >= 1 && (params[0] === 2 || params[0] === 3)) {\n\t\t\t\t\tthis._clearCommandsInViewport();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We don't want to override xterm.js' default behavior, just augment it\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate _preHandleResizeWindows(e: { cols: number; rows: number }) {\n\t\t// Resize behavior is different under conpty; instead of bringing parts of the scrollback\n\t\t// back into the viewport, new lines are inserted at the bottom (ie. the same behavior as if\n\t\t// there was no scrollback).\n\t\t//\n\t\t// On resize this workaround will wait for a conpty reprint to occur by waiting for the\n\t\t// cursor to move, it will then calculate the number of lines that the commands within the\n\t\t// viewport _may have_ shifted. After verifying the content of the current line is\n\t\t// incorrect, the line after shifting is checked and if that matches delete events are fired\n\t\t// on the xterm.js buffer to move the markers.\n\t\t//\n\t\t// While a bit hacky, this approach is quite safe and seems to work great at least for pwsh.\n\t\tconst baseY = this._terminal.buffer.active.baseY;\n\t\tconst rowsDifference = e.rows - this._dimensions.rows;\n\t\t// Only do when rows increase, do in the next frame as this needs to happen after\n\t\t// conpty reprints the screen\n\t\tif (rowsDifference > 0) {\n\t\t\tthis._waitForCursorMove().then(() => {\n\t\t\t\t// Calculate the number of lines the content may have shifted, this will max out at\n\t\t\t\t// scrollback count since the standard behavior will be used then\n\t\t\t\tconst potentialShiftedLineCount = Math.min(rowsDifference, baseY);\n\t\t\t\t// For each command within the viewport, assume commands are in the correct order\n\t\t\t\tfor (let i = this.commands.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst command = this.commands[i];\n\t\t\t\t\tif (!command.marker || command.marker.line < baseY || command.commandStartLineContent === undefined) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst line = this._terminal.buffer.active.getLine(command.marker.line);\n\t\t\t\t\tif (!line || line.translateToString(true) === command.commandStartLineContent) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst shiftedY = command.marker.line - potentialShiftedLineCount;\n\t\t\t\t\tconst shiftedLine = this._terminal.buffer.active.getLine(shiftedY);\n\t\t\t\t\tif (shiftedLine?.translateToString(true) !== command.commandStartLineContent) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// HACK: xterm.js doesn't expose this by design as it's an internal core\n\t\t\t\t\t// function an embedder could easily do damage with. Additionally, this\n\t\t\t\t\t// can't really be upstreamed since the event relies on shell integration to\n\t\t\t\t\t// verify the shifting is necessary.\n\t\t\t\t\t(this._terminal as any)._core._bufferService.buffer.lines.onDeleteEmitter.fire({\n\t\t\t\t\t\tindex: this._terminal.buffer.active.baseY,\n\t\t\t\t\t\tamount: potentialShiftedLineCount\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _clearCommandsInViewport(): void {\n\t\t// Find the number of commands on the tail end of the array that are within the viewport\n\t\tlet count = 0;\n\t\tfor (let i = this._commands.length - 1; i >= 0; i--) {\n\t\t\tconst line = this._commands[i].marker?.line;\n\t\t\tif (line && line < this._terminal.buffer.active.baseY) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount++;\n\t\t}\n\t\t// Remove them\n\t\tif (count > 0) {\n\t\t\tthis._onCommandInvalidated.fire(this._commands.splice(this._commands.length - count, count));\n\t\t}\n\t}\n\n\tprivate _waitForCursorMove(): Promise<void> {\n\t\tconst cursorX = this._terminal.buffer.active.cursorX;\n\t\tconst cursorY = this._terminal.buffer.active.cursorY;\n\t\tlet totalDelay = 0;\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (cursorX !== this._terminal.buffer.active.cursorX || cursorY !== this._terminal.buffer.active.cursorY) {\n\t\t\t\t\tresolve();\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttotalDelay += 10;\n\t\t\t\tif (totalDelay > 1000) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}, 10);\n\t\t});\n\t}\n\n\tsetCwd(value: string) {\n\t\tthis._cwd = value;\n\t}\n\n\tsetIsWindowsPty(value: boolean) {\n\t\tthis._isWindowsPty = value;\n\t}\n\n\tsetIsCommandStorageDisabled(): void {\n\t\tthis.__isCommandStorageDisabled = true;\n\t}\n\n\tgetCwdForLine(line: number): string | undefined {\n\t\t// Handle the current partial command first, anything below it's prompt is considered part\n\t\t// of the current command\n\t\tif (this._currentCommand.promptStartMarker && line >= this._currentCommand.promptStartMarker?.line) {\n\t\t\treturn this._cwd;\n\t\t}\n\t\t// TODO: It would be more reliable to take the closest cwd above the line if it isn't found for the line\n\t\t// TODO: Use a reverse for loop to find the line to avoid creating another array\n\t\tconst reversed = [...this._commands].reverse();\n\t\treturn reversed.find(c => c.marker!.line <= line - 1)?.cwd;\n\t}\n\n\thandlePromptStart(options?: IHandleCommandOptions): void {\n\t\tthis._currentCommand.promptStartMarker = options?.marker || this._terminal.registerMarker(0);\n\t\tthis._logService.debug('CommandDetectionCapability#handlePromptStart', this._terminal.buffer.active.cursorX, this._currentCommand.promptStartMarker?.line);\n\t}\n\n\thandleContinuationStart(): void {\n\t\tthis._currentCommand.currentContinuationMarker = this._terminal.registerMarker(0);\n\t\tthis._logService.debug('CommandDetectionCapability#handleContinuationStart', this._currentCommand.currentContinuationMarker);\n\t}\n\n\thandleContinuationEnd(): void {\n\t\tif (!this._currentCommand.currentContinuationMarker) {\n\t\t\tthis._logService.warn('CommandDetectionCapability#handleContinuationEnd Received continuation end without start');\n\t\t\treturn;\n\t\t}\n\t\tif (!this._currentCommand.continuations) {\n\t\t\tthis._currentCommand.continuations = [];\n\t\t}\n\t\tthis._currentCommand.continuations.push({\n\t\t\tmarker: this._currentCommand.currentContinuationMarker,\n\t\t\tend: this._terminal.buffer.active.cursorX\n\t\t});\n\t\tthis._currentCommand.currentContinuationMarker = undefined;\n\t\tthis._logService.debug('CommandDetectionCapability#handleContinuationEnd', this._currentCommand.continuations[this._currentCommand.continuations.length - 1]);\n\t}\n\n\thandleRightPromptStart(): void {\n\t\tthis._currentCommand.commandRightPromptStartX = this._terminal.buffer.active.cursorX;\n\t\tthis._logService.debug('CommandDetectionCapability#handleRightPromptStart', this._currentCommand.commandRightPromptStartX);\n\t}\n\n\thandleRightPromptEnd(): void {\n\t\tthis._currentCommand.commandRightPromptEndX = this._terminal.buffer.active.cursorX;\n\t\tthis._logService.debug('CommandDetectionCapability#handleRightPromptEnd', this._currentCommand.commandRightPromptEndX);\n\t}\n\n\thandleCommandStart(options?: IHandleCommandOptions): void {\n\t\tthis._handleCommandStartOptions = options;\n\t\t// Only update the column if the line has already been set\n\t\tthis._currentCommand.commandStartMarker = options?.marker || this._currentCommand.commandStartMarker;\n\t\tif (this._currentCommand.commandStartMarker?.line === this._terminal.buffer.active.cursorY) {\n\t\t\tthis._currentCommand.commandStartX = this._terminal.buffer.active.cursorX;\n\t\t\tthis._logService.debug('CommandDetectionCapability#handleCommandStart', this._currentCommand.commandStartX, this._currentCommand.commandStartMarker?.line);\n\t\t\treturn;\n\t\t}\n\t\tif (this._isWindowsPty) {\n\t\t\tthis._handleCommandStartWindows();\n\t\t\treturn;\n\t\t}\n\t\tthis._currentCommand.commandStartX = this._terminal.buffer.active.cursorX;\n\t\tthis._currentCommand.commandStartMarker = options?.marker || this._terminal.registerMarker(0);\n\n\t\t// Clear executed as it must happen after command start\n\t\tthis._currentCommand.commandExecutedMarker?.dispose();\n\t\tthis._currentCommand.commandExecutedMarker = undefined;\n\t\tthis._currentCommand.commandExecutedX = undefined;\n\t\tfor (const m of this._commandMarkers) {\n\t\t\tm.dispose();\n\t\t}\n\t\tthis._commandMarkers.length = 0;\n\n\t\tthis._onCommandStarted.fire({ marker: options?.marker || this._currentCommand.commandStartMarker, markProperties: options?.markProperties } as ITerminalCommand);\n\t\tthis._logService.debug('CommandDetectionCapability#handleCommandStart', this._currentCommand.commandStartX, this._currentCommand.commandStartMarker?.line);\n\t}\n\n\tprivate _handleCommandStartWindows(): void {\n\t\tthis._currentCommand.commandStartX = this._terminal.buffer.active.cursorX;\n\n\t\t// On Windows track all cursor movements after the command start sequence\n\t\tthis._commandMarkers.length = 0;\n\t\t// HACK: Fire command started on the following frame on Windows to allow the cursor\n\t\t// position to update as conpty often prints the sequence on a different line to the\n\t\t// actual line the command started on.\n\t\ttimeout(0).then(() => {\n\t\t\tif (!this._currentCommand.commandExecutedMarker) {\n\t\t\t\tthis._onCursorMoveListener = this._terminal.onCursorMove(() => {\n\t\t\t\t\tif (this._commandMarkers.length === 0 || this._commandMarkers[this._commandMarkers.length - 1].line !== this._terminal.buffer.active.cursorY) {\n\t\t\t\t\t\tconst marker = this._terminal.registerMarker(0);\n\t\t\t\t\t\tif (marker) {\n\t\t\t\t\t\t\tthis._commandMarkers.push(marker);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._currentCommand.commandStartMarker = this._terminal.registerMarker(0);\n\t\t\tif (this._currentCommand.commandStartMarker) {\n\t\t\t\tconst line = this._terminal.buffer.active.getLine(this._currentCommand.commandStartMarker.line);\n\t\t\t\tif (line) {\n\t\t\t\t\tthis._currentCommand.commandStartLineContent = line.translateToString(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onCommandStarted.fire({ marker: this._currentCommand.commandStartMarker } as ITerminalCommand);\n\t\t\tthis._logService.debug('CommandDetectionCapability#_handleCommandStartWindows', this._currentCommand.commandStartX, this._currentCommand.commandStartMarker?.line);\n\t\t});\n\t}\n\n\thandleGenericCommand(options?: IHandleCommandOptions): void {\n\t\tif (options?.markProperties?.disableCommandStorage) {\n\t\t\tthis.setIsCommandStorageDisabled();\n\t\t}\n\t\tthis.handlePromptStart(options);\n\t\tthis.handleCommandStart(options);\n\t\tthis.handleCommandExecuted(options);\n\t\tthis.handleCommandFinished(undefined, options);\n\t}\n\n\thandleCommandExecuted(options?: IHandleCommandOptions): void {\n\t\tif (this._isWindowsPty) {\n\t\t\tthis._handleCommandExecutedWindows();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentCommand.commandExecutedMarker = options?.marker || this._terminal.registerMarker(0);\n\t\tthis._currentCommand.commandExecutedX = this._terminal.buffer.active.cursorX;\n\t\tthis._logService.debug('CommandDetectionCapability#handleCommandExecuted', this._currentCommand.commandExecutedX, this._currentCommand.commandExecutedMarker?.line);\n\n\t\t// Sanity check optional props\n\t\tif (!this._currentCommand.commandStartMarker || !this._currentCommand.commandExecutedMarker || this._currentCommand.commandStartX === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Calculate the command\n\t\tthis._currentCommand.command = this.__isCommandStorageDisabled ? '' : this._terminal.buffer.active.getLine(this._currentCommand.commandStartMarker.line)?.translateToString(true, this._currentCommand.commandStartX, this._currentCommand.commandRightPromptStartX).trim();\n\t\tlet y = this._currentCommand.commandStartMarker.line + 1;\n\t\tconst commandExecutedLine = this._currentCommand.commandExecutedMarker.line;\n\t\tfor (; y < commandExecutedLine; y++) {\n\t\t\tconst line = this._terminal.buffer.active.getLine(y);\n\t\t\tif (line) {\n\t\t\t\tconst continuation = this._currentCommand.continuations?.find(e => e.marker.line === y);\n\t\t\t\tif (continuation) {\n\t\t\t\t\tthis._currentCommand.command += '\\n';\n\t\t\t\t}\n\t\t\t\tconst startColumn = continuation?.end ?? 0;\n\t\t\t\tthis._currentCommand.command += line.translateToString(true, startColumn);\n\t\t\t}\n\t\t}\n\t\tif (y === commandExecutedLine) {\n\t\t\tthis._currentCommand.command += this._terminal.buffer.active.getLine(commandExecutedLine)?.translateToString(true, undefined, this._currentCommand.commandExecutedX) || '';\n\t\t}\n\t\tthis._onCommandExecuted.fire();\n\t}\n\n\tprivate _handleCommandExecutedWindows(): void {\n\t\t// On Windows, use the gathered cursor move markers to correct the command start and\n\t\t// executed markers\n\t\tthis._onCursorMoveListener?.dispose();\n\t\tthis._onCursorMoveListener = undefined;\n\t\tthis._evaluateCommandMarkersWindows();\n\t\tthis._currentCommand.commandExecutedX = this._terminal.buffer.active.cursorX;\n\t\tthis._onCommandExecuted.fire();\n\t\tthis._logService.debug('CommandDetectionCapability#handleCommandExecuted', this._currentCommand.commandExecutedX, this._currentCommand.commandExecutedMarker?.line);\n\t}\n\n\tinvalidateCurrentCommand(request: ICommandInvalidationRequest): void {\n\t\tthis._currentCommand.isInvalid = true;\n\t\tthis._onCurrentCommandInvalidated.fire(request);\n\t}\n\n\thandleCommandFinished(exitCode: number | undefined, options?: IHandleCommandOptions): void {\n\t\tif (this._isWindowsPty) {\n\t\t\tthis._preHandleCommandFinishedWindows();\n\t\t}\n\n\t\tthis._currentCommand.commandFinishedMarker = options?.marker || this._terminal.registerMarker(0);\n\t\tlet command = this._currentCommand.command;\n\t\tthis._logService.debug('CommandDetectionCapability#handleCommandFinished', this._terminal.buffer.active.cursorX, this._currentCommand.commandFinishedMarker?.line, this._currentCommand.command, this._currentCommand);\n\t\tthis._exitCode = exitCode;\n\n\t\t// HACK: Handle a special case on some versions of bash where identical commands get merged\n\t\t// in the output of `history`, this detects that case and sets the exit code to the the last\n\t\t// command's exit code. This covered the majority of cases but will fail if the same command\n\t\t// runs with a different exit code, that will need a more robust fix where we send the\n\t\t// command ID and exit code over to the capability to adjust there.\n\t\tif (this._exitCode === undefined) {\n\t\t\tconst lastCommand = this.commands.length > 0 ? this.commands[this.commands.length - 1] : undefined;\n\t\t\tif (command && command.length > 0 && lastCommand?.command === command) {\n\t\t\t\tthis._exitCode = lastCommand.exitCode;\n\t\t\t}\n\t\t}\n\n\t\tif (this._currentCommand.commandStartMarker === undefined || !this._terminal.buffer.active) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When the command finishes and executed never fires the placeholder selector should be used.\n\t\tif (this._exitCode === undefined && command === undefined) {\n\t\t\tcommand = '';\n\t\t}\n\n\t\tif ((command !== undefined && !command.startsWith('\\\\')) || this._handleCommandStartOptions?.ignoreCommandLine) {\n\t\t\tconst buffer = this._terminal.buffer.active;\n\t\t\tconst timestamp = Date.now();\n\t\t\tconst executedMarker = this._currentCommand.commandExecutedMarker;\n\t\t\tconst endMarker = this._currentCommand.commandFinishedMarker;\n\t\t\tconst newCommand: ITerminalCommand = {\n\t\t\t\tcommand: this._handleCommandStartOptions?.ignoreCommandLine ? '' : (command || ''),\n\t\t\t\tmarker: this._currentCommand.commandStartMarker,\n\t\t\t\tendMarker,\n\t\t\t\texecutedMarker,\n\t\t\t\ttimestamp,\n\t\t\t\tcwd: this._cwd,\n\t\t\t\texitCode: this._exitCode,\n\t\t\t\tcommandStartLineContent: this._currentCommand.commandStartLineContent,\n\t\t\t\thasOutput: () => !executedMarker?.isDisposed && !endMarker?.isDisposed && !!(executedMarker && endMarker && executedMarker?.line < endMarker!.line),\n\t\t\t\tgetOutput: () => getOutputForCommand(executedMarker, endMarker, buffer),\n\t\t\t\tgetOutputMatch: (outputMatcher: ITerminalOutputMatcher) => getOutputMatchForCommand(executedMarker, endMarker, buffer, this._terminal.cols, outputMatcher),\n\t\t\t\tmarkProperties: options?.markProperties\n\t\t\t};\n\t\t\tthis._commands.push(newCommand);\n\t\t\tthis._logService.debug('CommandDetectionCapability#onCommandFinished', newCommand);\n\n\t\t\tthis._onBeforeCommandFinished.fire(newCommand);\n\t\t\tif (!this._currentCommand.isInvalid) {\n\t\t\t\tthis._onCommandFinished.fire(newCommand);\n\t\t\t}\n\t\t}\n\t\tthis._currentCommand.previousCommandMarker = this._currentCommand.commandStartMarker;\n\t\tthis._currentCommand = {};\n\t\tthis._handleCommandStartOptions = undefined;\n\t}\n\n\tprivate _preHandleCommandFinishedWindows(): void {\n\t\tif (this._currentCommand.commandExecutedMarker) {\n\t\t\treturn;\n\t\t}\n\t\t// This is done on command finished just in case command executed never happens (for example\n\t\t// PSReadLine tab completion)\n\t\tif (this._commandMarkers.length === 0) {\n\t\t\t// If the command start timeout doesn't happen before command finished, just use the\n\t\t\t// current marker.\n\t\t\tif (!this._currentCommand.commandStartMarker) {\n\t\t\t\tthis._currentCommand.commandStartMarker = this._terminal.registerMarker(0);\n\t\t\t}\n\t\t\tif (this._currentCommand.commandStartMarker) {\n\t\t\t\tthis._commandMarkers.push(this._currentCommand.commandStartMarker);\n\t\t\t}\n\t\t}\n\t\tthis._evaluateCommandMarkersWindows();\n\t}\n\n\tprivate _evaluateCommandMarkersWindows(): void {\n\t\t// On Windows, use the gathered cursor move markers to correct the command start and\n\t\t// executed markers.\n\t\tif (this._commandMarkers.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._commandMarkers = this._commandMarkers.sort((a, b) => a.line - b.line);\n\t\tthis._currentCommand.commandStartMarker = this._commandMarkers[0];\n\t\tif (this._currentCommand.commandStartMarker) {\n\t\t\tconst line = this._terminal.buffer.active.getLine(this._currentCommand.commandStartMarker.line);\n\t\t\tif (line) {\n\t\t\t\tthis._currentCommand.commandStartLineContent = line.translateToString(true);\n\t\t\t}\n\t\t}\n\t\tthis._currentCommand.commandExecutedMarker = this._commandMarkers[this._commandMarkers.length - 1];\n\t}\n\n\tsetCommandLine(commandLine: string) {\n\t\tthis._logService.debug('CommandDetectionCapability#setCommandLine', commandLine);\n\t\tthis._currentCommand.command = commandLine;\n\t}\n\n\tserialize(): ISerializedCommandDetectionCapability {\n\t\tconst commands: ISerializedCommand[] = this.commands.map(e => {\n\t\t\treturn {\n\t\t\t\tstartLine: e.marker?.line,\n\t\t\t\tstartX: undefined,\n\t\t\t\tendLine: e.endMarker?.line,\n\t\t\t\texecutedLine: e.executedMarker?.line,\n\t\t\t\tcommand: this.__isCommandStorageDisabled ? '' : e.command,\n\t\t\t\tcwd: e.cwd,\n\t\t\t\texitCode: e.exitCode,\n\t\t\t\tcommandStartLineContent: e.commandStartLineContent,\n\t\t\t\ttimestamp: e.timestamp,\n\t\t\t\tmarkProperties: e.markProperties\n\t\t\t};\n\t\t});\n\t\tif (this._currentCommand.commandStartMarker) {\n\t\t\tcommands.push({\n\t\t\t\tstartLine: this._currentCommand.commandStartMarker.line,\n\t\t\t\tstartX: this._currentCommand.commandStartX,\n\t\t\t\tendLine: undefined,\n\t\t\t\texecutedLine: undefined,\n\t\t\t\tcommand: '',\n\t\t\t\tcwd: this._cwd,\n\t\t\t\texitCode: undefined,\n\t\t\t\tcommandStartLineContent: undefined,\n\t\t\t\ttimestamp: 0,\n\t\t\t\tmarkProperties: undefined\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\tisWindowsPty: this._isWindowsPty,\n\t\t\tcommands\n\t\t};\n\t}\n\n\tdeserialize(serialized: ISerializedCommandDetectionCapability): void {\n\t\tif (serialized.isWindowsPty) {\n\t\t\tthis.setIsWindowsPty(serialized.isWindowsPty);\n\t\t}\n\t\tconst buffer = this._terminal.buffer.normal;\n\t\tfor (const e of serialized.commands) {\n\t\t\tconst marker = e.startLine !== undefined ? this._terminal.registerMarker(e.startLine - (buffer.baseY + buffer.cursorY)) : undefined;\n\t\t\t// Check for invalid command\n\t\t\tif (!marker) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Partial command\n\t\t\tif (!e.endLine) {\n\t\t\t\tthis._currentCommand.commandStartMarker = marker;\n\t\t\t\tthis._currentCommand.commandStartX = e.startX;\n\t\t\t\tthis._cwd = e.cwd;\n\t\t\t\tthis._onCommandStarted.fire({ marker } as ITerminalCommand);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Full command\n\t\t\tconst endMarker = e.endLine !== undefined ? this._terminal.registerMarker(e.endLine - (buffer.baseY + buffer.cursorY)) : undefined;\n\t\t\tconst executedMarker = e.executedLine !== undefined ? this._terminal.registerMarker(e.executedLine - (buffer.baseY + buffer.cursorY)) : undefined;\n\t\t\tconst newCommand = {\n\t\t\t\tcommand: this.__isCommandStorageDisabled ? '' : e.command,\n\t\t\t\tmarker,\n\t\t\t\tendMarker,\n\t\t\t\texecutedMarker,\n\t\t\t\ttimestamp: e.timestamp,\n\t\t\t\tcwd: e.cwd,\n\t\t\t\tcommandStartLineContent: e.commandStartLineContent,\n\t\t\t\texitCode: e.exitCode,\n\t\t\t\thasOutput: () => !executedMarker?.isDisposed && !endMarker?.isDisposed && !!(executedMarker && endMarker && executedMarker.line < endMarker.line),\n\t\t\t\tgetOutput: () => getOutputForCommand(executedMarker, endMarker, buffer),\n\t\t\t\tgetOutputMatch: (outputMatcher: ITerminalOutputMatcher) => getOutputMatchForCommand(executedMarker, endMarker, buffer, this._terminal.cols, outputMatcher),\n\t\t\t\tmarkProperties: e.markProperties\n\t\t\t};\n\t\t\tthis._commands.push(newCommand);\n\t\t\tthis._logService.debug('CommandDetectionCapability#onCommandFinished', newCommand);\n\t\t\tthis._onCommandFinished.fire(newCommand);\n\t\t}\n\t}\n}\n\nfunction getOutputForCommand(executedMarker: IMarker | undefined, endMarker: IMarker | undefined, buffer: IBuffer): string | undefined {\n\tif (!executedMarker || !endMarker) {\n\t\treturn undefined;\n\t}\n\tconst startLine = executedMarker.line;\n\tconst endLine = endMarker.line;\n\n\tif (startLine === endLine) {\n\t\treturn undefined;\n\t}\n\tlet output = '';\n\tlet line: IBufferLine | undefined;\n\tfor (let i = startLine; i < endLine; i++) {\n\t\tline = buffer.getLine(i);\n\t\tif (!line) {\n\t\t\tcontinue;\n\t\t}\n\t\toutput += line.translateToString(!line.isWrapped) + (line.isWrapped ? '' : '\\n');\n\t}\n\treturn output === '' ? undefined : output;\n}\n\nexport function getOutputMatchForCommand(executedMarker: IMarker | undefined, endMarker: IMarker | undefined, buffer: IBuffer, cols: number, outputMatcher: ITerminalOutputMatcher): RegExpMatchArray | undefined {\n\tif (!executedMarker || !endMarker) {\n\t\treturn undefined;\n\t}\n\tconst startLine = executedMarker.line;\n\tconst endLine = endMarker.line;\n\n\tconst matcher = outputMatcher.lineMatcher;\n\tconst linesToCheck = typeof matcher === 'string' ? 1 : countNewLines(matcher);\n\tconst lines: string[] = [];\n\tif (outputMatcher.anchor === 'bottom') {\n\t\tfor (let i = endLine - (outputMatcher.offset || 0); i >= startLine; i--) {\n\t\t\tlet wrappedLineStart = i;\n\t\t\tconst wrappedLineEnd = i;\n\t\t\twhile (wrappedLineStart >= startLine && buffer.getLine(wrappedLineStart)?.isWrapped) {\n\t\t\t\twrappedLineStart--;\n\t\t\t}\n\t\t\ti = wrappedLineStart;\n\t\t\tlines.unshift(getXtermLineContent(buffer, wrappedLineStart, wrappedLineEnd, cols));\n\t\t\tif (lines.length > linesToCheck) {\n\t\t\t\tlines.pop();\n\t\t\t}\n\t\t\tconst match = lines.join('\\n').match(matcher);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (let i = startLine + (outputMatcher.offset || 0); i < endLine; i++) {\n\t\t\tconst wrappedLineStart = i;\n\t\t\tlet wrappedLineEnd = i;\n\t\t\twhile (wrappedLineEnd + 1 < endLine && buffer.getLine(wrappedLineEnd + 1)?.isWrapped) {\n\t\t\t\twrappedLineEnd++;\n\t\t\t}\n\t\t\ti = wrappedLineEnd;\n\t\t\tlines.push(getXtermLineContent(buffer, wrappedLineStart, wrappedLineEnd, cols));\n\t\t\tif (lines.length === linesToCheck) {\n\t\t\t\tlines.shift();\n\t\t\t}\n\t\t\tif (outputMatcher) {\n\t\t\t\tconst match = lines.join('\\n').match(matcher);\n\t\t\t\tif (match) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction getXtermLineContent(buffer: IBuffer, lineStart: number, lineEnd: number, cols: number): string {\n\t// Cap the maximum number of lines generated to prevent potential performance problems. This is\n\t// more of a sanity check as the wrapped line should already be trimmed down at this point.\n\tconst maxLineLength = Math.max(2048 / cols * 2);\n\tlineEnd = Math.min(lineEnd, lineStart + maxLineLength);\n\tlet content = '';\n\tfor (let i = lineStart; i <= lineEnd; i++) {\n\t\t// Make sure only 0 to cols are considered as resizing when windows mode is enabled will\n\t\t// retain buffer data outside of the terminal width as reflow is disabled.\n\t\tconst line = buffer.getLine(i);\n\t\tif (line) {\n\t\t\tcontent += line.translateToString(true, 0, cols);\n\t\t}\n\t}\n\treturn content;\n}\n\nfunction countNewLines(regex: RegExp): number {\n\tif (!regex.multiline) {\n\t\treturn 1;\n\t}\n\tconst source = regex.source;\n\tlet count = 1;\n\tlet i = source.indexOf('\\\\n');\n\twhile (i !== -1) {\n\t\tcount++;\n\t\ti = source.indexOf('\\\\n', i + 1);\n\t}\n\treturn count;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { ICwdDetectionCapability, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\n\nexport class CwdDetectionCapability implements ICwdDetectionCapability {\n\treadonly type = TerminalCapability.CwdDetection;\n\tprivate _cwd = '';\n\tprivate _cwds = new Map</*cwd*/string, /*frequency*/number>();\n\n\t/**\n\t * Gets the list of cwds seen in this session in order of last accessed.\n\t */\n\tget cwds(): string[] {\n\t\treturn Array.from(this._cwds.keys());\n\t}\n\n\tprivate readonly _onDidChangeCwd = new Emitter<string>();\n\treadonly onDidChangeCwd = this._onDidChangeCwd.event;\n\n\tgetCwd(): string {\n\t\treturn this._cwd;\n\t}\n\n\tupdateCwd(cwd: string): void {\n\t\tconst didChange = this._cwd !== cwd;\n\t\tthis._cwd = cwd;\n\t\tconst count = this._cwds.get(this._cwd) || 0;\n\t\tthis._cwds.delete(this._cwd); // Delete to put it at the bottom of the iterable\n\t\tthis._cwds.set(this._cwd, count + 1);\n\t\tif (didChange) {\n\t\t\tthis._onDidChangeCwd.fire(cwd);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { IPartialCommandDetectionCapability, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\n// Importing types is safe in any layer\n// eslint-disable-next-line local/code-import-patterns\nimport { IMarker, Terminal } from 'xterm-headless';\n\nconst enum Constants {\n\t/**\n\t * The minimum size of the prompt in which to assume the line is a command.\n\t */\n\tMinimumPromptLength = 2\n}\n\n/**\n * This capability guesses where commands are based on where the cursor was when enter was pressed.\n * It's very hit or miss but it's often correct and better than nothing.\n */\nexport class PartialCommandDetectionCapability implements IPartialCommandDetectionCapability {\n\treadonly type = TerminalCapability.PartialCommandDetection;\n\n\tprivate readonly _commands: IMarker[] = [];\n\n\tget commands(): readonly IMarker[] { return this._commands; }\n\n\tprivate readonly _onCommandFinished = new Emitter<IMarker>();\n\treadonly onCommandFinished = this._onCommandFinished.event;\n\n\tconstructor(\n\t\tprivate readonly _terminal: Terminal,\n\t) {\n\t\tthis._terminal.onData(e => this._onData(e));\n\t\tthis._terminal.parser.registerCsiHandler({ final: 'J' }, params => {\n\t\t\tif (params.length >= 1 && (params[0] === 2 || params[0] === 3)) {\n\t\t\t\tthis._clearCommandsInViewport();\n\t\t\t}\n\t\t\t// We don't want to override xterm.js' default behavior, just augment it\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate _onData(data: string): void {\n\t\tif (data === '\\x0d') {\n\t\t\tthis._onEnter();\n\t\t}\n\t}\n\n\tprivate _onEnter(): void {\n\t\tif (!this._terminal) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._terminal.buffer.active.cursorX >= Constants.MinimumPromptLength) {\n\t\t\tconst marker = this._terminal.registerMarker(0);\n\t\t\tif (marker) {\n\t\t\t\tthis._commands.push(marker);\n\t\t\t\tthis._onCommandFinished.fire(marker);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _clearCommandsInViewport(): void {\n\t\t// Find the number of commands on the tail end of the array that are within the viewport\n\t\tlet count = 0;\n\t\tfor (let i = this._commands.length - 1; i >= 0; i--) {\n\t\t\tif (this._commands[i].line < this._terminal.buffer.active.baseY) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount++;\n\t\t}\n\t\t// Remove them\n\t\tthis._commands.splice(this._commands.length - count, count);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ITerminalCapabilityImplMap, ITerminalCapabilityStore, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\n\nexport class TerminalCapabilityStore extends Disposable implements ITerminalCapabilityStore {\n\tprivate _map: Map<TerminalCapability, { type: TerminalCapability }> = new Map();\n\n\tprivate readonly _onDidRemoveCapability = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidRemoveCapability = this._onDidRemoveCapability.event;\n\tprivate readonly _onDidAddCapability = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidAddCapability = this._onDidAddCapability.event;\n\n\tget items(): IterableIterator<TerminalCapability> {\n\t\treturn this._map.keys();\n\t}\n\n\tadd<T extends TerminalCapability>(capability: T, impl: ITerminalCapabilityImplMap[T]) {\n\t\tthis._map.set(capability, impl);\n\t\tthis._onDidAddCapability.fire(capability);\n\t}\n\n\tget<T extends TerminalCapability>(capability: T): ITerminalCapabilityImplMap[T] | undefined {\n\t\t// HACK: This isn't totally safe since the Map key and value are not connected\n\t\treturn this._map.get(capability) as ITerminalCapabilityImplMap[T] | undefined;\n\t}\n\n\tremove(capability: TerminalCapability) {\n\t\tif (!this._map.has(capability)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._map.delete(capability);\n\t\tthis._onDidRemoveCapability.fire(capability);\n\t}\n\n\thas(capability: TerminalCapability) {\n\t\treturn this._map.has(capability);\n\t}\n}\n\nexport class TerminalCapabilityStoreMultiplexer extends Disposable implements ITerminalCapabilityStore {\n\treadonly _stores: ITerminalCapabilityStore[] = [];\n\n\tprivate readonly _onDidRemoveCapability = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidRemoveCapability = this._onDidRemoveCapability.event;\n\tprivate readonly _onDidAddCapability = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidAddCapability = this._onDidAddCapability.event;\n\n\tget items(): IterableIterator<TerminalCapability> {\n\t\treturn this._items();\n\t}\n\n\tprivate *_items(): IterableIterator<TerminalCapability> {\n\t\tfor (const store of this._stores) {\n\t\t\tfor (const c of store.items) {\n\t\t\t\tyield c;\n\t\t\t}\n\t\t}\n\t}\n\n\thas(capability: TerminalCapability): boolean {\n\t\tfor (const store of this._stores) {\n\t\t\tfor (const c of store.items) {\n\t\t\t\tif (c === capability) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget<T extends TerminalCapability>(capability: T): ITerminalCapabilityImplMap[T] | undefined {\n\t\tfor (const store of this._stores) {\n\t\t\tconst c = store.get(capability);\n\t\t\tif (c) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tadd(store: ITerminalCapabilityStore) {\n\t\tthis._stores.push(store);\n\t\tfor (const capability of store.items) {\n\t\t\tthis._onDidAddCapability.fire(capability);\n\t\t}\n\t\tstore.onDidAddCapability(e => this._onDidAddCapability.fire(e));\n\t\tstore.onDidRemoveCapability(e => this._onDidRemoveCapability.fire(e));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n/**\n * A helper class to track requests that have replies. Using this it's easy to implement an event\n * that accepts a reply.\n */\nexport class RequestStore<T, RequestArgs> extends Disposable {\n\tprivate _lastRequestId = 0;\n\tprivate readonly _timeout: number;\n\tprivate _pendingRequests: Map<number, (resolved: T) => void> = new Map();\n\tprivate _pendingRequestDisposables: Map<number, IDisposable[]> = new Map();\n\n\tprivate readonly _onCreateRequest = this._register(new Emitter<RequestArgs & { requestId: number }>());\n\treadonly onCreateRequest = this._onCreateRequest.event;\n\n\t/**\n\t * @param timeout How long in ms to allow requests to go unanswered for, undefined will use the\n\t * default (15 seconds).\n\t */\n\tconstructor(\n\t\ttimeout: number | undefined,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._timeout = timeout === undefined ? 15000 : timeout;\n\t}\n\n\t/**\n\t * Creates a request.\n\t * @param args The arguments to pass to the onCreateRequest event.\n\t */\n\tcreateRequest(args: RequestArgs): Promise<T> {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\tconst requestId = ++this._lastRequestId;\n\t\t\tthis._pendingRequests.set(requestId, resolve);\n\t\t\tthis._onCreateRequest.fire({ requestId, ...args });\n\t\t\tconst tokenSource = new CancellationTokenSource();\n\t\t\ttimeout(this._timeout, tokenSource.token).then(() => reject(`Request ${requestId} timed out (${this._timeout}ms)`));\n\t\t\tthis._pendingRequestDisposables.set(requestId, [toDisposable(() => tokenSource.cancel())]);\n\t\t});\n\t}\n\n\t/**\n\t * Accept a reply to a request.\n\t * @param requestId The request ID originating from the onCreateRequest event.\n\t * @param data The reply data.\n\t */\n\tacceptReply(requestId: number, data: T) {\n\t\tconst resolveRequest = this._pendingRequests.get(requestId);\n\t\tif (resolveRequest) {\n\t\t\tthis._pendingRequests.delete(requestId);\n\t\t\tdispose(this._pendingRequestDisposables.get(requestId) || []);\n\t\t\tthis._pendingRequestDisposables.delete(requestId);\n\t\t\tresolveRequest(data);\n\t\t} else {\n\t\t\tthis._logService.warn(`RequestStore#acceptReply was called without receiving a matching request ${requestId}`);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IPtyHostProcessReplayEvent, ISerializedCommandDetectionCapability, ITerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ISerializableEnvironmentVariableCollections } from 'vs/platform/terminal/common/environmentVariable';\n\nexport const enum TerminalSettingPrefix {\n\tShell = 'terminal.integrated.shell.',\n\tShellArgs = 'terminal.integrated.shellArgs.',\n\tDefaultProfile = 'terminal.integrated.defaultProfile.',\n\tProfiles = 'terminal.integrated.profiles.'\n}\n\nexport const enum TerminalSettingId {\n\tShellLinux = 'terminal.integrated.shell.linux',\n\tShellMacOs = 'terminal.integrated.shell.osx',\n\tShellWindows = 'terminal.integrated.shell.windows',\n\tSendKeybindingsToShell = 'terminal.integrated.sendKeybindingsToShell',\n\tAutomationShellLinux = 'terminal.integrated.automationShell.linux',\n\tAutomationShellMacOs = 'terminal.integrated.automationShell.osx',\n\tAutomationShellWindows = 'terminal.integrated.automationShell.windows',\n\tAutomationProfileLinux = 'terminal.integrated.automationProfile.linux',\n\tAutomationProfileMacOs = 'terminal.integrated.automationProfile.osx',\n\tAutomationProfileWindows = 'terminal.integrated.automationProfile.windows',\n\tShellArgsLinux = 'terminal.integrated.shellArgs.linux',\n\tShellArgsMacOs = 'terminal.integrated.shellArgs.osx',\n\tShellArgsWindows = 'terminal.integrated.shellArgs.windows',\n\tProfilesWindows = 'terminal.integrated.profiles.windows',\n\tProfilesMacOs = 'terminal.integrated.profiles.osx',\n\tProfilesLinux = 'terminal.integrated.profiles.linux',\n\tDefaultProfileLinux = 'terminal.integrated.defaultProfile.linux',\n\tDefaultProfileMacOs = 'terminal.integrated.defaultProfile.osx',\n\tDefaultProfileWindows = 'terminal.integrated.defaultProfile.windows',\n\tUseWslProfiles = 'terminal.integrated.useWslProfiles',\n\tTabsDefaultColor = 'terminal.integrated.tabs.defaultColor',\n\tTabsDefaultIcon = 'terminal.integrated.tabs.defaultIcon',\n\tTabsEnabled = 'terminal.integrated.tabs.enabled',\n\tTabsEnableAnimation = 'terminal.integrated.tabs.enableAnimation',\n\tTabsHideCondition = 'terminal.integrated.tabs.hideCondition',\n\tTabsShowActiveTerminal = 'terminal.integrated.tabs.showActiveTerminal',\n\tTabsShowActions = 'terminal.integrated.tabs.showActions',\n\tTabsLocation = 'terminal.integrated.tabs.location',\n\tTabsFocusMode = 'terminal.integrated.tabs.focusMode',\n\tMacOptionIsMeta = 'terminal.integrated.macOptionIsMeta',\n\tMacOptionClickForcesSelection = 'terminal.integrated.macOptionClickForcesSelection',\n\tAltClickMovesCursor = 'terminal.integrated.altClickMovesCursor',\n\tCopyOnSelection = 'terminal.integrated.copyOnSelection',\n\tEnableMultiLinePasteWarning = 'terminal.integrated.enableMultiLinePasteWarning',\n\tDrawBoldTextInBrightColors = 'terminal.integrated.drawBoldTextInBrightColors',\n\tFontFamily = 'terminal.integrated.fontFamily',\n\tFontSize = 'terminal.integrated.fontSize',\n\tLetterSpacing = 'terminal.integrated.letterSpacing',\n\tLineHeight = 'terminal.integrated.lineHeight',\n\tMinimumContrastRatio = 'terminal.integrated.minimumContrastRatio',\n\tFastScrollSensitivity = 'terminal.integrated.fastScrollSensitivity',\n\tMouseWheelScrollSensitivity = 'terminal.integrated.mouseWheelScrollSensitivity',\n\tBellDuration = 'terminal.integrated.bellDuration',\n\tFontWeight = 'terminal.integrated.fontWeight',\n\tFontWeightBold = 'terminal.integrated.fontWeightBold',\n\tCursorBlinking = 'terminal.integrated.cursorBlinking',\n\tCursorStyle = 'terminal.integrated.cursorStyle',\n\tCursorWidth = 'terminal.integrated.cursorWidth',\n\tScrollback = 'terminal.integrated.scrollback',\n\tDetectLocale = 'terminal.integrated.detectLocale',\n\tDefaultLocation = 'terminal.integrated.defaultLocation',\n\tGpuAcceleration = 'terminal.integrated.gpuAcceleration',\n\tTerminalTitleSeparator = 'terminal.integrated.tabs.separator',\n\tTerminalTitle = 'terminal.integrated.tabs.title',\n\tTerminalDescription = 'terminal.integrated.tabs.description',\n\tRightClickBehavior = 'terminal.integrated.rightClickBehavior',\n\tCwd = 'terminal.integrated.cwd',\n\tConfirmOnExit = 'terminal.integrated.confirmOnExit',\n\tConfirmOnKill = 'terminal.integrated.confirmOnKill',\n\tEnableBell = 'terminal.integrated.enableBell',\n\tCommandsToSkipShell = 'terminal.integrated.commandsToSkipShell',\n\tAllowChords = 'terminal.integrated.allowChords',\n\tAllowMnemonics = 'terminal.integrated.allowMnemonics',\n\tEnvMacOs = 'terminal.integrated.env.osx',\n\tEnvLinux = 'terminal.integrated.env.linux',\n\tEnvWindows = 'terminal.integrated.env.windows',\n\tEnvironmentChangesIndicator = 'terminal.integrated.environmentChangesIndicator',\n\tEnvironmentChangesRelaunch = 'terminal.integrated.environmentChangesRelaunch',\n\tShowExitAlert = 'terminal.integrated.showExitAlert',\n\tSplitCwd = 'terminal.integrated.splitCwd',\n\tWindowsEnableConpty = 'terminal.integrated.windowsEnableConpty',\n\tWordSeparators = 'terminal.integrated.wordSeparators',\n\tEnableFileLinks = 'terminal.integrated.enableFileLinks',\n\tUnicodeVersion = 'terminal.integrated.unicodeVersion',\n\tLocalEchoLatencyThreshold = 'terminal.integrated.localEchoLatencyThreshold',\n\tLocalEchoEnabled = 'terminal.integrated.localEchoEnabled',\n\tLocalEchoExcludePrograms = 'terminal.integrated.localEchoExcludePrograms',\n\tLocalEchoStyle = 'terminal.integrated.localEchoStyle',\n\tEnablePersistentSessions = 'terminal.integrated.enablePersistentSessions',\n\tPersistentSessionReviveProcess = 'terminal.integrated.persistentSessionReviveProcess',\n\tCustomGlyphs = 'terminal.integrated.customGlyphs',\n\tPersistentSessionScrollback = 'terminal.integrated.persistentSessionScrollback',\n\tInheritEnv = 'terminal.integrated.inheritEnv',\n\tShowLinkHover = 'terminal.integrated.showLinkHover',\n\tIgnoreProcessNames = 'terminal.integrated.ignoreProcessNames',\n\tAutoReplies = 'terminal.integrated.autoReplies',\n\tShellIntegrationEnabled = 'terminal.integrated.shellIntegration.enabled',\n\tShellIntegrationShowWelcome = 'terminal.integrated.shellIntegration.showWelcome',\n\tShellIntegrationDecorationsEnabled = 'terminal.integrated.shellIntegration.decorationsEnabled',\n\tShellIntegrationCommandHistory = 'terminal.integrated.shellIntegration.history',\n\tSmoothScrolling = 'terminal.integrated.smoothScrolling'\n}\n\nexport const enum TerminalLogConstants {\n\tFileName = 'ptyhost'\n}\n\nexport const enum PosixShellType {\n\tPowerShell = 'pwsh',\n\tBash = 'bash',\n\tFish = 'fish',\n\tSh = 'sh',\n\tCsh = 'csh',\n\tKsh = 'ksh',\n\tZsh = 'zsh',\n}\nexport const enum WindowsShellType {\n\tCommandPrompt = 'cmd',\n\tPowerShell = 'pwsh',\n\tWsl = 'wsl',\n\tGitBash = 'gitbash'\n}\nexport type TerminalShellType = PosixShellType | WindowsShellType | undefined;\n\nexport interface IRawTerminalInstanceLayoutInfo<T> {\n\trelativeSize: number;\n\tterminal: T;\n}\nexport type ITerminalInstanceLayoutInfoById = IRawTerminalInstanceLayoutInfo<number>;\nexport type ITerminalInstanceLayoutInfo = IRawTerminalInstanceLayoutInfo<IPtyHostAttachTarget>;\n\nexport interface IRawTerminalTabLayoutInfo<T> {\n\tisActive: boolean;\n\tactivePersistentProcessId: number | undefined;\n\tterminals: IRawTerminalInstanceLayoutInfo<T>[];\n}\n\nexport type ITerminalTabLayoutInfoById = IRawTerminalTabLayoutInfo<number>;\n\nexport interface IRawTerminalsLayoutInfo<T> {\n\ttabs: IRawTerminalTabLayoutInfo<T>[];\n}\n\nexport interface IPtyHostAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\ttitleSource: TitleEventSource;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tisOrphan: boolean;\n\ticon: TerminalIcon | undefined;\n\tfixedDimensions: IFixedTerminalDimensions | undefined;\n\tenvironmentVariableCollections: ISerializableEnvironmentVariableCollections | undefined;\n\treconnectionProperties?: IReconnectionProperties;\n\twaitOnExit?: WaitOnExitValue;\n\thideFromUser?: boolean;\n\tisFeatureTerminal?: boolean;\n\ttype?: TerminalType;\n}\n\nexport interface IReconnectionProperties {\n\townerId: string;\n\tdata?: unknown;\n}\n\nexport type TerminalType = 'Task' | 'Local' | undefined;\n\nexport enum TitleEventSource {\n\t/** From the API or the rename command that overrides any other type */\n\tApi,\n\t/** From the process name property*/\n\tProcess,\n\t/** From the VT sequence */\n\tSequence,\n\t/** Config changed */\n\tConfig\n}\n\nexport type ITerminalsLayoutInfo = IRawTerminalsLayoutInfo<IPtyHostAttachTarget | null>;\nexport type ITerminalsLayoutInfoById = IRawTerminalsLayoutInfo<number>;\n\nexport enum TerminalIpcChannels {\n\t/**\n\t * Communicates between the renderer process and shared process.\n\t */\n\tLocalPty = 'localPty',\n\t/**\n\t * Communicates between the shared process and the pty host process.\n\t */\n\tPtyHost = 'ptyHost',\n\t/**\n\t * Deals with logging from the pty host process.\n\t */\n\tLog = 'log',\n\t/**\n\t * Enables the detection of unresponsive pty hosts.\n\t */\n\tHeartbeat = 'heartbeat'\n}\n\nexport const IPtyService = createDecorator<IPtyService>('ptyService');\n\nexport const enum ProcessPropertyType {\n\tCwd = 'cwd',\n\tInitialCwd = 'initialCwd',\n\tFixedDimensions = 'fixedDimensions',\n\tTitle = 'title',\n\tShellType = 'shellType',\n\tHasChildProcesses = 'hasChildProcesses',\n\tResolvedShellLaunchConfig = 'resolvedShellLaunchConfig',\n\tOverrideDimensions = 'overrideDimensions',\n\tFailedShellIntegrationActivation = 'failedShellIntegrationActivation',\n\tUsedShellIntegrationInjection = 'usedShellIntegrationInjection'\n}\n\nexport interface IProcessProperty<T extends ProcessPropertyType> {\n\ttype: T;\n\tvalue: IProcessPropertyMap[T];\n}\n\nexport interface IProcessPropertyMap {\n\t[ProcessPropertyType.Cwd]: string;\n\t[ProcessPropertyType.InitialCwd]: string;\n\t[ProcessPropertyType.FixedDimensions]: IFixedTerminalDimensions;\n\t[ProcessPropertyType.Title]: string;\n\t[ProcessPropertyType.ShellType]: TerminalShellType | undefined;\n\t[ProcessPropertyType.HasChildProcesses]: boolean;\n\t[ProcessPropertyType.ResolvedShellLaunchConfig]: IShellLaunchConfig;\n\t[ProcessPropertyType.OverrideDimensions]: ITerminalDimensionsOverride | undefined;\n\t[ProcessPropertyType.FailedShellIntegrationActivation]: boolean | undefined;\n\t[ProcessPropertyType.UsedShellIntegrationInjection]: boolean | undefined;\n}\n\nexport interface IFixedTerminalDimensions {\n\t/**\n\t * The fixed columns of the terminal.\n\t */\n\tcols?: number;\n\n\t/**\n\t * The fixed rows of the terminal.\n\t */\n\trows?: number;\n}\n\nexport interface IPtyHostController {\n\treadonly onPtyHostExit?: Event<number>;\n\treadonly onPtyHostStart?: Event<void>;\n\treadonly onPtyHostUnresponsive?: Event<void>;\n\treadonly onPtyHostResponsive?: Event<void>;\n\treadonly onPtyHostRequestResolveVariables?: Event<IRequestResolveVariablesEvent>;\n\n\trestartPtyHost?(): Promise<void>;\n\tacceptPtyHostResolvedVariables?(requestId: number, resolved: string[]): Promise<void>;\n}\n\nexport interface IPtyService extends IPtyHostController {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onProcessData: Event<{ id: number; event: IProcessDataEvent | string }>;\n\treadonly onProcessReady: Event<{ id: number; event: IProcessReadyEvent }>;\n\treadonly onProcessReplay: Event<{ id: number; event: IPtyHostProcessReplayEvent }>;\n\treadonly onProcessOrphanQuestion: Event<{ id: number }>;\n\treadonly onDidRequestDetach: Event<{ requestId: number; workspaceId: string; instanceId: number }>;\n\treadonly onDidChangeProperty: Event<{ id: number; property: IProcessProperty<any> }>;\n\treadonly onProcessExit: Event<{ id: number; event: number | undefined }>;\n\n\trestartPtyHost?(): Promise<void>;\n\tshutdownAll?(): Promise<void>;\n\tacceptPtyHostResolvedVariables?(requestId: number, resolved: string[]): Promise<void>;\n\n\tcreateProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11',\n\t\tenv: IProcessEnvironment,\n\t\texecutableEnv: IProcessEnvironment,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersist: boolean,\n\t\tworkspaceId: string,\n\t\tworkspaceName: string\n\t): Promise<number>;\n\tattachToProcess(id: number): Promise<void>;\n\tdetachFromProcess(id: number, forcePersist?: boolean): Promise<void>;\n\n\t/**\n\t * Lists all orphaned processes, ie. those without a connected frontend.\n\t */\n\tlistProcesses(): Promise<IProcessDetails[]>;\n\n\tstart(id: number): Promise<ITerminalLaunchError | undefined>;\n\tshutdown(id: number, immediate: boolean): Promise<void>;\n\tinput(id: number, data: string): Promise<void>;\n\tresize(id: number, cols: number, rows: number): Promise<void>;\n\tgetInitialCwd(id: number): Promise<string>;\n\tgetCwd(id: number): Promise<string>;\n\tgetLatency(id: number): Promise<number>;\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void>;\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void>;\n\tprocessBinary(id: number, data: string): Promise<void>;\n\t/** Confirm the process is _not_ an orphan. */\n\torphanQuestionReply(id: number): Promise<void>;\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<void>;\n\tupdateIcon(id: number, userInitiated: boolean, icon: TerminalIcon, color?: string): Promise<void>;\n\tinstallAutoReply(match: string, reply: string): Promise<void>;\n\tuninstallAllAutoReplies(): Promise<void>;\n\tuninstallAutoReply(match: string): Promise<void>;\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string>;\n\tgetProfiles?(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]>;\n\tgetEnvironment(): Promise<IProcessEnvironment>;\n\tgetWslPath(original: string): Promise<string>;\n\tgetRevivedPtyNewId(id: number): Promise<number | undefined>;\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void>;\n\tgetTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined>;\n\treduceConnectionGraceTime(): Promise<void>;\n\trequestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined>;\n\tacceptDetachInstanceReply(requestId: number, persistentProcessId?: number): Promise<void>;\n\tfreePortKillProcess?(id: number, port: string): Promise<{ port: string; processId: string }>;\n\t/**\n\t * Serializes and returns terminal state.\n\t * @param ids The persistent terminal IDs to serialize.\n\t */\n\tserializeTerminalState(ids: number[]): Promise<string>;\n\t/**\n\t * Revives a workspaces terminal processes, these can then be reconnected to using the normal\n\t * flow for restoring terminals after reloading.\n\t */\n\treviveTerminalProcesses(state: ISerializedTerminalState[], dateTimeFormatLocate: string): Promise<void>;\n\trefreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void>;\n\n\trefreshIgnoreProcessNames?(names: string[]): Promise<void>;\n}\n\n/**\n * Serialized terminal state matching the interface that can be used across versions, the version\n * should be verified before using the state payload.\n */\nexport interface ICrossVersionSerializedTerminalState {\n\tversion: number;\n\tstate: unknown;\n}\n\nexport interface ISerializedTerminalState {\n\tid: number;\n\tshellLaunchConfig: IShellLaunchConfig;\n\tprocessDetails: IProcessDetails;\n\tprocessLaunchConfig: IPersistentTerminalProcessLaunchConfig;\n\tunicodeVersion: '6' | '11';\n\treplayEvent: IPtyHostProcessReplayEvent;\n\ttimestamp: number;\n}\n\nexport interface IPersistentTerminalProcessLaunchConfig {\n\tenv: IProcessEnvironment;\n\texecutableEnv: IProcessEnvironment;\n\toptions: ITerminalProcessOptions;\n}\n\nexport interface IRequestResolveVariablesEvent {\n\trequestId: number;\n\tworkspaceId: string;\n\toriginalText: string[];\n}\n\nexport enum HeartbeatConstants {\n\t/**\n\t * The duration between heartbeats\n\t */\n\tBeatInterval = 5000,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before starting the second wait\n\t * timer.\n\t */\n\tFirstWaitMultiplier = 1.2,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before telling the user about\n\t * non-responsiveness. The second timer is to avoid informing the user incorrectly when waking\n\t * the computer up from sleep\n\t */\n\tSecondWaitMultiplier = 1,\n\t/**\n\t * How long to wait before telling the user about non-responsiveness when they try to create a\n\t * process. This short circuits the standard wait timeouts to tell the user sooner and only\n\t * create process is handled to avoid additional perf overhead.\n\t */\n\tCreateProcessTimeout = 5000\n}\n\nexport interface IHeartbeatService {\n\treadonly onBeat: Event<void>;\n}\n\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * A string to follow the name of the terminal with, indicating the type of terminal\n\t */\n\ttype?: 'Task' | 'Local';\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/**\n\t * The reconnection properties for this terminal\n\t */\n\treconnectionProperties?: IReconnectionProperties;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: WaitOnExitValue;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, when a string is specified, a trailing \\n is\n\t * added at the end. This allows for example the terminal instance to display a styled message\n\t * as the first line of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string | { text: string; trailingNewLine: boolean };\n\n\t/**\n\t * Custom PTY/pseudoterminal process to use.\n\t */\n\tcustomPtyImplementation?: (terminalId: number, cols: number, rows: number) => ITerminalChildProcess;\n\n\t/**\n\t * A UUID generated by the extension host process for terminals created on the extension host process.\n\t */\n\textHostTerminalId?: string;\n\n\t/**\n\t * This is a terminal that attaches to an already running terminal.\n\t */\n\tattachPersistentProcess?: {\n\t\tid: number; findRevivedId?: boolean; pid: number; title: string; titleSource: TitleEventSource; cwd: string; icon?: TerminalIcon; color?: string; hasChildProcesses?: boolean; fixedDimensions?: IFixedTerminalDimensions; environmentVariableCollections?: ISerializableEnvironmentVariableCollections; reconnectionProperties?: IReconnectionProperties; type?: TerminalType; waitOnExit?: WaitOnExitValue; hideFromUser?: boolean; isFeatureTerminal?: boolean;\n\t};\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * Whether the terminal process environment will inherit VS Code's \"shell environment\" that may\n\t * get sourced from running a login shell depnding on how the application was launched.\n\t * Consumers that rely on development tools being present in the $PATH should set this to true.\n\t * This will overwrite the value of the inheritEnv setting.\n\t */\n\tuseShellEnvironment?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n\n\t/**\n\t * Whether this terminal is not a terminal that the user directly created and uses, but rather\n\t * a terminal used to drive some VS Code feature.\n\t */\n\tisFeatureTerminal?: boolean;\n\n\t/**\n\t * Whether this terminal was created by an extension.\n\t */\n\tisExtensionOwnedTerminal?: boolean;\n\n\t/**\n\t * The icon for the terminal, used primarily in the terminal tab.\n\t */\n\ticon?: TerminalIcon;\n\n\t/**\n\t * The color ID to use for this terminal. If not specified it will use the default fallback\n\t */\n\tcolor?: string;\n\n\t/**\n\t * When a parent terminal is provided via API, the group needs\n\t * to find the index in order to place the child\n\t * directly to the right of its parent.\n\t */\n\tparentTerminalId?: number;\n\n\t/**\n\t * The dimensions for the instance as set by the user\n\t * or via Size to Content Width\n\t */\n\tfixedDimensions?: IFixedTerminalDimensions;\n\n\t/**\n\t * Opt-out of the default terminal persistence on restart and reload\n\t */\n\tisTransient?: boolean;\n\n\t/**\n\t * Create a terminal without shell integration even when it's enabled\n\t */\n\tignoreShellIntegration?: boolean;\n}\n\nexport type WaitOnExitValue = boolean | string | ((exitCode: number) => string);\n\nexport interface ICreateContributedTerminalProfileOptions {\n\ticon?: URI | string | { light: URI; dark: URI };\n\tcolor?: string;\n\tlocation?: TerminalLocation | { viewColumn: number; preserveState?: boolean } | { splitActiveTerminal: boolean };\n}\n\nexport enum TerminalLocation {\n\tPanel = 1,\n\tEditor = 2\n}\n\nexport const enum TerminalLocationString {\n\tTerminalView = 'view',\n\tEditor = 'editor'\n}\n\nexport type TerminalIcon = ThemeIcon | URI | { light: URI; dark: URI };\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: ITerminalEnvironment;\n\tuseShellEnvironment?: boolean;\n\thideFromUser?: boolean;\n\treconnectionProperties?: IReconnectionProperties;\n\ttype?: 'Task' | 'Local';\n\tisFeatureTerminal?: boolean;\n}\n\n/**\n * A set of options for the terminal process. These differ from the shell launch config in that they\n * are set internally to the terminal component, not from the outside.\n */\nexport interface ITerminalProcessOptions {\n\tshellIntegration: {\n\t\tenabled: boolean;\n\t};\n\twindowsEnableConpty: boolean;\n\tenvironmentVariableCollections: ISerializableEnvironmentVariableCollections | undefined;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null | undefined;\n}\n\nexport interface ITerminalLaunchError {\n\tmessage: string;\n\tcode?: number;\n}\n\nexport interface IProcessReadyEvent {\n\tpid: number;\n\tcwd: string;\n\trequiresWindowsMode?: boolean;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\t/**\n\t * A unique identifier for the terminal process. Note that the uniqueness only applies to a\n\t * given pty service connection, IDs will be duplicated for remote and local terminals for\n\t * example. The ID will be 0 if it does not support reconnection.\n\t */\n\tid: number;\n\n\t/**\n\t * Whether the process should be persisted across reloads.\n\t */\n\tshouldPersist: boolean;\n\n\tonProcessData: Event<IProcessDataEvent | string>;\n\tonProcessReady: Event<IProcessReadyEvent>;\n\tonDidChangeProperty: Event<IProcessProperty<any>>;\n\tonProcessExit: Event<number | undefined>;\n\tonRestoreCommands?: Event<ISerializedCommandDetectionCapability>;\n\n\t/**\n\t * Starts the process.\n\t *\n\t * @returns undefined when the process was successfully started, otherwise an object containing\n\t * information on what went wrong.\n\t */\n\tstart(): Promise<ITerminalLaunchError | undefined>;\n\n\t/**\n\t * Detach the process from the UI and await reconnect.\n\t * @param forcePersist Whether to force the process to persist if it supports persistence.\n\t */\n\tdetach?(forcePersist?: boolean): Promise<void>;\n\n\t/**\n\t * Frees the port and kills the process\n\t */\n\tfreePortKillProcess?(port: string): Promise<{ port: string; processId: string }>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tprocessBinary(data: string): Promise<void>;\n\tresize(cols: number, rows: number): void;\n\n\t/**\n\t * Acknowledge a data event has been parsed by the terminal, this is used to implement flow\n\t * control to ensure remote processes to not get too far ahead of the client and flood the\n\t * connection.\n\t * @param charCount The number of characters being acknowledged.\n\t */\n\tacknowledgeDataEvent(charCount: number): void;\n\n\t/**\n\t * Sets the unicode version for the process, this drives the size of some characters in the\n\t * xterm-headless instance.\n\t */\n\tsetUnicodeVersion(version: '6' | '11'): Promise<void>;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n\trefreshProperty<T extends ProcessPropertyType>(property: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(property: T, value: IProcessPropertyMap[T]): Promise<void>;\n}\n\nexport interface IReconnectConstants {\n\tgraceTime: number;\n\tshortGraceTime: number;\n\tscrollback: number;\n}\n\nexport const enum LocalReconnectConstants {\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t*/\n\tGraceTime = 60000, // 60 seconds\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t*/\n\tShortGraceTime = 6000, // 6 seconds\n}\n\nexport const enum FlowControlConstants {\n\t/**\n\t * The number of _unacknowledged_ chars to have been sent before the pty is paused in order for\n\t * the client to catch up.\n\t */\n\tHighWatermarkChars = 100000,\n\t/**\n\t * After flow control pauses the pty for the client the catch up, this is the number of\n\t * _unacknowledged_ chars to have been caught up to on the client before resuming the pty again.\n\t * This is used to attempt to prevent pauses in the flowing data; ideally while the pty is\n\t * paused the number of unacknowledged chars would always be greater than 0 or the client will\n\t * appear to stutter. In reality this balance is hard to accomplish though so heavy commands\n\t * will likely pause as latency grows, not flooding the connection is the important thing as\n\t * it's shared with other core functionality.\n\t */\n\tLowWatermarkChars = 5000,\n\t/**\n\t * The number characters that are accumulated on the client side before sending an ack event.\n\t * This must be less than or equal to LowWatermarkChars or the terminal max never unpause.\n\t */\n\tCharCountAckSize = 5000\n}\n\nexport interface IProcessDataEvent {\n\tdata: string;\n\ttrackCommit: boolean;\n\t/**\n\t * When trackCommit is set, this will be set to a promise that resolves when the data is parsed.\n\t */\n\twritePromise?: Promise<void>;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\tcols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\trows: number;\n}\n\nexport interface ITerminalProfile {\n\tprofileName: string;\n\tpath: string;\n\tisDefault: boolean;\n\tisAutoDetected?: boolean;\n\t/**\n\t * Whether the profile path was found on the `$PATH` environment variable, if so it will be\n\t * cleaner to display this profile in the UI using only `basename(path)`.\n\t */\n\tisFromPath?: boolean;\n\targs?: string | string[] | undefined;\n\tenv?: ITerminalEnvironment;\n\toverrideName?: boolean;\n\tcolor?: string;\n\ticon?: ThemeIcon | URI | { light: URI; dark: URI };\n}\n\nexport interface ITerminalDimensionsOverride extends Readonly<ITerminalDimensions> {\n\t/**\n\t * indicate that xterm must receive these exact dimensions, even if they overflow the ui!\n\t */\n\tforceExactSize?: boolean;\n}\n\nexport const enum ProfileSource {\n\tGitBash = 'Git Bash',\n\tPwsh = 'PowerShell'\n}\n\nexport interface IBaseUnresolvedTerminalProfile {\n\targs?: string | string[] | undefined;\n\tisAutoDetected?: boolean;\n\toverrideName?: boolean;\n\ticon?: string | ThemeIcon | URI | { light: URI; dark: URI };\n\tcolor?: string;\n\tenv?: ITerminalEnvironment;\n}\n\nexport interface ITerminalExecutable extends IBaseUnresolvedTerminalProfile {\n\tpath: string | string[];\n}\n\nexport interface ITerminalProfileSource extends IBaseUnresolvedTerminalProfile {\n\tsource: ProfileSource;\n}\n\n\nexport interface ITerminalContributions {\n\tprofiles?: ITerminalProfileContribution[];\n}\n\nexport interface ITerminalProfileContribution {\n\ttitle: string;\n\tid: string;\n\ticon?: URI | { light: URI; dark: URI } | string;\n\tcolor?: string;\n}\n\nexport interface IExtensionTerminalProfile extends ITerminalProfileContribution {\n\textensionIdentifier: string;\n}\n\nexport type ITerminalProfileObject = ITerminalExecutable | ITerminalProfileSource | IExtensionTerminalProfile | null;\nexport type ITerminalProfileType = ITerminalProfile | IExtensionTerminalProfile;\n\nexport interface IShellIntegration {\n\treadonly capabilities: ITerminalCapabilityStore;\n\treadonly status: ShellIntegrationStatus;\n\n\treadonly onDidChangeStatus: Event<ShellIntegrationStatus>;\n\n\tdeserialize(serialized: ISerializedCommandDetectionCapability): void;\n}\n\nexport const enum ShellIntegrationStatus {\n\t/** No shell integration sequences have been encountered. */\n\tOff,\n\t/** Final term shell integration sequences have been encountered. */\n\tFinalTerm,\n\t/** VS Code shell integration sequences have been encountered. Supercedes FinalTerm. */\n\tVSCode\n}\n\nexport enum TerminalExitReason {\n\tUnknown = 0,\n\tShutdown = 1,\n\tProcess = 2,\n\tUser = 3,\n\tExtension = 4,\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITerminalChildProcess } from 'vs/platform/terminal/common/terminal';\n\n/**\n * Tracks a terminal process's data stream and responds immediately when a matching string is\n * received. This is done in a low overhead way and is ideally run on the same process as the\n * where the process is handled to minimize latency.\n */\nexport class TerminalAutoResponder extends Disposable {\n\tprivate _pointer = 0;\n\tprivate _paused = false;\n\n\t/**\n\t * Each reply is throttled by a second to avoid resource starvation and responding to screen\n\t * reprints on Winodws.\n\t */\n\tprivate _throttled = false;\n\n\tconstructor(\n\t\tproc: ITerminalChildProcess,\n\t\tmatchWord: string,\n\t\tresponse: string,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(proc.onProcessData(e => {\n\t\t\tif (this._paused || this._throttled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst data = typeof e === 'string' ? e : e.data;\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i] === matchWord[this._pointer]) {\n\t\t\t\t\tthis._pointer++;\n\t\t\t\t} else {\n\t\t\t\t\tthis._reset();\n\t\t\t\t}\n\t\t\t\t// Auto reply and reset\n\t\t\t\tif (this._pointer === matchWord.length) {\n\t\t\t\t\tlogService.debug(`Auto reply match: \"${matchWord}\", response: \"${response}\"`);\n\t\t\t\t\tproc.input(response);\n\t\t\t\t\tthis._throttled = true;\n\t\t\t\t\ttimeout(1000).then(() => this._throttled = false);\n\t\t\t\t\tthis._reset();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _reset() {\n\t\tthis._pointer = 0;\n\t}\n\n\t/**\n\t * No auto response will happen after a resize on Windows in case the resize is a result of\n\t * reprinting the screen.\n\t */\n\thandleResize() {\n\t\tif (isWindows) {\n\t\t\tthis._paused = true;\n\t\t}\n\t}\n\n\thandleInput() {\n\t\tthis._paused = false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IProcessDataEvent } from 'vs/platform/terminal/common/terminal';\n\ninterface TerminalDataBuffer extends IDisposable {\n\tdata: string[];\n\ttimeoutId: any;\n}\n\nexport class TerminalDataBufferer implements IDisposable {\n\tprivate readonly _terminalBufferMap = new Map<number, TerminalDataBuffer>();\n\n\tconstructor(private readonly _callback: (id: number, data: string) => void) {\n\t}\n\n\tdispose() {\n\t\tfor (const buffer of this._terminalBufferMap.values()) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tstartBuffering(id: number, event: Event<string | IProcessDataEvent>, throttleBy: number = 5): IDisposable {\n\n\t\tconst disposable = event((e: string | IProcessDataEvent) => {\n\t\t\tconst data = (typeof e === 'string' ? e : e.data);\n\t\t\tlet buffer = this._terminalBufferMap.get(id);\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.data.push(data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst timeoutId = setTimeout(() => this.flushBuffer(id), throttleBy);\n\t\t\tbuffer = {\n\t\t\t\tdata: [data],\n\t\t\t\ttimeoutId: timeoutId,\n\t\t\t\tdispose: () => {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\tthis.flushBuffer(id);\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._terminalBufferMap.set(id, buffer);\n\t\t});\n\t\treturn disposable;\n\t}\n\n\tstopBuffering(id: number) {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tbuffer?.dispose();\n\t}\n\n\tflushBuffer(id: number): void {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tthis._terminalBufferMap.delete(id);\n\t\t\tthis._callback(id, buffer.data.join(''));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function escapeNonWindowsPath(path: string): string {\n\tlet newPath = path;\n\tif (newPath.indexOf('\\\\') !== 0) {\n\t\tnewPath = newPath.replace(/\\\\/g, '\\\\\\\\');\n\t}\n\tconst bannedChars = /[\\`\\$\\|\\&\\>\\~\\#\\!\\^\\*\\;\\<\\\"\\']/g;\n\tnewPath = newPath.replace(bannedChars, '');\n\treturn `'${newPath}'`;\n}\n\n/**\n * Collapses the user's home directory into `~` if it exists within the path, this gives a shorter\n * path that is more suitable within the context of a terminal.\n */\nexport function collapseTildePath(path: string | undefined, userHome: string | undefined, separator: string): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\tif (!userHome) {\n\t\treturn path;\n\t}\n\t// Trim the trailing separator from the end if it exists\n\tif (userHome.match(/[\\/\\\\]$/)) {\n\t\tuserHome = userHome.slice(0, userHome.length - 1);\n\t}\n\tconst normalizedPath = path.replace(/\\\\/g, '/').toLowerCase();\n\tconst normalizedUserHome = userHome.replace(/\\\\/g, '/').toLowerCase();\n\tif (!normalizedPath.includes(normalizedUserHome)) {\n\t\treturn path;\n\t}\n\treturn `~${separator}${path.slice(userHome.length + 1)}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITerminalFormatMessageOptions {\n\t/**\n\t * Whether to exclude the new line at the start of the message. Defaults to false.\n\t */\n\texcludeLeadingNewLine?: boolean;\n\t/**\n\t * Whether to use \"loud\" formatting, this is for more important messages where the it's\n\t * desirable to visually break the buffer up. Defaults to false.\n\t */\n\tloudFormatting?: boolean;\n}\n\n/**\n * Formats a message from the product to be written to the terminal.\n */\nexport function formatMessageForTerminal(message: string, options: ITerminalFormatMessageOptions = {}): string {\n\tlet result = '';\n\tif (!options.excludeLeadingNewLine) {\n\t\tresult += '\\r\\n';\n\t}\n\tresult += '\\x1b[0m\\x1b[7m * ';\n\tif (options.loudFormatting) {\n\t\tresult += '\\x1b[0;104m';\n\t} else {\n\t\tresult += '\\x1b[0m';\n\t}\n\tresult += ` ${message} \\x1b[0m\\n\\r`;\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IShellIntegration, ShellIntegrationStatus } from 'vs/platform/terminal/common/terminal';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/terminalCapabilityStore';\nimport { CommandDetectionCapability } from 'vs/platform/terminal/common/capabilities/commandDetectionCapability';\nimport { CwdDetectionCapability } from 'vs/platform/terminal/common/capabilities/cwdDetectionCapability';\nimport { IBufferMarkCapability, ICommandDetectionCapability, ICwdDetectionCapability, ISerializedCommandDetectionCapability, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { PartialCommandDetectionCapability } from 'vs/platform/terminal/common/capabilities/partialCommandDetectionCapability';\nimport { ILogService } from 'vs/platform/log/common/log';\n// Importing types is safe in any layer\n// eslint-disable-next-line local/code-import-patterns\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Emitter } from 'vs/base/common/event';\nimport { BufferMarkCapability } from 'vs/platform/terminal/common/capabilities/bufferMarkCapability';\n// Importing types is safe in any layer\n// eslint-disable-next-line local/code-import-patterns\nimport type { ITerminalAddon, Terminal } from 'xterm-headless';\nimport { URI } from 'vs/base/common/uri';\n\n\n/**\n * Shell integration is a feature that enhances the terminal's understanding of what's happening\n * in the shell by injecting special sequences into the shell's prompt using the \"Set Text\n * Parameters\" sequence (`OSC Ps ; Pt ST`).\n *\n * Definitions:\n * - OSC: `\\x1b]`\n * - Ps:  A single (usually optional) numeric parameter, composed of one or more digits.\n * - Pt:  A text parameter composed of printable characters.\n * - ST: `\\x7`\n *\n * This is inspired by a feature of the same name in the FinalTerm, iTerm2 and kitty terminals.\n */\n\n/**\n * The identifier for the first numeric parameter (`Ps`) for OSC commands used by shell integration.\n */\nconst enum ShellIntegrationOscPs {\n\t/**\n\t * Sequences pioneered by FinalTerm.\n\t */\n\tFinalTerm = 133,\n\t/**\n\t * Sequences pioneered by VS Code. The number is derived from the least significant digit of\n\t * \"VSC\" when encoded in hex (\"VSC\" = 0x56, 0x53, 0x43).\n\t */\n\tVSCode = 633,\n\t/**\n\t * Sequences pioneered by iTerm.\n\t */\n\tITerm = 1337,\n\tSetCwd = 7,\n\tSetWindowsFriendlyCwd = 9\n}\n\n/**\n * VS Code-specific shell integration sequences. Some of these are based on more common alternatives\n * like those pioneered in FinalTerm. The decision to move to entirely custom sequences was to try\n * to improve reliability and prevent the possibility of applications confusing the terminal. If\n * multiple shell integration scripts run, VS Code will prioritize the VS Code-specific ones.\n *\n * It's recommended that authors of shell integration scripts use the common sequences (eg. 133)\n * when building general purpose scripts and the VS Code-specific (633) when targeting only VS Code\n * or when there are no other alternatives.\n */\nconst enum VSCodeOscPt {\n\t/**\n\t * The start of the prompt, this is expected to always appear at the start of a line.\n\t * Based on FinalTerm's `OSC 133 ; A ST`.\n\t */\n\tPromptStart = 'A',\n\n\t/**\n\t * The start of a command, ie. where the user inputs their command.\n\t * Based on FinalTerm's `OSC 133 ; B ST`.\n\t */\n\tCommandStart = 'B',\n\n\t/**\n\t * Sent just before the command output begins.\n\t * Based on FinalTerm's `OSC 133 ; C ST`.\n\t */\n\tCommandExecuted = 'C',\n\n\t/**\n\t * Sent just after a command has finished. The exit code is optional, when not specified it\n\t * means no command was run (ie. enter on empty prompt or ctrl+c).\n\t * Based on FinalTerm's `OSC 133 ; D [; <ExitCode>] ST`.\n\t */\n\tCommandFinished = 'D',\n\n\t/**\n\t * Explicitly set the command line. This helps workaround performance and reliability problems\n\t * with parsing out the command, such as conpty not guaranteeing the position of the sequence or\n\t * the shell not guaranteeing that the entire command is even visible.\n\t *\n\t * The command line can escape ascii characters using the `\\xAB` format, where AB are the\n\t * hexadecimal representation of the character code (case insensitive), and escape the `\\`\n\t * character using `\\\\`. It's required to escape semi-colon (`0x3b`) and characters 0x20 and\n\t * below, this is particularly important for new line and semi-colon.\n\t *\n\t * Some examples:\n\t *\n\t * ```\n\t * \"\\\"  -> \"\\\\\"\n\t * \"\\n\" -> \"\\x0a\"\n\t * \";\"  -> \"\\x3b\"\n\t * ```\n\t */\n\tCommandLine = 'E',\n\n\t/**\n\t * Similar to prompt start but for line continuations.\n\t *\n\t * WARNING: This sequence is unfinalized, DO NOT use this in your shell integration script.\n\t */\n\tContinuationStart = 'F',\n\n\t/**\n\t * Similar to command start but for line continuations.\n\t *\n\t * WARNING: This sequence is unfinalized, DO NOT use this in your shell integration script.\n\t */\n\tContinuationEnd = 'G',\n\n\t/**\n\t * The start of the right prompt.\n\t *\n\t * WARNING: This sequence is unfinalized, DO NOT use this in your shell integration script.\n\t */\n\tRightPromptStart = 'H',\n\n\t/**\n\t * The end of the right prompt.\n\t *\n\t * WARNING: This sequence is unfinalized, DO NOT use this in your shell integration script.\n\t */\n\tRightPromptEnd = 'I',\n\n\t/**\n\t * Set an arbitrary property: `OSC 633 ; P ; <Property>=<Value> ST`, only known properties will\n\t * be handled.\n\t *\n\t * Known properties:\n\t *\n\t * - `Cwd` - Reports the current working directory to the terminal.\n\t * - `IsWindows` - Indicates whether the terminal is using a Windows backend like winpty or\n\t *   conpty. This may be used to enable additional heuristics as the positioning of the shell\n\t *   integration sequences are not guaranteed to be correct. Valid values: `True`, `False`.\n\t *\n\t * WARNING: Any other properties may be changed and are not guaranteed to work in the future.\n\t */\n\tProperty = 'P',\n\n\t/**\n\t * Sets a mark/point-of-interest in the buffer. `OSC 633 ; SetMark [; Id=<string>] [; Hidden]`\n\t * `Id` - The identifier of the mark that can be used to reference it\n\t * `Hidden` - When set, the mark will be available to reference internally but will not visible\n\t *\n\t * WARNING: This sequence is unfinalized, DO NOT use this in your shell integration script.\n\t */\n\tSetMark = 'SetMark',\n}\n\n/**\n * ITerm sequences\n */\nconst enum ITermOscPt {\n\t/**\n\t * Sets a mark/point-of-interest in the buffer. `OSC 1337 ; SetMark`\n\t */\n\tSetMark = 'SetMark',\n\n\t/**\n\t * Reports current working directory (CWD). `OSC 1337 ; CurrentDir=<Cwd> ST`\n\t */\n\tCurrentDir = 'CurrentDir'\n}\n\n/**\n * The shell integration addon extends xterm by reading shell integration sequences and creating\n * capabilities and passing along relevant sequences to the capabilities. This is meant to\n * encapsulate all handling/parsing of sequences so the capabilities don't need to.\n */\nexport class ShellIntegrationAddon extends Disposable implements IShellIntegration, ITerminalAddon {\n\tprivate _terminal?: Terminal;\n\treadonly capabilities = new TerminalCapabilityStore();\n\tprivate _hasUpdatedTelemetry: boolean = false;\n\tprivate _activationTimeout: any;\n\tprivate _commonProtocolDisposables: IDisposable[] = [];\n\tprivate _status: ShellIntegrationStatus = ShellIntegrationStatus.Off;\n\n\tget status(): ShellIntegrationStatus { return this._status; }\n\n\tprivate readonly _onDidChangeStatus = new Emitter<ShellIntegrationStatus>();\n\treadonly onDidChangeStatus = this._onDidChangeStatus.event;\n\n\tconstructor(\n\t\tprivate readonly _disableTelemetry: boolean | undefined,\n\t\tprivate readonly _telemetryService: ITelemetryService | undefined,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis._clearActivationTimeout();\n\t\t\tthis._disposeCommonProtocol();\n\t\t}));\n\t}\n\n\tprivate _disposeCommonProtocol(): void {\n\t\tdispose(this._commonProtocolDisposables);\n\t\tthis._commonProtocolDisposables.length = 0;\n\t}\n\n\tactivate(xterm: Terminal) {\n\t\tthis._terminal = xterm;\n\t\tthis.capabilities.add(TerminalCapability.PartialCommandDetection, new PartialCommandDetectionCapability(this._terminal));\n\t\tthis._register(xterm.parser.registerOscHandler(ShellIntegrationOscPs.VSCode, data => this._handleVSCodeSequence(data)));\n\t\tthis._register(xterm.parser.registerOscHandler(ShellIntegrationOscPs.ITerm, data => this._doHandleITermSequence(data)));\n\t\tthis._commonProtocolDisposables.push(\n\t\t\txterm.parser.registerOscHandler(ShellIntegrationOscPs.FinalTerm, data => this._handleFinalTermSequence(data))\n\t\t);\n\t\tthis._register(xterm.parser.registerOscHandler(ShellIntegrationOscPs.SetCwd, data => this._doHandleSetCwd(data)));\n\t\tthis._register(xterm.parser.registerOscHandler(ShellIntegrationOscPs.SetWindowsFriendlyCwd, data => this._doHandleSetWindowsFriendlyCwd(data)));\n\t\tthis._ensureCapabilitiesOrAddFailureTelemetry();\n\t}\n\n\tprivate _handleFinalTermSequence(data: string): boolean {\n\t\tconst didHandle = this._doHandleFinalTermSequence(data);\n\t\tif (this._status === ShellIntegrationStatus.Off) {\n\t\t\tthis._status = ShellIntegrationStatus.FinalTerm;\n\t\t\tthis._onDidChangeStatus.fire(this._status);\n\t\t}\n\t\treturn didHandle;\n\t}\n\n\tprivate _doHandleFinalTermSequence(data: string): boolean {\n\t\tif (!this._terminal) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Pass the sequence along to the capability\n\t\t// It was considered to disable the common protocol in order to not confuse the VS Code\n\t\t// shell integration if both happen for some reason. This doesn't work for powerlevel10k\n\t\t// when instant prompt is enabled though. If this does end up being a problem we could pass\n\t\t// a type flag through the capability calls\n\t\tconst [command, ...args] = data.split(';');\n\t\tswitch (command) {\n\t\t\tcase 'A':\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handlePromptStart();\n\t\t\t\treturn true;\n\t\t\tcase 'B':\n\t\t\t\t// Ignore the command line for these sequences as it's unreliable for example in powerlevel10k\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleCommandStart({ ignoreCommandLine: true });\n\t\t\t\treturn true;\n\t\t\tcase 'C':\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleCommandExecuted();\n\t\t\t\treturn true;\n\t\t\tcase 'D': {\n\t\t\t\tconst exitCode = args.length === 1 ? parseInt(args[0]) : undefined;\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleCommandFinished(exitCode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _handleVSCodeSequence(data: string): boolean {\n\t\tconst didHandle = this._doHandleVSCodeSequence(data);\n\t\tif (!this._hasUpdatedTelemetry && didHandle) {\n\t\t\tthis._telemetryService?.publicLog2<{}, { owner: 'meganrogge'; comment: 'Indicates shell integration was activated' }>('terminal/shellIntegrationActivationSucceeded');\n\t\t\tthis._hasUpdatedTelemetry = true;\n\t\t\tthis._clearActivationTimeout();\n\t\t}\n\t\tif (this._status !== ShellIntegrationStatus.VSCode) {\n\t\t\tthis._status = ShellIntegrationStatus.VSCode;\n\t\t\tthis._onDidChangeStatus.fire(this._status);\n\t\t}\n\t\treturn didHandle;\n\t}\n\n\tprivate async _ensureCapabilitiesOrAddFailureTelemetry(): Promise<void> {\n\t\tif (!this._telemetryService || this._disableTelemetry) {\n\t\t\treturn;\n\t\t}\n\t\tthis._activationTimeout = setTimeout(() => {\n\t\t\tif (!this.capabilities.get(TerminalCapability.CommandDetection) && !this.capabilities.get(TerminalCapability.CwdDetection)) {\n\t\t\t\tthis._telemetryService?.publicLog2<{ classification: 'SystemMetaData'; purpose: 'FeatureInsight' }>('terminal/shellIntegrationActivationTimeout');\n\t\t\t\tthis._logService.warn('Shell integration failed to add capabilities within 10 seconds');\n\t\t\t}\n\t\t\tthis._hasUpdatedTelemetry = true;\n\t\t}, 10000);\n\t}\n\n\tprivate _clearActivationTimeout(): void {\n\t\tif (this._activationTimeout !== undefined) {\n\t\t\tclearTimeout(this._activationTimeout);\n\t\t\tthis._activationTimeout = undefined;\n\t\t}\n\t}\n\n\tprivate _doHandleVSCodeSequence(data: string): boolean {\n\t\tif (!this._terminal) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Pass the sequence along to the capability\n\t\tconst [command, ...args] = data.split(';');\n\t\tswitch (command) {\n\t\t\tcase VSCodeOscPt.PromptStart:\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handlePromptStart();\n\t\t\t\treturn true;\n\t\t\tcase VSCodeOscPt.CommandStart:\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleCommandStart();\n\t\t\t\treturn true;\n\t\t\tcase VSCodeOscPt.CommandExecuted:\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleCommandExecuted();\n\t\t\t\treturn true;\n\t\t\tcase VSCodeOscPt.CommandFinished: {\n\t\t\t\tconst exitCode = args.length === 1 ? parseInt(args[0]) : undefined;\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleCommandFinished(exitCode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase VSCodeOscPt.CommandLine: {\n\t\t\t\tlet commandLine: string;\n\t\t\t\tif (args.length === 1) {\n\t\t\t\t\tcommandLine = deserializeMessage(args[0]);\n\t\t\t\t} else {\n\t\t\t\t\tcommandLine = '';\n\t\t\t\t}\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).setCommandLine(commandLine);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase VSCodeOscPt.ContinuationStart: {\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleContinuationStart();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase VSCodeOscPt.ContinuationEnd: {\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleContinuationEnd();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase VSCodeOscPt.RightPromptStart: {\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleRightPromptStart();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase VSCodeOscPt.RightPromptEnd: {\n\t\t\t\tthis._createOrGetCommandDetection(this._terminal).handleRightPromptEnd();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase VSCodeOscPt.Property: {\n\t\t\t\tconst { key, value } = parseKeyValueAssignment(args[0]);\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'Cwd': {\n\t\t\t\t\t\tthis._updateCwd(value);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'IsWindows': {\n\t\t\t\t\t\tthis._createOrGetCommandDetection(this._terminal).setIsWindowsPty(value === 'True' ? true : false);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Task': {\n\t\t\t\t\t\tthis._createOrGetBufferMarkDetection(this._terminal);\n\t\t\t\t\t\tthis.capabilities.get(TerminalCapability.CommandDetection)?.setIsCommandStorageDisabled();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase VSCodeOscPt.SetMark: {\n\t\t\t\tthis._createOrGetBufferMarkDetection(this._terminal).addMark(parseMarkSequence(args));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Unrecognized sequence\n\t\treturn false;\n\t}\n\n\tprivate _updateCwd(value: string) {\n\t\tthis._createOrGetCwdDetection().updateCwd(value);\n\t\tconst commandDetection = this.capabilities.get(TerminalCapability.CommandDetection);\n\t\tcommandDetection?.setCwd(value);\n\t}\n\n\tprivate _doHandleITermSequence(data: string): boolean {\n\t\tif (!this._terminal) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [command] = data.split(';');\n\t\tswitch (command) {\n\t\t\tcase ITermOscPt.SetMark: {\n\t\t\t\tthis._createOrGetBufferMarkDetection(this._terminal).addMark();\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// Checking for known `<key>=<value>` pairs.\n\t\t\t\tconst { key, value } = parseKeyValueAssignment(command);\n\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\t// No '=' was found, so it's not a property assignment.\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase ITermOscPt.CurrentDir:\n\t\t\t\t\t\t// Encountered: `OSC 1337 ; CurrentDir=<Cwd> ST`\n\t\t\t\t\t\tthis._updateCwd(value);\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unrecognized sequence\n\t\treturn false;\n\t}\n\n\tprivate _doHandleSetWindowsFriendlyCwd(data: string): boolean {\n\t\tif (!this._terminal) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [command, ...args] = data.split(';');\n\t\tswitch (command) {\n\t\t\tcase '9':\n\t\t\t\t// Encountered `OSC 9 ; 9 ; <cwd> ST`\n\t\t\t\tif (args.length) {\n\t\t\t\t\tthis._updateCwd(args[0]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t}\n\n\t\t// Unrecognized sequence\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handles the sequence: `OSC 7 ; scheme://cwd ST`\n\t */\n\tprivate _doHandleSetCwd(data: string): boolean {\n\t\tif (!this._terminal) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [command] = data.split(';');\n\n\t\tif (command.match(/^file:\\/\\/.*\\//)) {\n\t\t\tconst uri = URI.parse(command);\n\t\t\tif (uri.path && uri.path.length > 0) {\n\t\t\t\tthis._updateCwd(uri.path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Unrecognized sequence\n\t\treturn false;\n\t}\n\n\tserialize(): ISerializedCommandDetectionCapability {\n\t\tif (!this._terminal || !this.capabilities.has(TerminalCapability.CommandDetection)) {\n\t\t\treturn {\n\t\t\t\tisWindowsPty: false,\n\t\t\t\tcommands: []\n\t\t\t};\n\t\t}\n\t\tconst result = this._createOrGetCommandDetection(this._terminal).serialize();\n\t\treturn result;\n\t}\n\n\tdeserialize(serialized: ISerializedCommandDetectionCapability): void {\n\t\tif (!this._terminal) {\n\t\t\tthrow new Error('Cannot restore commands before addon is activated');\n\t\t}\n\t\tthis._createOrGetCommandDetection(this._terminal).deserialize(serialized);\n\t}\n\n\tprotected _createOrGetCwdDetection(): ICwdDetectionCapability {\n\t\tlet cwdDetection = this.capabilities.get(TerminalCapability.CwdDetection);\n\t\tif (!cwdDetection) {\n\t\t\tcwdDetection = new CwdDetectionCapability();\n\t\t\tthis.capabilities.add(TerminalCapability.CwdDetection, cwdDetection);\n\t\t}\n\t\treturn cwdDetection;\n\t}\n\n\tprotected _createOrGetCommandDetection(terminal: Terminal): ICommandDetectionCapability {\n\t\tlet commandDetection = this.capabilities.get(TerminalCapability.CommandDetection);\n\t\tif (!commandDetection) {\n\t\t\tcommandDetection = new CommandDetectionCapability(terminal, this._logService);\n\t\t\tthis.capabilities.add(TerminalCapability.CommandDetection, commandDetection);\n\t\t}\n\t\treturn commandDetection;\n\t}\n\n\tprotected _createOrGetBufferMarkDetection(terminal: Terminal): IBufferMarkCapability {\n\t\tlet bufferMarkDetection = this.capabilities.get(TerminalCapability.BufferMarkDetection);\n\t\tif (!bufferMarkDetection) {\n\t\t\tbufferMarkDetection = new BufferMarkCapability(terminal);\n\t\t\tthis.capabilities.add(TerminalCapability.BufferMarkDetection, bufferMarkDetection);\n\t\t}\n\t\treturn bufferMarkDetection;\n\t}\n}\n\nexport function deserializeMessage(message: string): string {\n\tlet result = message.replace(/\\\\\\\\/g, '\\\\');\n\tconst deserializeRegex = /\\\\x([0-9a-f]{2})/i;\n\twhile (true) {\n\t\tconst match = result.match(deserializeRegex);\n\t\tif (!match?.index || match.length < 2) {\n\t\t\tbreak;\n\t\t}\n\t\tresult = result.slice(0, match.index) + String.fromCharCode(parseInt(match[1], 16)) + result.slice(match.index + 4);\n\t}\n\treturn result;\n}\n\nexport function parseKeyValueAssignment(message: string): { key: string; value: string | undefined } {\n\tconst deserialized = deserializeMessage(message);\n\tconst separatorIndex = deserialized.indexOf('=');\n\tif (separatorIndex === -1) {\n\t\treturn { key: deserialized, value: undefined }; // No '=' was found.\n\t}\n\treturn {\n\t\tkey: deserialized.substring(0, separatorIndex),\n\t\tvalue: deserialized.substring(1 + separatorIndex)\n\t};\n}\n\n\nexport function parseMarkSequence(sequence: string[]): { id?: string; hidden?: boolean } {\n\tlet id = undefined;\n\tlet hidden = false;\n\tfor (const property of sequence) {\n\t\tif (property === 'Hidden') {\n\t\t\thidden = true;\n\t\t}\n\t\tif (property.startsWith('Id=')) {\n\t\t\tid = property.substring(3);\n\t\t}\n\t}\n\treturn { id, hidden };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { parse } from 'vs/base/common/path';\nimport { debounce, throttle } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nconst enum Constants {\n\t/**\n\t * The amount of time to throttle checks when the process receives output.\n\t */\n\tInactiveThrottleDuration = 5000,\n\t/**\n\t * The amount of time to debounce check when the process receives input.\n\t */\n\tActiveDebounceDuration = 1000,\n}\n\nexport const ignoreProcessNames: string[] = [];\n\n/**\n * Monitors a process for child processes, checking at differing times depending on input and output\n * calls into the monitor.\n */\nexport class ChildProcessMonitor extends Disposable {\n\tprivate _isDisposed: boolean = false;\n\n\tprivate _hasChildProcesses: boolean = false;\n\tprivate set hasChildProcesses(value: boolean) {\n\t\tif (this._hasChildProcesses !== value) {\n\t\t\tthis._hasChildProcesses = value;\n\t\t\tthis._logService.debug('ChildProcessMonitor: Has child processes changed', value);\n\t\t\tthis._onDidChangeHasChildProcesses.fire(value);\n\t\t}\n\t}\n\t/**\n\t * Whether the process has child processes.\n\t */\n\tget hasChildProcesses(): boolean { return this._hasChildProcesses; }\n\n\tprivate readonly _onDidChangeHasChildProcesses = this._register(new Emitter<boolean>());\n\t/**\n\t * An event that fires when whether the process has child processes changes.\n\t */\n\treadonly onDidChangeHasChildProcesses = this._onDidChangeHasChildProcesses.event;\n\n\tconstructor(\n\t\tprivate readonly _pid: number,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Input was triggered on the process.\n\t */\n\thandleInput() {\n\t\tthis._refreshActive();\n\t}\n\n\t/**\n\t * Output was triggered on the process.\n\t */\n\thandleOutput() {\n\t\tthis._refreshInactive();\n\t}\n\n\t@debounce(Constants.ActiveDebounceDuration)\n\tprivate async _refreshActive(): Promise<void> {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst processItem = await listProcesses(this._pid);\n\t\t\tthis.hasChildProcesses = this._processContainsChildren(processItem);\n\t\t} catch (e) {\n\t\t\tthis._logService.debug('ChildProcessMonitor: Fetching process tree failed', e);\n\t\t}\n\t}\n\n\t@throttle(Constants.InactiveThrottleDuration)\n\tprivate _refreshInactive(): void {\n\t\tthis._refreshActive();\n\t}\n\n\tprivate _processContainsChildren(processItem: ProcessItem): boolean {\n\t\t// No child processes\n\t\tif (!processItem.children) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// A single child process, handle special cases\n\t\tif (processItem.children.length === 1) {\n\t\t\tconst item = processItem.children[0];\n\t\t\tlet cmd: string;\n\t\t\tif (item.cmd.startsWith(`\"`)) {\n\t\t\t\tcmd = item.cmd.substring(1, item.cmd.indexOf(`\"`, 1));\n\t\t\t} else {\n\t\t\t\tconst spaceIndex = item.cmd.indexOf(` `);\n\t\t\t\tif (spaceIndex === -1) {\n\t\t\t\t\tcmd = item.cmd;\n\t\t\t\t} else {\n\t\t\t\t\tcmd = item.cmd.substring(0, spaceIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ignoreProcessNames.indexOf(parse(cmd).name) === -1;\n\t\t}\n\n\t\t// Fallback, count child processes\n\t\treturn processItem.children.length > 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { HeartbeatConstants, IHeartbeatService } from 'vs/platform/terminal/common/terminal';\n\nexport class HeartbeatService extends Disposable implements IHeartbeatService {\n\tprivate readonly _onBeat = this._register(new Emitter<void>());\n\treadonly onBeat = this._onBeat.event;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst interval = setInterval(() => {\n\t\t\tthis._onBeat.fire();\n\t\t}, HeartbeatConstants.BeatInterval);\n\t\tthis._register(toDisposable(() => clearInterval(interval)));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { FileAccess } from 'vs/base/common/network';\nimport { getCaseInsensitive } from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { format } from 'vs/base/common/strings';\nimport { isString } from 'vs/base/common/types';\nimport * as pfs from 'vs/base/node/pfs';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IShellLaunchConfig, ITerminalEnvironment, ITerminalProcessOptions } from 'vs/platform/terminal/common/terminal';\n\nexport function getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n\nexport async function findExecutable(command: string, cwd?: string, paths?: string[], env: IProcessEnvironment = process.env as IProcessEnvironment, exists: (path: string) => Promise<boolean> = pfs.Promises.exists): Promise<string | undefined> {\n\t// If we have an absolute path then we take it.\n\tif (path.isAbsolute(command)) {\n\t\treturn await exists(command) ? command : undefined;\n\t}\n\tif (cwd === undefined) {\n\t\tcwd = process.cwd();\n\t}\n\tconst dir = path.dirname(command);\n\tif (dir !== '.') {\n\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t// to the current working directory.\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\tconst envPath = getCaseInsensitive(env, 'PATH');\n\tif (paths === undefined && isString(envPath)) {\n\t\tpaths = envPath.split(path.delimiter);\n\t}\n\t// No PATH environment. Make path absolute to the cwd.\n\tif (paths === undefined || paths.length === 0) {\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\t// We have a simple file name. We get the path variable from the env\n\t// and try to find the executable on the path.\n\tfor (const pathEntry of paths) {\n\t\t// The path entry is absolute.\n\t\tlet fullPath: string;\n\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\tfullPath = path.join(pathEntry, command);\n\t\t} else {\n\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t}\n\n\t\tif (await exists(fullPath)) {\n\t\t\treturn fullPath;\n\t\t}\n\t\tif (isWindows) {\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t}\n\tconst fullPath = path.join(cwd, command);\n\treturn await exists(fullPath) ? fullPath : undefined;\n}\n\nexport interface IShellIntegrationConfigInjection {\n\t/**\n\t * A new set of arguments to use.\n\t */\n\tnewArgs: string[] | undefined;\n\t/**\n\t * An optional environment to mixing to the real environment.\n\t */\n\tenvMixin?: IProcessEnvironment;\n\t/**\n\t * An optional array of files to copy from `source` to `dest`.\n\t */\n\tfilesToCopy?: {\n\t\tsource: string;\n\t\tdest: string;\n\t}[];\n}\n\n/**\n * For a given shell launch config, returns arguments to replace and an optional environment to\n * mixin to the SLC's environment to enable shell integration. This must be run within the context\n * that creates the process to ensure accuracy. Returns undefined if shell integration cannot be\n * enabled.\n */\nexport function getShellIntegrationInjection(\n\tshellLaunchConfig: IShellLaunchConfig,\n\toptions: Pick<ITerminalProcessOptions, 'shellIntegration' | 'windowsEnableConpty'>,\n\tenv: ITerminalEnvironment | undefined,\n\tlogService: ILogService,\n\tproductService: IProductService\n): IShellIntegrationConfigInjection | undefined {\n\t// Shell integration arg injection is disabled when:\n\t// - The global setting is disabled\n\t// - There is no executable (not sure what script to run)\n\t// - The terminal is used by a feature like tasks or debugging\n\tif (!options.shellIntegration.enabled || !shellLaunchConfig.executable || shellLaunchConfig.isFeatureTerminal || shellLaunchConfig.hideFromUser || shellLaunchConfig.ignoreShellIntegration || (isWindows && !options.windowsEnableConpty)) {\n\t\treturn undefined;\n\t}\n\n\tconst originalArgs = shellLaunchConfig.args;\n\tconst shell = process.platform === 'win32' ? path.basename(shellLaunchConfig.executable).toLowerCase() : path.basename(shellLaunchConfig.executable);\n\tconst appRoot = path.dirname(FileAccess.asFileUri('', require).fsPath);\n\tlet newArgs: string[] | undefined;\n\tconst envMixin: IProcessEnvironment = {\n\t\t'VSCODE_INJECTION': '1'\n\t};\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (shell === 'pwsh.exe') {\n\t\t\tif (!originalArgs || arePwshImpliedArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.WindowsPwsh);\n\t\t\t} else if (arePwshLoginArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.WindowsPwshLogin);\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot, '');\n\t\t\treturn { newArgs, envMixin };\n\t\t}\n\t\tlogService.warn(`Shell integration cannot be enabled for executable \"${shellLaunchConfig.executable}\" and args`, shellLaunchConfig.args);\n\t\treturn undefined;\n\t}\n\n\t// Linux & macOS\n\tswitch (shell) {\n\t\tcase 'bash': {\n\t\t\tif (!originalArgs || originalArgs.length === 0) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Bash);\n\t\t\t} else if (areZshBashLoginArgs(originalArgs)) {\n\t\t\t\tenvMixin['VSCODE_SHELL_LOGIN'] = '1';\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Bash);\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot);\n\t\t\treturn { newArgs, envMixin };\n\t\t}\n\t\tcase 'pwsh': {\n\t\t\tif (!originalArgs || arePwshImpliedArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Pwsh);\n\t\t\t} else if (arePwshLoginArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.PwshLogin);\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot, '');\n\t\t\treturn { newArgs, envMixin };\n\t\t}\n\t\tcase 'zsh': {\n\t\t\tif (!originalArgs || originalArgs.length === 0) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Zsh);\n\t\t\t} else if (areZshBashLoginArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.ZshLogin);\n\t\t\t} else if (originalArgs === shellIntegrationArgs.get(ShellIntegrationExecutable.Zsh) || originalArgs === shellIntegrationArgs.get(ShellIntegrationExecutable.ZshLogin)) {\n\t\t\t\tnewArgs = originalArgs;\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot);\n\n\t\t\t// Move .zshrc into $ZDOTDIR as the way to activate the script\n\t\t\tconst zdotdir = path.join(os.tmpdir(), `${os.userInfo().username}-${productService.applicationName}-zsh`);\n\t\t\tenvMixin['ZDOTDIR'] = zdotdir;\n\t\t\tconst userZdotdir = env?.ZDOTDIR ?? os.homedir() ?? `~`;\n\t\t\tenvMixin['USER_ZDOTDIR'] = userZdotdir;\n\t\t\tconst filesToCopy: IShellIntegrationConfigInjection['filesToCopy'] = [];\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-rc.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zshrc')\n\t\t\t});\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-profile.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zprofile')\n\t\t\t});\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-env.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zshenv')\n\t\t\t});\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-login.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zlogin')\n\t\t\t});\n\t\t\treturn { newArgs, envMixin, filesToCopy };\n\t\t}\n\t}\n\tlogService.warn(`Shell integration cannot be enabled for executable \"${shellLaunchConfig.executable}\" and args`, shellLaunchConfig.args);\n\treturn undefined;\n}\n\nexport enum ShellIntegrationExecutable {\n\tWindowsPwsh = 'windows-pwsh',\n\tWindowsPwshLogin = 'windows-pwsh-login',\n\tPwsh = 'pwsh',\n\tPwshLogin = 'pwsh-login',\n\tZsh = 'zsh',\n\tZshLogin = 'zsh-login',\n\tBash = 'bash'\n}\n\nexport const shellIntegrationArgs: Map<ShellIntegrationExecutable, string[]> = new Map();\n// The try catch swallows execution policy errors in the case of the archive distributable\nshellIntegrationArgs.set(ShellIntegrationExecutable.WindowsPwsh, ['-noexit', '-command', 'try { . \\\"{0}\\\\out\\\\vs\\\\workbench\\\\contrib\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\\\" } catch {}{1}']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.WindowsPwshLogin, ['-l', '-noexit', '-command', 'try { . \\\"{0}\\\\out\\\\vs\\\\workbench\\\\contrib\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\\\" } catch {}{1}']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.Pwsh, ['-noexit', '-command', '. \"{0}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration.ps1\"{1}']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.PwshLogin, ['-l', '-noexit', '-command', '. \"{0}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration.ps1\"']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.Zsh, ['-i']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.ZshLogin, ['-il']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.Bash, ['--init-file', '{0}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh']);\nconst loginArgs = ['-login', '-l'];\nconst pwshImpliedArgs = ['-nol', '-nologo'];\n\nfunction arePwshLoginArgs(originalArgs: string | string[]): boolean {\n\tif (typeof originalArgs === 'string') {\n\t\treturn loginArgs.includes(originalArgs.toLowerCase());\n\t} else {\n\t\treturn originalArgs.length === 1 && loginArgs.includes(originalArgs[0].toLowerCase()) ||\n\t\t\t(originalArgs.length === 2 &&\n\t\t\t\t(((loginArgs.includes(originalArgs[0].toLowerCase())) || loginArgs.includes(originalArgs[1].toLowerCase())))\n\t\t\t\t&& ((pwshImpliedArgs.includes(originalArgs[0].toLowerCase())) || pwshImpliedArgs.includes(originalArgs[1].toLowerCase())));\n\t}\n}\n\nfunction arePwshImpliedArgs(originalArgs: string | string[]): boolean {\n\tif (typeof originalArgs === 'string') {\n\t\treturn pwshImpliedArgs.includes(originalArgs.toLowerCase());\n\t} else {\n\t\treturn originalArgs.length === 0 || originalArgs?.length === 1 && pwshImpliedArgs.includes(originalArgs[0].toLowerCase());\n\t}\n}\n\nfunction areZshBashLoginArgs(originalArgs: string | string[]): boolean {\n\treturn originalArgs === 'string' && loginArgs.includes(originalArgs.toLowerCase())\n\t\t|| typeof originalArgs !== 'string' && originalArgs.length === 1 && loginArgs.includes(originalArgs[0].toLowerCase());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows, platform } from 'vs/base/common/platform';\nimport { TerminalShellType, WindowsShellType } from 'vs/platform/terminal/common/terminal';\nimport type * as WindowsProcessTreeType from 'windows-process-tree';\n\nexport interface IWindowsShellHelper extends IDisposable {\n\treadonly onShellNameChanged: Event<string>;\n\treadonly onShellTypeChanged: Event<TerminalShellType>;\n\tgetShellType(title: string): TerminalShellType;\n\tgetShellName(): Promise<string>;\n}\n\nconst SHELL_EXECUTABLES = [\n\t'cmd.exe',\n\t'powershell.exe',\n\t'pwsh.exe',\n\t'bash.exe',\n\t'wsl.exe',\n\t'ubuntu.exe',\n\t'ubuntu1804.exe',\n\t'kali.exe',\n\t'debian.exe',\n\t'opensuse-42.exe',\n\t'sles-12.exe'\n];\n\nlet windowsProcessTree: typeof WindowsProcessTreeType;\n\nexport class WindowsShellHelper extends Disposable implements IWindowsShellHelper {\n\tprivate _isDisposed: boolean;\n\tprivate _currentRequest: Promise<string> | undefined;\n\tprivate _shellType: TerminalShellType | undefined;\n\tget shellType(): TerminalShellType | undefined { return this._shellType; }\n\tprivate _shellTitle: string = '';\n\tget shellTitle(): string { return this._shellTitle; }\n\tprivate readonly _onShellNameChanged = new Emitter<string>();\n\tget onShellNameChanged(): Event<string> { return this._onShellNameChanged.event; }\n\tprivate readonly _onShellTypeChanged = new Emitter<TerminalShellType>();\n\tget onShellTypeChanged(): Event<TerminalShellType> { return this._onShellTypeChanged.event; }\n\n\tconstructor(\n\t\tprivate _rootProcessId: number\n\t) {\n\t\tsuper();\n\n\t\tif (!isWindows) {\n\t\t\tthrow new Error(`WindowsShellHelper cannot be instantiated on ${platform}`);\n\t\t}\n\n\t\tthis._isDisposed = false;\n\n\t\tthis._startMonitoringShell();\n\t}\n\n\tprivate async _startMonitoringShell(): Promise<void> {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.checkShell();\n\t}\n\n\t@debounce(500)\n\tasync checkShell(): Promise<void> {\n\t\tif (isWindows) {\n\t\t\t// Wait to give the shell some time to actually launch a process, this\n\t\t\t// could lead to a race condition but it would be recovered from when\n\t\t\t// data stops and should cover the majority of cases\n\t\t\tawait timeout(300);\n\t\t\tthis.getShellName().then(title => {\n\t\t\t\tconst type = this.getShellType(title);\n\t\t\t\tif (type !== this._shellType) {\n\t\t\t\t\tthis._onShellTypeChanged.fire(type);\n\t\t\t\t\tthis._onShellNameChanged.fire(title);\n\t\t\t\t\tthis._shellType = type;\n\t\t\t\t\tthis._shellTitle = title;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate traverseTree(tree: any): string {\n\t\tif (!tree) {\n\t\t\treturn '';\n\t\t}\n\t\tif (SHELL_EXECUTABLES.indexOf(tree.name) === -1) {\n\t\t\treturn tree.name;\n\t\t}\n\t\tif (!tree.children || tree.children.length === 0) {\n\t\t\treturn tree.name;\n\t\t}\n\t\tlet favouriteChild = 0;\n\t\tfor (; favouriteChild < tree.children.length; favouriteChild++) {\n\t\t\tconst child = tree.children[favouriteChild];\n\t\t\tif (!child.children || child.children.length === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (child.children[0].name !== 'conhost.exe') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (favouriteChild >= tree.children.length) {\n\t\t\treturn tree.name;\n\t\t}\n\t\treturn this.traverseTree(tree.children[favouriteChild]);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Returns the innermost shell executable running in the terminal\n\t */\n\tasync getShellName(): Promise<string> {\n\t\tif (this._isDisposed) {\n\t\t\treturn Promise.resolve('');\n\t\t}\n\t\t// Prevent multiple requests at once, instead return current request\n\t\tif (this._currentRequest) {\n\t\t\treturn this._currentRequest;\n\t\t}\n\t\tif (!windowsProcessTree) {\n\t\t\twindowsProcessTree = await import('windows-process-tree');\n\t\t}\n\t\tthis._currentRequest = new Promise<string>(resolve => {\n\t\t\twindowsProcessTree.getProcessTree(this._rootProcessId, tree => {\n\t\t\t\tconst name = this.traverseTree(tree);\n\t\t\t\tthis._currentRequest = undefined;\n\t\t\t\tresolve(name);\n\t\t\t});\n\t\t});\n\t\treturn this._currentRequest;\n\t}\n\n\tgetShellType(executable: string): TerminalShellType {\n\t\tswitch (executable.toLowerCase()) {\n\t\t\tcase 'cmd.exe':\n\t\t\t\treturn WindowsShellType.CommandPrompt;\n\t\t\tcase 'powershell.exe':\n\t\t\tcase 'pwsh.exe':\n\t\t\t\treturn WindowsShellType.PowerShell;\n\t\t\tcase 'bash.exe':\n\t\t\tcase 'git-cmd.exe':\n\t\t\t\treturn WindowsShellType.GitBash;\n\t\t\tcase 'wsl.exe':\n\t\t\tcase 'ubuntu.exe':\n\t\t\tcase 'ubuntu1804.exe':\n\t\t\tcase 'kali.exe':\n\t\t\tcase 'debian.exe':\n\t\t\tcase 'opensuse-42.exe':\n\t\t\tcase 'sles-12.exe':\n\t\t\t\treturn WindowsShellType.Wsl;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { promises as fs } from 'fs';\nimport type * as pty from 'node-pty';\nimport { timeout } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as path from 'vs/base/common/path';\nimport { IProcessEnvironment, isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { FlowControlConstants, IShellLaunchConfig, ITerminalChildProcess, ITerminalLaunchError, IProcessProperty, IProcessPropertyMap as IProcessPropertyMap, ProcessPropertyType, TerminalShellType, IProcessReadyEvent, ITerminalProcessOptions, PosixShellType } from 'vs/platform/terminal/common/terminal';\nimport { ChildProcessMonitor } from 'vs/platform/terminal/node/childProcessMonitor';\nimport { findExecutable, getShellIntegrationInjection, getWindowsBuildNumber, IShellIntegrationConfigInjection } from 'vs/platform/terminal/node/terminalEnvironment';\nimport { WindowsShellHelper } from 'vs/platform/terminal/node/windowsShellHelper';\n\nconst enum ShutdownConstants {\n\t/**\n\t * The amount of ms that must pass between data events after exit is queued before the actual\n\t * kill call is triggered. This data flush mechanism works around an [issue in node-pty][1]\n\t * where not all data is flushed which causes problems for task problem matchers. Additionally\n\t * on Windows under conpty, killing a process while data is being output will cause the [conhost\n\t * flush to hang the pty host][2] because [conhost should be hosted on another thread][3].\n\t *\n\t * [1]: https://github.com/Tyriar/node-pty/issues/72\n\t * [2]: https://github.com/microsoft/vscode/issues/71966\n\t * [3]: https://github.com/microsoft/node-pty/pull/415\n\t */\n\tDataFlushTimeout = 250,\n\t/**\n\t * The maximum ms to allow after dispose is called because forcefully killing the process.\n\t */\n\tMaximumShutdownTime = 5000\n}\n\nconst enum Constants {\n\t/**\n\t * The minimum duration between kill and spawn calls on Windows/conpty as a mitigation for a\n\t * hang issue. See:\n\t * - https://github.com/microsoft/vscode/issues/71966\n\t * - https://github.com/microsoft/vscode/issues/117956\n\t * - https://github.com/microsoft/vscode/issues/121336\n\t */\n\tKillSpawnThrottleInterval = 250,\n\t/**\n\t * The amount of time to wait when a call is throttles beyond the exact amount, this is used to\n\t * try prevent early timeouts causing a kill/spawn call to happen at double the regular\n\t * interval.\n\t */\n\tKillSpawnSpacingDuration = 50,\n\n\t/**\n\t * Writing large amounts of data can be corrupted for some reason, after looking into this is\n\t * appears to be a race condition around writing to the FD which may be based on how powerful\n\t * the hardware is. The workaround for this is to space out when large amounts of data is being\n\t * written to the terminal. See https://github.com/microsoft/vscode/issues/38137\n\t */\n\tWriteMaxChunkSize = 50,\n\t/**\n\t * How long to wait between chunk writes.\n\t */\n\tWriteInterval = 5,\n}\n\ninterface IWriteObject {\n\tdata: string;\n\tisBinary: boolean;\n}\n\nconst posixShellTypeMap = new Map<string, PosixShellType>([\n\t['bash', PosixShellType.Bash],\n\t['csh', PosixShellType.Csh],\n\t['fish', PosixShellType.Fish],\n\t['ksh', PosixShellType.Ksh],\n\t['sh', PosixShellType.Sh],\n\t['pwsh', PosixShellType.PowerShell],\n\t['zsh', PosixShellType.Zsh]\n]);\n\nexport class TerminalProcess extends Disposable implements ITerminalChildProcess {\n\treadonly id = 0;\n\treadonly shouldPersist = false;\n\n\tprivate _properties: IProcessPropertyMap = {\n\t\tcwd: '',\n\t\tinitialCwd: '',\n\t\tfixedDimensions: { cols: undefined, rows: undefined },\n\t\ttitle: '',\n\t\tshellType: undefined,\n\t\thasChildProcesses: true,\n\t\tresolvedShellLaunchConfig: {},\n\t\toverrideDimensions: undefined,\n\t\tfailedShellIntegrationActivation: false,\n\t\tusedShellIntegrationInjection: undefined\n\t};\n\tprivate static _lastKillOrStart = 0;\n\tprivate _exitCode: number | undefined;\n\tprivate _exitMessage: string | undefined;\n\tprivate _closeTimeout: any;\n\tprivate _ptyProcess: pty.IPty | undefined;\n\tprivate _currentTitle: string = '';\n\tprivate _processStartupComplete: Promise<void> | undefined;\n\tprivate _isDisposed: boolean = false;\n\tprivate _windowsShellHelper: WindowsShellHelper | undefined;\n\tprivate _childProcessMonitor: ChildProcessMonitor | undefined;\n\tprivate _titleInterval: NodeJS.Timer | null = null;\n\tprivate _writeQueue: IWriteObject[] = [];\n\tprivate _writeTimeout: NodeJS.Timeout | undefined;\n\tprivate _delayedResizer: DelayedResizer | undefined;\n\tprivate readonly _initialCwd: string;\n\tprivate readonly _ptyOptions: pty.IPtyForkOptions | pty.IWindowsPtyForkOptions;\n\n\tprivate _isPtyPaused: boolean = false;\n\tprivate _unacknowledgedCharCount: number = 0;\n\tget exitMessage(): string | undefined { return this._exitMessage; }\n\n\tget currentTitle(): string { return this._windowsShellHelper?.shellTitle || this._currentTitle; }\n\tget shellType(): TerminalShellType { return isWindows ? this._windowsShellHelper?.shellType : posixShellTypeMap.get(this._currentTitle); }\n\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<IProcessReadyEvent>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onDidChangeProperty = this._register(new Emitter<IProcessProperty<any>>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<number>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\n\tconstructor(\n\t\treadonly shellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tenv: IProcessEnvironment,\n\t\t/**\n\t\t * environment used for `findExecutable`\n\t\t */\n\t\tprivate readonly _executableEnv: IProcessEnvironment,\n\t\tprivate readonly _options: ITerminalProcessOptions,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IProductService private readonly _productService: IProductService\n\t) {\n\t\tsuper();\n\t\tlet name: string;\n\t\tif (isWindows) {\n\t\t\tname = path.basename(this.shellLaunchConfig.executable || '');\n\t\t} else {\n\t\t\t// Using 'xterm-256color' here helps ensure that the majority of Linux distributions will use a\n\t\t\t// color prompt as defined in the default ~/.bashrc file.\n\t\t\tname = 'xterm-256color';\n\t\t}\n\t\tthis._initialCwd = cwd;\n\t\tthis._properties[ProcessPropertyType.InitialCwd] = this._initialCwd;\n\t\tthis._properties[ProcessPropertyType.Cwd] = this._initialCwd;\n\t\tconst useConpty = this._options.windowsEnableConpty && process.platform === 'win32' && getWindowsBuildNumber() >= 18309;\n\t\tthis._ptyOptions = {\n\t\t\tname,\n\t\t\tcwd,\n\t\t\t// TODO: When node-pty is updated this cast can be removed\n\t\t\tenv: env as { [key: string]: string },\n\t\t\tcols,\n\t\t\trows,\n\t\t\tuseConpty,\n\t\t\t// This option will force conpty to not redraw the whole viewport on launch\n\t\t\tconptyInheritCursor: useConpty && !!shellLaunchConfig.initialText\n\t\t};\n\t\t// Delay resizes to avoid conpty not respecting very early resize calls\n\t\tif (isWindows) {\n\t\t\tif (useConpty && cols === 0 && rows === 0 && this.shellLaunchConfig.executable?.endsWith('Git\\\\bin\\\\bash.exe')) {\n\t\t\t\tthis._delayedResizer = new DelayedResizer();\n\t\t\t\tthis._register(this._delayedResizer.onTrigger(dimensions => {\n\t\t\t\t\tthis._delayedResizer?.dispose();\n\t\t\t\t\tthis._delayedResizer = undefined;\n\t\t\t\t\tif (dimensions.cols && dimensions.rows) {\n\t\t\t\t\t\tthis.resize(dimensions.cols, dimensions.rows);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\t// WindowsShellHelper is used to fetch the process title and shell type\n\t\t\tthis.onProcessReady(e => {\n\t\t\t\tthis._windowsShellHelper = this._register(new WindowsShellHelper(e.pid));\n\t\t\t\tthis._register(this._windowsShellHelper.onShellTypeChanged(e => this._onDidChangeProperty.fire({ type: ProcessPropertyType.ShellType, value: e })));\n\t\t\t\tthis._register(this._windowsShellHelper.onShellNameChanged(e => this._onDidChangeProperty.fire({ type: ProcessPropertyType.Title, value: e })));\n\t\t\t});\n\t\t}\n\t}\n\n\tasync start(): Promise<ITerminalLaunchError | undefined> {\n\t\tconst results = await Promise.all([this._validateCwd(), this._validateExecutable()]);\n\t\tconst firstError = results.find(r => r !== undefined);\n\t\tif (firstError) {\n\t\t\treturn firstError;\n\t\t}\n\n\t\tlet injection: IShellIntegrationConfigInjection | undefined;\n\t\tif (this._options.shellIntegration.enabled) {\n\t\t\tinjection = getShellIntegrationInjection(this.shellLaunchConfig, { shellIntegration: this._options.shellIntegration, windowsEnableConpty: this._options.windowsEnableConpty }, this._ptyOptions.env, this._logService, this._productService);\n\t\t\tif (injection) {\n\t\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.UsedShellIntegrationInjection, value: true });\n\t\t\t\tif (injection.envMixin) {\n\t\t\t\t\tfor (const [key, value] of Object.entries(injection.envMixin)) {\n\t\t\t\t\t\tthis._ptyOptions.env ||= {};\n\t\t\t\t\t\tthis._ptyOptions.env[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (injection.filesToCopy) {\n\t\t\t\t\tfor (const f of injection.filesToCopy) {\n\t\t\t\t\t\tawait fs.mkdir(path.dirname(f.dest), { recursive: true });\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait fs.copyFile(f.source, f.dest);\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t// Swallow error, this should only happen when multiple users are on the same\n\t\t\t\t\t\t\t// machine. Since the shell integration scripts rarely change, plus the other user\n\t\t\t\t\t\t\t// should be using the same version of the server in this case, assume the script is\n\t\t\t\t\t\t\t// fine if copy fails and swallow the error.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.FailedShellIntegrationActivation, value: true });\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.setupPtyProcess(this.shellLaunchConfig, this._ptyOptions, injection);\n\t\t\treturn undefined;\n\t\t} catch (err) {\n\t\t\tthis._logService.trace('IPty#spawn native exception', err);\n\t\t\treturn { message: `A native exception occurred during launch (${err.message})` };\n\t\t}\n\t}\n\n\tprivate async _validateCwd(): Promise<undefined | ITerminalLaunchError> {\n\t\ttry {\n\t\t\tconst result = await Promises.stat(this._initialCwd);\n\t\t\tif (!result.isDirectory()) {\n\t\t\t\treturn { message: localize('launchFail.cwdNotDirectory', \"Starting directory (cwd) \\\"{0}\\\" is not a directory\", this._initialCwd.toString()) };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err?.code === 'ENOENT') {\n\t\t\t\treturn { message: localize('launchFail.cwdDoesNotExist', \"Starting directory (cwd) \\\"{0}\\\" does not exist\", this._initialCwd.toString()) };\n\t\t\t}\n\t\t}\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.InitialCwd, value: this._initialCwd });\n\t\treturn undefined;\n\t}\n\n\tprivate async _validateExecutable(): Promise<undefined | ITerminalLaunchError> {\n\t\tconst slc = this.shellLaunchConfig;\n\t\tif (!slc.executable) {\n\t\t\tthrow new Error('IShellLaunchConfig.executable not set');\n\t\t}\n\n\t\tconst cwd = slc.cwd instanceof URI ? slc.cwd.path : slc.cwd;\n\t\tconst envPaths: string[] | undefined = (slc.env && slc.env.PATH) ? slc.env.PATH.split(path.delimiter) : undefined;\n\t\tconst executable = await findExecutable(slc.executable!, cwd, envPaths, this._executableEnv);\n\t\tif (!executable) {\n\t\t\treturn { message: localize('launchFail.executableDoesNotExist', \"Path to shell executable \\\"{0}\\\" does not exist\", slc.executable) };\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promises.stat(executable);\n\t\t\tif (!result.isFile() && !result.isSymbolicLink()) {\n\t\t\t\treturn { message: localize('launchFail.executableIsNotFileOrSymlink', \"Path to shell executable \\\"{0}\\\" is not a file or a symlink\", slc.executable) };\n\t\t\t}\n\t\t\t// Set the executable explicitly here so that node-pty doesn't need to search the\n\t\t\t// $PATH too.\n\t\t\tslc.executable = executable;\n\t\t} catch (err) {\n\t\t\tif (err?.code === 'EACCES') {\n\t\t\t\t// Swallow\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async setupPtyProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\toptions: pty.IPtyForkOptions,\n\t\tshellIntegrationInjection: IShellIntegrationConfigInjection | undefined\n\t): Promise<void> {\n\t\tconst args = shellIntegrationInjection?.newArgs || shellLaunchConfig.args || [];\n\t\tawait this._throttleKillSpawn();\n\t\tthis._logService.trace('IPty#spawn', shellLaunchConfig.executable, args, options);\n\t\tconst ptyProcess = (await import('node-pty')).spawn(shellLaunchConfig.executable!, args, options);\n\t\tthis._ptyProcess = ptyProcess;\n\t\tthis._childProcessMonitor = this._register(new ChildProcessMonitor(ptyProcess.pid, this._logService));\n\t\tthis._childProcessMonitor.onDidChangeHasChildProcesses(value => this._onDidChangeProperty.fire({ type: ProcessPropertyType.HasChildProcesses, value }));\n\t\tthis._processStartupComplete = new Promise<void>(c => {\n\t\t\tthis.onProcessReady(() => c());\n\t\t});\n\t\tptyProcess.onData(data => {\n\t\t\t// Handle flow control\n\t\t\tthis._unacknowledgedCharCount += data.length;\n\t\t\tif (!this._isPtyPaused && this._unacknowledgedCharCount > FlowControlConstants.HighWatermarkChars) {\n\t\t\t\tthis._logService.trace(`Flow control: Pause (${this._unacknowledgedCharCount} > ${FlowControlConstants.HighWatermarkChars})`);\n\t\t\t\tthis._isPtyPaused = true;\n\t\t\t\tptyProcess.pause();\n\t\t\t}\n\n\t\t\t// Refire the data event\n\t\t\tthis._logService.trace('IPty#onData', data);\n\t\t\tthis._onProcessData.fire(data);\n\t\t\tif (this._closeTimeout) {\n\t\t\t\tthis._queueProcessExit();\n\t\t\t}\n\t\t\tthis._windowsShellHelper?.checkShell();\n\t\t\tthis._childProcessMonitor?.handleOutput();\n\t\t});\n\t\tptyProcess.onExit(e => {\n\t\t\tthis._exitCode = e.exitCode;\n\t\t\tthis._queueProcessExit();\n\t\t});\n\t\tthis._sendProcessId(ptyProcess.pid);\n\t\tthis._setupTitlePolling(ptyProcess);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._titleInterval) {\n\t\t\tclearInterval(this._titleInterval);\n\t\t}\n\t\tthis._titleInterval = null;\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setupTitlePolling(ptyProcess: pty.IPty) {\n\t\t// Send initial timeout async to give event listeners a chance to init\n\t\tsetTimeout(() => this._sendProcessTitle(ptyProcess));\n\t\t// Setup polling for non-Windows, for Windows `process` doesn't change\n\t\tif (!isWindows) {\n\t\t\tthis._titleInterval = setInterval(() => {\n\t\t\t\tif (this._currentTitle !== ptyProcess.process) {\n\t\t\t\t\tthis._sendProcessTitle(ptyProcess);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\t// Allow any trailing data events to be sent before the exit event is sent.\n\t// See https://github.com/Tyriar/node-pty/issues/72\n\tprivate _queueProcessExit() {\n\t\tif (this._closeTimeout) {\n\t\t\tclearTimeout(this._closeTimeout);\n\t\t}\n\t\tthis._closeTimeout = setTimeout(() => {\n\t\t\tthis._closeTimeout = undefined;\n\t\t\tthis._kill();\n\t\t}, ShutdownConstants.DataFlushTimeout);\n\t}\n\n\tprivate async _kill(): Promise<void> {\n\t\t// Wait to kill to process until the start up code has run. This prevents us from firing a process exit before a\n\t\t// process start.\n\t\tawait this._processStartupComplete;\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\t// Attempt to kill the pty, it may have already been killed at this\n\t\t// point but we want to make sure\n\t\ttry {\n\t\t\tif (this._ptyProcess) {\n\t\t\t\tawait this._throttleKillSpawn();\n\t\t\t\tthis._logService.trace('IPty#kill');\n\t\t\t\tthis._ptyProcess.kill();\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\t// Swallow, the pty has already been killed\n\t\t}\n\t\tthis._onProcessExit.fire(this._exitCode || 0);\n\t\tthis.dispose();\n\t}\n\n\tprivate async _throttleKillSpawn(): Promise<void> {\n\t\t// Only throttle on Windows/conpty\n\t\tif (!isWindows || !('useConpty' in this._ptyOptions) || !this._ptyOptions.useConpty) {\n\t\t\treturn;\n\t\t}\n\t\t// Use a loop to ensure multiple calls in a single interval space out\n\t\twhile (Date.now() - TerminalProcess._lastKillOrStart < Constants.KillSpawnThrottleInterval) {\n\t\t\tthis._logService.trace('Throttling kill/spawn call');\n\t\t\tawait timeout(Constants.KillSpawnThrottleInterval - (Date.now() - TerminalProcess._lastKillOrStart) + Constants.KillSpawnSpacingDuration);\n\t\t}\n\t\tTerminalProcess._lastKillOrStart = Date.now();\n\t}\n\n\tprivate _sendProcessId(pid: number) {\n\t\tthis._onProcessReady.fire({ pid, cwd: this._initialCwd, requiresWindowsMode: isWindows && getWindowsBuildNumber() < 21376 });\n\t}\n\n\tprivate _sendProcessTitle(ptyProcess: pty.IPty): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentTitle = ptyProcess.process;\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.Title, value: this._currentTitle });\n\t\t// If fig is installed it may change the title of the process\n\t\tconst sanitizedTitle = this.currentTitle.replace(/ \\(figterm\\)$/g, '');\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.ShellType, value: posixShellTypeMap.get(sanitizedTitle) });\n\t}\n\n\tshutdown(immediate: boolean): void {\n\t\t// don't force immediate disposal of the terminal processes on Windows as an additional\n\t\t// mitigation for https://github.com/microsoft/vscode/issues/71966 which causes the pty host\n\t\t// to become unresponsive, disconnecting all terminals across all windows.\n\t\tif (immediate && !isWindows) {\n\t\t\tthis._kill();\n\t\t} else {\n\t\t\tif (!this._closeTimeout && !this._isDisposed) {\n\t\t\t\tthis._queueProcessExit();\n\t\t\t\t// Allow a maximum amount of time for the process to exit, otherwise force kill it\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this._closeTimeout && !this._isDisposed) {\n\t\t\t\t\t\tthis._closeTimeout = undefined;\n\t\t\t\t\t\tthis._kill();\n\t\t\t\t\t}\n\t\t\t\t}, ShutdownConstants.MaximumShutdownTime);\n\t\t\t}\n\t\t}\n\t}\n\n\tinput(data: string, isBinary?: boolean): void {\n\t\tif (this._isDisposed || !this._ptyProcess) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i <= Math.floor(data.length / Constants.WriteMaxChunkSize); i++) {\n\t\t\tconst obj = {\n\t\t\t\tisBinary: isBinary || false,\n\t\t\t\tdata: data.substr(i * Constants.WriteMaxChunkSize, Constants.WriteMaxChunkSize)\n\t\t\t};\n\t\t\tthis._writeQueue.push(obj);\n\t\t}\n\t\tthis._startWrite();\n\t}\n\n\tasync processBinary(data: string): Promise<void> {\n\t\tthis.input(data, true);\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(type: T): Promise<IProcessPropertyMap[T]> {\n\t\tswitch (type) {\n\t\t\tcase ProcessPropertyType.Cwd: {\n\t\t\t\tconst newCwd = await this.getCwd();\n\t\t\t\tif (newCwd !== this._properties.cwd) {\n\t\t\t\t\tthis._properties.cwd = newCwd;\n\t\t\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.Cwd, value: this._properties.cwd });\n\t\t\t\t}\n\t\t\t\treturn newCwd as IProcessPropertyMap[T];\n\t\t\t}\n\t\t\tcase ProcessPropertyType.InitialCwd: {\n\t\t\t\tconst initialCwd = await this.getInitialCwd();\n\t\t\t\tif (initialCwd !== this._properties.initialCwd) {\n\t\t\t\t\tthis._properties.initialCwd = initialCwd;\n\t\t\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.InitialCwd, value: this._properties.initialCwd });\n\t\t\t\t}\n\t\t\t\treturn initialCwd as IProcessPropertyMap[T];\n\t\t\t}\n\t\t\tcase ProcessPropertyType.Title:\n\t\t\t\treturn this.currentTitle as IProcessPropertyMap[T];\n\t\t\tdefault:\n\t\t\t\treturn this.shellType as IProcessPropertyMap[T];\n\t\t}\n\t}\n\n\tasync updateProperty<T extends ProcessPropertyType>(type: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\tif (type === ProcessPropertyType.FixedDimensions) {\n\t\t\tthis._properties.fixedDimensions = value as IProcessPropertyMap[ProcessPropertyType.FixedDimensions];\n\t\t}\n\t}\n\n\tprivate _startWrite(): void {\n\t\t// Don't write if it's already queued of is there is nothing to write\n\t\tif (this._writeTimeout !== undefined || this._writeQueue.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._doWrite();\n\n\t\t// Don't queue more writes if the queue is empty\n\t\tif (this._writeQueue.length === 0) {\n\t\t\tthis._writeTimeout = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\t// Queue the next write\n\t\tthis._writeTimeout = setTimeout(() => {\n\t\t\tthis._writeTimeout = undefined;\n\t\t\tthis._startWrite();\n\t\t}, Constants.WriteInterval);\n\t}\n\n\tprivate _doWrite(): void {\n\t\tconst object = this._writeQueue.shift()!;\n\t\tthis._logService.trace('IPty#write', object.data);\n\t\tif (object.isBinary) {\n\t\t\tthis._ptyProcess!.write(Buffer.from(object.data, 'binary') as any);\n\t\t} else {\n\t\t\tthis._ptyProcess!.write(object.data);\n\t\t}\n\t\tthis._childProcessMonitor?.handleInput();\n\t}\n\n\tresize(cols: number, rows: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof cols !== 'number' || typeof rows !== 'number' || isNaN(cols) || isNaN(rows)) {\n\t\t\treturn;\n\t\t}\n\t\t// Ensure that cols and rows are always >= 1, this prevents a native\n\t\t// exception in winpty.\n\t\tif (this._ptyProcess) {\n\t\t\tcols = Math.max(cols, 1);\n\t\t\trows = Math.max(rows, 1);\n\n\t\t\t// Delay resize if needed\n\t\t\tif (this._delayedResizer) {\n\t\t\t\tthis._delayedResizer.cols = cols;\n\t\t\t\tthis._delayedResizer.rows = rows;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._logService.trace('IPty#resize', cols, rows);\n\t\t\ttry {\n\t\t\t\tthis._ptyProcess.resize(cols, rows);\n\t\t\t} catch (e) {\n\t\t\t\t// Swallow error if the pty has already exited\n\t\t\t\tthis._logService.trace('IPty#resize exception ' + e.message);\n\t\t\t\tif (this._exitCode !== undefined &&\n\t\t\t\t\te.message !== 'ioctl(2) failed, EBADF' &&\n\t\t\t\t\te.message !== 'Cannot resize a pty that has already exited') {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tacknowledgeDataEvent(charCount: number): void {\n\t\t// Prevent lower than 0 to heal from errors\n\t\tthis._unacknowledgedCharCount = Math.max(this._unacknowledgedCharCount - charCount, 0);\n\t\tthis._logService.trace(`Flow control: Ack ${charCount} chars (unacknowledged: ${this._unacknowledgedCharCount})`);\n\t\tif (this._isPtyPaused && this._unacknowledgedCharCount < FlowControlConstants.LowWatermarkChars) {\n\t\t\tthis._logService.trace(`Flow control: Resume (${this._unacknowledgedCharCount} < ${FlowControlConstants.LowWatermarkChars})`);\n\t\t\tthis._ptyProcess?.resume();\n\t\t\tthis._isPtyPaused = false;\n\t\t}\n\t}\n\n\tclearUnacknowledgedChars(): void {\n\t\tthis._unacknowledgedCharCount = 0;\n\t\tthis._logService.trace(`Flow control: Cleared all unacknowledged chars, forcing resume`);\n\t\tif (this._isPtyPaused) {\n\t\t\tthis._ptyProcess?.resume();\n\t\t\tthis._isPtyPaused = false;\n\t\t}\n\t}\n\n\tasync setUnicodeVersion(version: '6' | '11'): Promise<void> {\n\t\t// No-op\n\t}\n\n\tgetInitialCwd(): Promise<string> {\n\t\treturn Promise.resolve(this._initialCwd);\n\t}\n\n\tasync getCwd(): Promise<string> {\n\t\tif (isMacintosh) {\n\t\t\t// From Big Sur (darwin v20) there is a spawn blocking thread issue on Electron,\n\t\t\t// this is fixed in VS Code's internal Electron.\n\t\t\t// https://github.com/Microsoft/vscode/issues/105446\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\tif (!this._ptyProcess) {\n\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._logService.trace('IPty#pid');\n\t\t\t\texec('lsof -OPln -p ' + this._ptyProcess.pid + ' | grep cwd', { env: { ...process.env, LANG: 'en_US.UTF-8' } }, (error, stdout, stderr) => {\n\t\t\t\t\tif (!error && stdout !== '') {\n\t\t\t\t\t\tresolve(stdout.substring(stdout.indexOf('/'), stdout.length - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._logService.error('lsof did not run successfully, it may not be on the $PATH?', error, stdout, stderr);\n\t\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\tif (!this._ptyProcess) {\n\t\t\t\treturn this._initialCwd;\n\t\t\t}\n\t\t\tthis._logService.trace('IPty#pid');\n\t\t\ttry {\n\t\t\t\treturn await Promises.readlink(`/proc/${this._ptyProcess.pid}/cwd`);\n\t\t\t} catch (error) {\n\t\t\t\treturn this._initialCwd;\n\t\t\t}\n\t\t}\n\n\t\treturn this._initialCwd;\n\t}\n\n\tgetLatency(): Promise<number> {\n\t\treturn Promise.resolve(0);\n\t}\n}\n\n/**\n * Tracks the latest resize event to be trigger at a later point.\n */\nclass DelayedResizer extends Disposable {\n\trows: number | undefined;\n\tcols: number | undefined;\n\tprivate _timeout: NodeJS.Timeout;\n\n\tprivate readonly _onTrigger = this._register(new Emitter<{ rows?: number; cols?: number }>());\n\tget onTrigger(): Event<{ rows?: number; cols?: number }> { return this._onTrigger.event; }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._onTrigger.fire({ rows: this.rows, cols: this.cols });\n\t\t}, 1000);\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tclearTimeout(this._timeout);\n\t\t\t}\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tclearTimeout(this._timeout);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { execFile, exec } from 'child_process';\nimport { AutoOpenBarrier, ProcessTimeRunOnceScheduler, Promises, Queue } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment, isWindows, OperatingSystem, OS } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { getSystemShell } from 'vs/base/node/shell';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { RequestStore } from 'vs/platform/terminal/common/requestStore';\nimport { IProcessDataEvent, IProcessReadyEvent, IPtyService, IRawTerminalInstanceLayoutInfo, IReconnectConstants, IRequestResolveVariablesEvent, IShellLaunchConfig, ITerminalInstanceLayoutInfoById, ITerminalLaunchError, ITerminalsLayoutInfo, ITerminalTabLayoutInfoById, TerminalIcon, IProcessProperty, TitleEventSource, ProcessPropertyType, IProcessPropertyMap, IFixedTerminalDimensions, IPersistentTerminalProcessLaunchConfig, ICrossVersionSerializedTerminalState, ISerializedTerminalState, ITerminalProcessOptions } from 'vs/platform/terminal/common/terminal';\nimport { TerminalDataBufferer } from 'vs/platform/terminal/common/terminalDataBuffering';\nimport { escapeNonWindowsPath } from 'vs/platform/terminal/common/terminalEnvironment';\nimport { Terminal as XtermTerminal } from 'xterm-headless';\nimport type { ISerializeOptions, SerializeAddon as XtermSerializeAddon } from 'xterm-addon-serialize';\nimport type { Unicode11Addon as XtermUnicode11Addon } from 'xterm-addon-unicode11';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, ISetTerminalLayoutInfoArgs, ITerminalTabLayoutInfoDto } from 'vs/platform/terminal/common/terminalProcess';\nimport { getWindowsBuildNumber } from 'vs/platform/terminal/node/terminalEnvironment';\nimport { TerminalProcess } from 'vs/platform/terminal/node/terminalProcess';\nimport { localize } from 'vs/nls';\nimport { ignoreProcessNames } from 'vs/platform/terminal/node/childProcessMonitor';\nimport { TerminalAutoResponder } from 'vs/platform/terminal/common/terminalAutoResponder';\nimport { ErrorNoTelemetry } from 'vs/base/common/errors';\nimport { ShellIntegrationAddon } from 'vs/platform/terminal/common/xterm/shellIntegrationAddon';\nimport { formatMessageForTerminal } from 'vs/platform/terminal/common/terminalStrings';\nimport { IPtyHostProcessReplayEvent } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\ntype WorkspaceId = string;\n\nlet SerializeAddon: typeof XtermSerializeAddon;\nlet Unicode11Addon: typeof XtermUnicode11Addon;\n\nexport class PtyService extends Disposable implements IPtyService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _ptys: Map<number, PersistentTerminalProcess> = new Map();\n\tprivate readonly _workspaceLayoutInfos = new Map<WorkspaceId, ISetTerminalLayoutInfoArgs>();\n\tprivate readonly _detachInstanceRequestStore: RequestStore<IProcessDetails | undefined, { workspaceId: string; instanceId: number }>;\n\tprivate readonly _revivedPtyIdMap: Map<number, { newId: number; state: ISerializedTerminalState }> = new Map();\n\tprivate readonly _autoReplies: Map<string, string> = new Map();\n\n\tprivate readonly _onHeartbeat = this._register(new Emitter<void>());\n\treadonly onHeartbeat = this._onHeartbeat.event;\n\n\tprivate readonly _onProcessData = this._register(new Emitter<{ id: number; event: IProcessDataEvent | string }>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessReplay = this._register(new Emitter<{ id: number; event: IPtyHostProcessReplayEvent }>());\n\treadonly onProcessReplay = this._onProcessReplay.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ id: number; event: { pid: number; cwd: string } }>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<{ id: number; event: number | undefined }>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\tprivate readonly _onProcessOrphanQuestion = this._register(new Emitter<{ id: number }>());\n\treadonly onProcessOrphanQuestion = this._onProcessOrphanQuestion.event;\n\tprivate readonly _onDidRequestDetach = this._register(new Emitter<{ requestId: number; workspaceId: string; instanceId: number }>());\n\treadonly onDidRequestDetach = this._onDidRequestDetach.event;\n\tprivate readonly _onDidChangeProperty = this._register(new Emitter<{ id: number; property: IProcessProperty<any> }>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\n\tconstructor(\n\t\tprivate _lastPtyId: number,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _productService: IProductService,\n\t\tprivate readonly _reconnectConstants: IReconnectConstants\n\t) {\n\t\tsuper();\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tfor (const pty of this._ptys.values()) {\n\t\t\t\tpty.shutdown(true);\n\t\t\t}\n\t\t\tthis._ptys.clear();\n\t\t}));\n\n\t\tthis._detachInstanceRequestStore = this._register(new RequestStore(undefined, this._logService));\n\t\tthis._detachInstanceRequestStore.onCreateRequest(this._onDidRequestDetach.fire, this._onDidRequestDetach);\n\t}\n\n\tasync refreshIgnoreProcessNames(names: string[]): Promise<void> {\n\t\tignoreProcessNames.length = 0;\n\t\tignoreProcessNames.push(...names);\n\t}\n\n\tonPtyHostExit?: Event<number> | undefined;\n\tonPtyHostStart?: Event<void> | undefined;\n\tonPtyHostUnresponsive?: Event<void> | undefined;\n\tonPtyHostResponsive?: Event<void> | undefined;\n\tonPtyHostRequestResolveVariables?: Event<IRequestResolveVariablesEvent> | undefined;\n\n\tasync requestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined> {\n\t\treturn this._detachInstanceRequestStore.createRequest({ workspaceId, instanceId });\n\t}\n\n\tasync acceptDetachInstanceReply(requestId: number, persistentProcessId: number): Promise<void> {\n\t\tlet processDetails: IProcessDetails | undefined = undefined;\n\t\tconst pty = this._ptys.get(persistentProcessId);\n\t\tif (pty) {\n\t\t\tprocessDetails = await this._buildProcessDetails(persistentProcessId, pty);\n\t\t}\n\t\tthis._detachInstanceRequestStore.acceptReply(requestId, processDetails);\n\t}\n\n\tasync freePortKillProcess(id: number, port: string): Promise<{ port: string; processId: string }> {\n\t\tlet result: { port: string; processId: string } | undefined;\n\t\tif (!isWindows) {\n\t\t\tconst stdout = await new Promise<string>((resolve, reject) => {\n\t\t\t\texec(`lsof -nP -iTCP -sTCP:LISTEN | grep ${port}`, {}, (err, stdout) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject('Problem occurred when listing active processes');\n\t\t\t\t\t}\n\t\t\t\t\tresolve(stdout);\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst processesForPort = stdout.split('\\n');\n\t\t\tif (processesForPort.length >= 1) {\n\t\t\t\tconst capturePid = /\\s+(\\d+)\\s+/;\n\t\t\t\tconst processId = processesForPort[0].match(capturePid)?.[1];\n\t\t\t\tif (processId) {\n\t\t\t\t\tawait new Promise<string>((resolve, reject) => {\n\t\t\t\t\t\texec(`kill ${processId}`, {}, (err, stdout) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn reject(`Problem occurred when killing the process with PID: ${processId}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(stdout);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresult = { port, processId };\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst stdout = await new Promise<string>((resolve, reject) => {\n\t\t\t\texec(`netstat -ano | findstr \"${port}\"`, {}, (err, stdout) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject('Problem occurred when listing active processes');\n\t\t\t\t\t}\n\t\t\t\t\tresolve(stdout);\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst processesForPort = stdout.split('\\n');\n\t\t\tif (processesForPort.length >= 1) {\n\t\t\t\tconst capturePid = /LISTENING\\s+(\\d+)/;\n\t\t\t\tconst processId = processesForPort[0].match(capturePid)?.[1];\n\t\t\t\tif (processId) {\n\t\t\t\t\tawait new Promise<string>((resolve, reject) => {\n\t\t\t\t\t\texec(`Taskkill /F /PID ${processId}`, {}, (err, stdout) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn reject(`Problem occurred when killing the process with PID: ${processId}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(stdout);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresult = { port, processId };\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new Error(`Processes for port ${port} were not found`);\n\t}\n\n\tasync serializeTerminalState(ids: number[]): Promise<string> {\n\t\tconst promises: Promise<ISerializedTerminalState>[] = [];\n\t\tfor (const [persistentProcessId, persistentProcess] of this._ptys.entries()) {\n\t\t\t// Only serialize persistent processes that have had data written or performed a replay\n\t\t\tif (persistentProcess.hasWrittenData && ids.indexOf(persistentProcessId) !== -1) {\n\t\t\t\tpromises.push(Promises.withAsyncBody<ISerializedTerminalState>(async r => {\n\t\t\t\t\tr({\n\t\t\t\t\t\tid: persistentProcessId,\n\t\t\t\t\t\tshellLaunchConfig: persistentProcess.shellLaunchConfig,\n\t\t\t\t\t\tprocessDetails: await this._buildProcessDetails(persistentProcessId, persistentProcess),\n\t\t\t\t\t\tprocessLaunchConfig: persistentProcess.processLaunchOptions,\n\t\t\t\t\t\tunicodeVersion: persistentProcess.unicodeVersion,\n\t\t\t\t\t\treplayEvent: await persistentProcess.serializeNormalBuffer(),\n\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t});\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\tconst serialized: ICrossVersionSerializedTerminalState = {\n\t\t\tversion: 1,\n\t\t\tstate: await Promise.all(promises)\n\t\t};\n\t\treturn JSON.stringify(serialized);\n\t}\n\n\tasync reviveTerminalProcesses(state: ISerializedTerminalState[], dateTimeFormatLocale: string) {\n\t\tfor (const terminal of state) {\n\t\t\tconst restoreMessage = localize('terminal-history-restored', \"History restored\");\n\t\t\t// TODO: We may at some point want to show date information in a hover via a custom sequence:\n\t\t\t//   new Date(terminal.timestamp).toLocaleDateString(dateTimeFormatLocale)\n\t\t\t//   new Date(terminal.timestamp).toLocaleTimeString(dateTimeFormatLocale)\n\t\t\tconst newId = await this.createProcess(\n\t\t\t\t{\n\t\t\t\t\t...terminal.shellLaunchConfig,\n\t\t\t\t\tcwd: terminal.processDetails.cwd,\n\t\t\t\t\tcolor: terminal.processDetails.color,\n\t\t\t\t\ticon: terminal.processDetails.icon,\n\t\t\t\t\tname: terminal.processDetails.titleSource === TitleEventSource.Api ? terminal.processDetails.title : undefined,\n\t\t\t\t\tinitialText: terminal.replayEvent.events[0].data + formatMessageForTerminal(restoreMessage, { loudFormatting: true })\n\t\t\t\t},\n\t\t\t\tterminal.processDetails.cwd,\n\t\t\t\tterminal.replayEvent.events[0].cols,\n\t\t\t\tterminal.replayEvent.events[0].rows,\n\t\t\t\tterminal.unicodeVersion,\n\t\t\t\tterminal.processLaunchConfig.env,\n\t\t\t\tterminal.processLaunchConfig.executableEnv,\n\t\t\t\tterminal.processLaunchConfig.options,\n\t\t\t\ttrue,\n\t\t\t\tterminal.processDetails.workspaceId,\n\t\t\t\tterminal.processDetails.workspaceName,\n\t\t\t\ttrue,\n\t\t\t\tterminal.replayEvent.events[0].data\n\t\t\t);\n\t\t\t// Don't start the process here as there's no terminal to answer CPR\n\t\t\tthis._revivedPtyIdMap.set(terminal.id, { newId, state: terminal });\n\t\t}\n\t}\n\n\tasync shutdownAll(): Promise<void> {\n\t\tthis.dispose();\n\t}\n\n\tasync createProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11',\n\t\tenv: IProcessEnvironment,\n\t\texecutableEnv: IProcessEnvironment,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersist: boolean,\n\t\tworkspaceId: string,\n\t\tworkspaceName: string,\n\t\tisReviving?: boolean,\n\t\trawReviveBuffer?: string\n\t): Promise<number> {\n\t\tif (shellLaunchConfig.attachPersistentProcess) {\n\t\t\tthrow new Error('Attempt to create a process when attach object was provided');\n\t\t}\n\t\tconst id = ++this._lastPtyId;\n\t\tconst process = new TerminalProcess(shellLaunchConfig, cwd, cols, rows, env, executableEnv, options, this._logService, this._productService);\n\t\tprocess.onProcessData(event => this._onProcessData.fire({ id, event }));\n\t\tconst processLaunchOptions: IPersistentTerminalProcessLaunchConfig = {\n\t\t\tenv,\n\t\t\texecutableEnv,\n\t\t\toptions\n\t\t};\n\t\tconst persistentProcess = new PersistentTerminalProcess(id, process, workspaceId, workspaceName, shouldPersist, cols, rows, processLaunchOptions, unicodeVersion, this._reconnectConstants, this._logService, isReviving && typeof shellLaunchConfig.initialText === 'string' ? shellLaunchConfig.initialText : undefined, rawReviveBuffer, shellLaunchConfig.icon, shellLaunchConfig.color, shellLaunchConfig.name, shellLaunchConfig.fixedDimensions);\n\t\tprocess.onDidChangeProperty(property => this._onDidChangeProperty.fire({ id, property }));\n\t\tprocess.onProcessExit(event => {\n\t\t\tpersistentProcess.dispose();\n\t\t\tthis._ptys.delete(id);\n\t\t\tthis._onProcessExit.fire({ id, event });\n\t\t});\n\t\tpersistentProcess.onProcessReplay(event => this._onProcessReplay.fire({ id, event }));\n\t\tpersistentProcess.onProcessReady(event => this._onProcessReady.fire({ id, event }));\n\t\tpersistentProcess.onProcessOrphanQuestion(() => this._onProcessOrphanQuestion.fire({ id }));\n\t\tpersistentProcess.onDidChangeProperty(property => this._onDidChangeProperty.fire({ id, property }));\n\t\tpersistentProcess.onPersistentProcessReady(() => {\n\t\t\tfor (const e of this._autoReplies.entries()) {\n\t\t\t\tpersistentProcess.installAutoReply(e[0], e[1]);\n\t\t\t}\n\t\t});\n\t\tthis._ptys.set(id, persistentProcess);\n\t\treturn id;\n\t}\n\n\tasync attachToProcess(id: number): Promise<void> {\n\t\ttry {\n\t\t\tawait this._throwIfNoPty(id).attach();\n\t\t\tthis._logService.info(`Persistent process reconnection \"${id}\"`);\n\t\t} catch (e) {\n\t\t\tthis._logService.warn(`Persistent process reconnection \"${id}\" failed`, e.message);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync updateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<void> {\n\t\tthis._throwIfNoPty(id).setTitle(title, titleSource);\n\t}\n\n\tasync updateIcon(id: number, userInitiated: boolean, icon: URI | { light: URI; dark: URI } | { id: string; color?: { id: string } }, color?: string): Promise<void> {\n\t\tthis._throwIfNoPty(id).setIcon(userInitiated, icon, color);\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(id: number, type: T): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._throwIfNoPty(id).refreshProperty(type);\n\t}\n\n\tasync updateProperty<T extends ProcessPropertyType>(id: number, type: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\treturn this._throwIfNoPty(id).updateProperty(type, value);\n\t}\n\n\tasync detachFromProcess(id: number, forcePersist?: boolean): Promise<void> {\n\t\treturn this._throwIfNoPty(id).detach(forcePersist);\n\t}\n\n\tasync reduceConnectionGraceTime(): Promise<void> {\n\t\tfor (const pty of this._ptys.values()) {\n\t\t\tpty.reduceGraceTime();\n\t\t}\n\t}\n\n\tasync listProcesses(): Promise<IProcessDetails[]> {\n\t\tconst persistentProcesses = Array.from(this._ptys.entries()).filter(([_, pty]) => pty.shouldPersistTerminal);\n\n\t\tthis._logService.info(`Listing ${persistentProcesses.length} persistent terminals, ${this._ptys.size} total terminals`);\n\t\tconst promises = persistentProcesses.map(async ([id, terminalProcessData]) => this._buildProcessDetails(id, terminalProcessData));\n\t\tconst allTerminals = await Promise.all(promises);\n\t\treturn allTerminals.filter(entry => entry.isOrphan);\n\t}\n\n\tasync start(id: number): Promise<ITerminalLaunchError | undefined> {\n\t\tthis._logService.trace('ptyService#start', id);\n\t\tconst pty = this._ptys.get(id);\n\t\treturn pty ? pty.start() : { message: `Could not find pty with id \"${id}\"` };\n\t}\n\n\tasync shutdown(id: number, immediate: boolean): Promise<void> {\n\t\t// Don't throw if the pty is already shutdown\n\t\tthis._logService.trace('ptyService#shutDown', id, immediate);\n\t\treturn this._ptys.get(id)?.shutdown(immediate);\n\t}\n\tasync input(id: number, data: string): Promise<void> {\n\t\treturn this._throwIfNoPty(id).input(data);\n\t}\n\tasync processBinary(id: number, data: string): Promise<void> {\n\t\treturn this._throwIfNoPty(id).writeBinary(data);\n\t}\n\tasync resize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._throwIfNoPty(id).resize(cols, rows);\n\t}\n\tasync getInitialCwd(id: number): Promise<string> {\n\t\treturn this._throwIfNoPty(id).getInitialCwd();\n\t}\n\tasync getCwd(id: number): Promise<string> {\n\t\treturn this._throwIfNoPty(id).getCwd();\n\t}\n\tasync acknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._throwIfNoPty(id).acknowledgeDataEvent(charCount);\n\t}\n\tasync setUnicodeVersion(id: number, version: '6' | '11'): Promise<void> {\n\t\treturn this._throwIfNoPty(id).setUnicodeVersion(version);\n\t}\n\tasync getLatency(id: number): Promise<number> {\n\t\treturn 0;\n\t}\n\tasync orphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._throwIfNoPty(id).orphanQuestionReply();\n\t}\n\n\tasync installAutoReply(match: string, reply: string) {\n\t\tthis._autoReplies.set(match, reply);\n\t\t// If the auto reply exists on any existing terminals it will be overridden\n\t\tfor (const p of this._ptys.values()) {\n\t\t\tp.installAutoReply(match, reply);\n\t\t}\n\t}\n\tasync uninstallAllAutoReplies() {\n\t\tfor (const match of this._autoReplies.keys()) {\n\t\t\tfor (const p of this._ptys.values()) {\n\t\t\t\tp.uninstallAutoReply(match);\n\t\t\t}\n\t\t}\n\t}\n\tasync uninstallAutoReply(match: string) {\n\t\tfor (const p of this._ptys.values()) {\n\t\t\tp.uninstallAutoReply(match);\n\t\t}\n\t}\n\n\tasync getDefaultSystemShell(osOverride: OperatingSystem = OS): Promise<string> {\n\t\treturn getSystemShell(osOverride, process.env);\n\t}\n\n\tasync getEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn { ...process.env };\n\t}\n\n\tasync getWslPath(original: string): Promise<string> {\n\t\tif (!isWindows) {\n\t\t\treturn original;\n\t\t}\n\t\tif (getWindowsBuildNumber() < 17063) {\n\t\t\treturn original.replace(/\\\\/g, '/');\n\t\t}\n\t\treturn new Promise<string>(c => {\n\t\t\tconst proc = execFile('bash.exe', ['-c', `wslpath ${escapeNonWindowsPath(original)}`], {}, (error, stdout, stderr) => {\n\t\t\t\tc(escapeNonWindowsPath(stdout.trim()));\n\t\t\t});\n\t\t\tproc.stdin!.end();\n\t\t});\n\t}\n\n\tasync getRevivedPtyNewId(id: number): Promise<number | undefined> {\n\t\ttry {\n\t\t\treturn this._revivedPtyIdMap.get(id)?.newId;\n\t\t} catch (e) {\n\t\t\tthis._logService.warn(`Couldn't find terminal ID ${id}`, e.message);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync setTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void> {\n\t\tthis._logService.trace('ptyService#setLayoutInfo', args.tabs);\n\t\tthis._workspaceLayoutInfos.set(args.workspaceId, args);\n\t}\n\n\tasync getTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined> {\n\t\tconst layout = this._workspaceLayoutInfos.get(args.workspaceId);\n\t\tthis._logService.trace('ptyService#getLayoutInfo', args);\n\t\tif (layout) {\n\t\t\tconst expandedTabs = await Promise.all(layout.tabs.map(async tab => this._expandTerminalTab(tab)));\n\t\t\tconst tabs = expandedTabs.filter(t => t.terminals.length > 0);\n\t\t\tthis._logService.trace('ptyService#returnLayoutInfo', tabs);\n\t\t\treturn { tabs };\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _expandTerminalTab(tab: ITerminalTabLayoutInfoById): Promise<ITerminalTabLayoutInfoDto> {\n\t\tconst expandedTerminals = (await Promise.all(tab.terminals.map(t => this._expandTerminalInstance(t))));\n\t\tconst filtered = expandedTerminals.filter(term => term.terminal !== null) as IRawTerminalInstanceLayoutInfo<IProcessDetails>[];\n\t\treturn {\n\t\t\tisActive: tab.isActive,\n\t\t\tactivePersistentProcessId: tab.activePersistentProcessId,\n\t\t\tterminals: filtered\n\t\t};\n\t}\n\n\tprivate async _expandTerminalInstance(t: ITerminalInstanceLayoutInfoById): Promise<IRawTerminalInstanceLayoutInfo<IProcessDetails | null>> {\n\t\ttry {\n\t\t\tconst revivedPtyId = this._revivedPtyIdMap.get(t.terminal)?.newId;\n\t\t\tthis._revivedPtyIdMap.delete(t.terminal);\n\t\t\tconst persistentProcessId = revivedPtyId ?? t.terminal;\n\t\t\tconst persistentProcess = this._throwIfNoPty(persistentProcessId);\n\t\t\tconst processDetails = persistentProcess && await this._buildProcessDetails(t.terminal, persistentProcess, revivedPtyId !== undefined);\n\t\t\treturn {\n\t\t\t\tterminal: { ...processDetails, id: persistentProcessId },\n\t\t\t\trelativeSize: t.relativeSize\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthis._logService.warn(`Couldn't get layout info, a terminal was probably disconnected`, e.message);\n\t\t\t// this will be filtered out and not reconnected\n\t\t\treturn {\n\t\t\t\tterminal: null,\n\t\t\t\trelativeSize: t.relativeSize\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate async _buildProcessDetails(id: number, persistentProcess: PersistentTerminalProcess, wasRevived: boolean = false): Promise<IProcessDetails> {\n\t\t// If the process was just revived, don't do the orphan check as it will\n\t\t// take some time\n\t\tconst [cwd, isOrphan] = await Promise.all([persistentProcess.getCwd(), wasRevived ? true : persistentProcess.isOrphaned()]);\n\t\treturn {\n\t\t\tid,\n\t\t\ttitle: persistentProcess.title,\n\t\t\ttitleSource: persistentProcess.titleSource,\n\t\t\tpid: persistentProcess.pid,\n\t\t\tworkspaceId: persistentProcess.workspaceId,\n\t\t\tworkspaceName: persistentProcess.workspaceName,\n\t\t\tcwd,\n\t\t\tisOrphan,\n\t\t\ticon: persistentProcess.icon,\n\t\t\tcolor: persistentProcess.color,\n\t\t\tfixedDimensions: persistentProcess.fixedDimensions,\n\t\t\tenvironmentVariableCollections: persistentProcess.processLaunchOptions.options.environmentVariableCollections,\n\t\t\treconnectionProperties: persistentProcess.shellLaunchConfig.reconnectionProperties,\n\t\t\twaitOnExit: persistentProcess.shellLaunchConfig.waitOnExit,\n\t\t\thideFromUser: persistentProcess.shellLaunchConfig.hideFromUser,\n\t\t\tisFeatureTerminal: persistentProcess.shellLaunchConfig.isFeatureTerminal,\n\t\t\ttype: persistentProcess.shellLaunchConfig.type\n\t\t};\n\t}\n\n\tprivate _throwIfNoPty(id: number): PersistentTerminalProcess {\n\t\tconst pty = this._ptys.get(id);\n\t\tif (!pty) {\n\t\t\tthrow new ErrorNoTelemetry(`Could not find pty on pty host`);\n\t\t}\n\t\treturn pty;\n\t}\n}\n\nconst enum InteractionState {\n\t/** The terminal has not been interacted with. */\n\tNone = 'None',\n\t/** The terminal has only been interacted with by the replay mechanism. */\n\tReplayOnly = 'ReplayOnly',\n\t/** The terminal has been directly interacted with this session. */\n\tSession = 'Session'\n}\n\nexport class PersistentTerminalProcess extends Disposable {\n\n\tprivate readonly _bufferer: TerminalDataBufferer;\n\tprivate readonly _autoReplies: Map<string, TerminalAutoResponder> = new Map();\n\n\tprivate readonly _pendingCommands = new Map<number, { resolve: (data: any) => void; reject: (err: any) => void }>();\n\n\tprivate _isStarted: boolean = false;\n\tprivate _interactionState: MutationLogger<InteractionState>;\n\n\tprivate _orphanQuestionBarrier: AutoOpenBarrier | null;\n\tprivate _orphanQuestionReplyTime: number;\n\tprivate _orphanRequestQueue = new Queue<boolean>();\n\tprivate _disconnectRunner1: ProcessTimeRunOnceScheduler;\n\tprivate _disconnectRunner2: ProcessTimeRunOnceScheduler;\n\n\tprivate readonly _onProcessReplay = this._register(new Emitter<IPtyHostProcessReplayEvent>());\n\treadonly onProcessReplay = this._onProcessReplay.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<IProcessReadyEvent>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onPersistentProcessReady = this._register(new Emitter<void>());\n\t/** Fired when the persistent process has a ready process and has finished its replay. */\n\treadonly onPersistentProcessReady = this._onPersistentProcessReady.event;\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessOrphanQuestion = this._register(new Emitter<void>());\n\treadonly onProcessOrphanQuestion = this._onProcessOrphanQuestion.event;\n\tprivate readonly _onDidChangeProperty = this._register(new Emitter<IProcessProperty<any>>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\n\tprivate _inReplay = false;\n\n\tprivate _pid = -1;\n\tprivate _cwd = '';\n\tprivate _title: string | undefined;\n\tprivate _titleSource: TitleEventSource = TitleEventSource.Process;\n\tprivate _serializer: ITerminalSerializer;\n\tprivate _wasRevived: boolean;\n\tprivate _fixedDimensions: IFixedTerminalDimensions | undefined;\n\n\tget pid(): number { return this._pid; }\n\tget shellLaunchConfig(): IShellLaunchConfig { return this._terminalProcess.shellLaunchConfig; }\n\tget hasWrittenData(): boolean { return this._interactionState.value !== InteractionState.None; }\n\tget title(): string { return this._title || this._terminalProcess.currentTitle; }\n\tget titleSource(): TitleEventSource { return this._titleSource; }\n\tget icon(): TerminalIcon | undefined { return this._icon; }\n\tget color(): string | undefined { return this._color; }\n\tget fixedDimensions(): IFixedTerminalDimensions | undefined { return this._fixedDimensions; }\n\n\tsetTitle(title: string, titleSource: TitleEventSource): void {\n\t\tif (titleSource === TitleEventSource.Api) {\n\t\t\tthis._interactionState.setValue(InteractionState.Session, 'setTitle');\n\t\t\tthis._serializer.freeRawReviveBuffer();\n\t\t}\n\t\tthis._title = title;\n\t\tthis._titleSource = titleSource;\n\t}\n\n\tsetIcon(userInitiated: boolean, icon: TerminalIcon, color?: string): void {\n\t\tif (!this._icon || 'id' in icon && 'id' in this._icon && icon.id !== this._icon.id ||\n\t\t\t!this.color || color !== this._color) {\n\n\t\t\tthis._serializer.freeRawReviveBuffer();\n\t\t\tif (userInitiated) {\n\t\t\t\tthis._interactionState.setValue(InteractionState.Session, 'setIcon');\n\t\t\t}\n\t\t}\n\t\tthis._icon = icon;\n\t\tthis._color = color;\n\t}\n\n\tprivate _setFixedDimensions(fixedDimensions?: IFixedTerminalDimensions): void {\n\t\tthis._fixedDimensions = fixedDimensions;\n\t}\n\n\tconstructor(\n\t\tprivate _persistentProcessId: number,\n\t\tprivate readonly _terminalProcess: TerminalProcess,\n\t\treadonly workspaceId: string,\n\t\treadonly workspaceName: string,\n\t\treadonly shouldPersistTerminal: boolean,\n\t\tcols: number,\n\t\trows: number,\n\t\treadonly processLaunchOptions: IPersistentTerminalProcessLaunchConfig,\n\t\tpublic unicodeVersion: '6' | '11',\n\t\treconnectConstants: IReconnectConstants,\n\t\tprivate readonly _logService: ILogService,\n\t\treviveBuffer: string | undefined,\n\t\trawReviveBuffer: string | undefined,\n\t\tprivate _icon?: TerminalIcon,\n\t\tprivate _color?: string,\n\t\tname?: string,\n\t\tfixedDimensions?: IFixedTerminalDimensions\n\t) {\n\t\tsuper();\n\t\tthis._logService.trace('persistentTerminalProcess#ctor', _persistentProcessId, arguments);\n\t\tthis._interactionState = new MutationLogger(`Persistent process \"${this._persistentProcessId}\" interaction state`, InteractionState.None, this._logService);\n\t\tthis._wasRevived = reviveBuffer !== undefined;\n\t\tthis._serializer = new XtermSerializer(\n\t\t\tcols,\n\t\t\trows,\n\t\t\treconnectConstants.scrollback,\n\t\t\tunicodeVersion,\n\t\t\treviveBuffer,\n\t\t\tshouldPersistTerminal ? rawReviveBuffer : undefined,\n\t\t\tthis._logService\n\t\t);\n\t\tif (name) {\n\t\t\tthis.setTitle(name, TitleEventSource.Api);\n\t\t}\n\t\tthis._fixedDimensions = fixedDimensions;\n\t\tthis._orphanQuestionBarrier = null;\n\t\tthis._orphanQuestionReplyTime = 0;\n\t\tthis._disconnectRunner1 = this._register(new ProcessTimeRunOnceScheduler(() => {\n\t\t\tthis._logService.info(`Persistent process \"${this._persistentProcessId}\": The reconnection grace time of ${printTime(reconnectConstants.graceTime)} has expired, shutting down pid \"${this._pid}\"`);\n\t\t\tthis.shutdown(true);\n\t\t}, reconnectConstants.graceTime));\n\t\tthis._disconnectRunner2 = this._register(new ProcessTimeRunOnceScheduler(() => {\n\t\t\tthis._logService.info(`Persistent process \"${this._persistentProcessId}\": The short reconnection grace time of ${printTime(reconnectConstants.shortGraceTime)} has expired, shutting down pid ${this._pid}`);\n\t\t\tthis.shutdown(true);\n\t\t}, reconnectConstants.shortGraceTime));\n\t\tthis._register(this._terminalProcess.onProcessExit(() => this._bufferer.stopBuffering(this._persistentProcessId)));\n\t\tthis._register(this._terminalProcess.onProcessReady(e => {\n\t\t\tthis._pid = e.pid;\n\t\t\tthis._cwd = e.cwd;\n\t\t\tthis._onProcessReady.fire(e);\n\t\t}));\n\t\tthis._register(this._terminalProcess.onDidChangeProperty(e => {\n\t\t\tthis._onDidChangeProperty.fire(e);\n\t\t}));\n\n\t\t// Data buffering to reduce the amount of messages going to the renderer\n\t\tthis._bufferer = new TerminalDataBufferer((_, data) => this._onProcessData.fire(data));\n\t\tthis._register(this._bufferer.startBuffering(this._persistentProcessId, this._terminalProcess.onProcessData));\n\n\t\t// Data recording for reconnect\n\t\tthis._register(this.onProcessData(e => this._serializer.handleData(e)));\n\n\t\t// Clean up other disposables\n\t\tthis._register(toDisposable(() => {\n\t\t\tfor (const e of this._autoReplies.values()) {\n\t\t\t\te.dispose();\n\t\t\t}\n\t\t\tthis._autoReplies.clear();\n\t\t}));\n\t}\n\n\tasync attach(): Promise<void> {\n\t\tthis._logService.trace('persistentTerminalProcess#attach', this._persistentProcessId);\n\t\t// Something wrong happened if the disconnect runner is not canceled, this likely means\n\t\t// multiple windows attempted to attach.\n\t\tif (!await this._isOrphaned()) {\n\t\t\tthrow new Error(`Cannot attach to persistent process \"${this._persistentProcessId}\", it is already adopted`);\n\t\t}\n\t\tif (!this._disconnectRunner1.isScheduled() && !this._disconnectRunner2.isScheduled()) {\n\t\t\tthis._logService.warn(`Persistent process \"${this._persistentProcessId}\": Process had no disconnect runners but was an orphan`);\n\t\t}\n\t\tthis._disconnectRunner1.cancel();\n\t\tthis._disconnectRunner2.cancel();\n\t}\n\n\tasync detach(forcePersist?: boolean): Promise<void> {\n\t\tthis._logService.trace('persistentTerminalProcess#detach', this._persistentProcessId, forcePersist);\n\t\t// Keep the process around if it was indicated to persist and it has had some iteraction or\n\t\t// was replayed\n\t\tif (this.shouldPersistTerminal && (this._interactionState.value !== InteractionState.None || forcePersist)) {\n\t\t\tthis._disconnectRunner1.schedule();\n\t\t} else {\n\t\t\tthis.shutdown(true);\n\t\t}\n\t}\n\n\tserializeNormalBuffer(): Promise<IPtyHostProcessReplayEvent> {\n\t\treturn this._serializer.generateReplayEvent(true, this._interactionState.value !== InteractionState.Session);\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(type: T): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._terminalProcess.refreshProperty(type);\n\t}\n\n\tasync updateProperty<T extends ProcessPropertyType>(type: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\tif (type === ProcessPropertyType.FixedDimensions) {\n\t\t\treturn this._setFixedDimensions(value as IProcessPropertyMap[ProcessPropertyType.FixedDimensions]);\n\t\t}\n\t}\n\n\tasync start(): Promise<ITerminalLaunchError | undefined> {\n\t\tthis._logService.trace('persistentTerminalProcess#start', this._persistentProcessId, this._isStarted);\n\t\tif (!this._isStarted) {\n\t\t\tconst result = await this._terminalProcess.start();\n\t\t\tif (result) {\n\t\t\t\t// it's a terminal launch error\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthis._isStarted = true;\n\n\t\t\t// If the process was revived, trigger a replay on first start. An alternative approach\n\t\t\t// could be to start it on the pty host before attaching but this fails on Windows as\n\t\t\t// conpty's inherit cursor option which is required, ends up sending DSR CPR which\n\t\t\t// causes conhost to hang when no response is received from the terminal (which wouldn't\n\t\t\t// be attached yet). https://github.com/microsoft/terminal/issues/11213\n\t\t\tif (this._wasRevived) {\n\t\t\t\tthis.triggerReplay();\n\t\t\t} else {\n\t\t\t\tthis._onPersistentProcessReady.fire();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._onProcessReady.fire({ pid: this._pid, cwd: this._cwd, requiresWindowsMode: isWindows && getWindowsBuildNumber() < 21376 });\n\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.Title, value: this._terminalProcess.currentTitle });\n\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.ShellType, value: this._terminalProcess.shellType });\n\t\t\tthis.triggerReplay();\n\t\t}\n\t\treturn undefined;\n\t}\n\tshutdown(immediate: boolean): void {\n\t\treturn this._terminalProcess.shutdown(immediate);\n\t}\n\tinput(data: string): void {\n\t\tthis._interactionState.setValue(InteractionState.Session, 'input');\n\t\tthis._serializer.freeRawReviveBuffer();\n\t\tif (this._inReplay) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const listener of this._autoReplies.values()) {\n\t\t\tlistener.handleInput();\n\t\t}\n\t\treturn this._terminalProcess.input(data);\n\t}\n\twriteBinary(data: string): Promise<void> {\n\t\treturn this._terminalProcess.processBinary(data);\n\t}\n\tresize(cols: number, rows: number): void {\n\t\tif (this._inReplay) {\n\t\t\treturn;\n\t\t}\n\t\tthis._serializer.handleResize(cols, rows);\n\n\t\t// Buffered events should flush when a resize occurs\n\t\tthis._bufferer.flushBuffer(this._persistentProcessId);\n\n\t\tfor (const listener of this._autoReplies.values()) {\n\t\t\tlistener.handleResize();\n\t\t}\n\t\treturn this._terminalProcess.resize(cols, rows);\n\t}\n\tsetUnicodeVersion(version: '6' | '11'): void {\n\t\tthis.unicodeVersion = version;\n\t\tthis._serializer.setUnicodeVersion?.(version);\n\t\t// TODO: Pass in unicode version in ctor\n\t}\n\tacknowledgeDataEvent(charCount: number): void {\n\t\tif (this._inReplay) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._terminalProcess.acknowledgeDataEvent(charCount);\n\t}\n\tgetInitialCwd(): Promise<string> {\n\t\treturn this._terminalProcess.getInitialCwd();\n\t}\n\tgetCwd(): Promise<string> {\n\t\treturn this._terminalProcess.getCwd();\n\t}\n\tgetLatency(): Promise<number> {\n\t\treturn this._terminalProcess.getLatency();\n\t}\n\n\tasync triggerReplay(): Promise<void> {\n\t\tif (this._interactionState.value === InteractionState.None) {\n\t\t\tthis._interactionState.setValue(InteractionState.ReplayOnly, 'triggerReplay');\n\t\t}\n\t\tconst ev = await this._serializer.generateReplayEvent();\n\t\tlet dataLength = 0;\n\t\tfor (const e of ev.events) {\n\t\t\tdataLength += e.data.length;\n\t\t}\n\t\tthis._logService.info(`Persistent process \"${this._persistentProcessId}\": Replaying ${dataLength} chars and ${ev.events.length} size events`);\n\t\tthis._onProcessReplay.fire(ev);\n\t\tthis._terminalProcess.clearUnacknowledgedChars();\n\t\tthis._onPersistentProcessReady.fire();\n\t}\n\n\tinstallAutoReply(match: string, reply: string) {\n\t\tthis._autoReplies.get(match)?.dispose();\n\t\tthis._autoReplies.set(match, new TerminalAutoResponder(this._terminalProcess, match, reply, this._logService));\n\t}\n\n\tuninstallAutoReply(match: string) {\n\t\tconst autoReply = this._autoReplies.get(match);\n\t\tautoReply?.dispose();\n\t\tthis._autoReplies.delete(match);\n\t}\n\n\tsendCommandResult(reqId: number, isError: boolean, serializedPayload: any): void {\n\t\tconst data = this._pendingCommands.get(reqId);\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingCommands.delete(reqId);\n\t}\n\n\torphanQuestionReply(): void {\n\t\tthis._orphanQuestionReplyTime = Date.now();\n\t\tif (this._orphanQuestionBarrier) {\n\t\t\tconst barrier = this._orphanQuestionBarrier;\n\t\t\tthis._orphanQuestionBarrier = null;\n\t\t\tbarrier.open();\n\t\t}\n\t}\n\n\treduceGraceTime(): void {\n\t\tif (this._disconnectRunner2.isScheduled()) {\n\t\t\t// we are disconnected and already running the short reconnection timer\n\t\t\treturn;\n\t\t}\n\t\tif (this._disconnectRunner1.isScheduled()) {\n\t\t\t// we are disconnected and running the long reconnection timer\n\t\t\tthis._disconnectRunner2.schedule();\n\t\t}\n\t}\n\n\tasync isOrphaned(): Promise<boolean> {\n\t\treturn await this._orphanRequestQueue.queue(async () => this._isOrphaned());\n\t}\n\n\tprivate async _isOrphaned(): Promise<boolean> {\n\t\t// The process is already known to be orphaned\n\t\tif (this._disconnectRunner1.isScheduled() || this._disconnectRunner2.isScheduled()) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ask whether the renderer(s) whether the process is orphaned and await the reply\n\t\tif (!this._orphanQuestionBarrier) {\n\t\t\t// the barrier opens after 4 seconds with or without a reply\n\t\t\tthis._orphanQuestionBarrier = new AutoOpenBarrier(4000);\n\t\t\tthis._orphanQuestionReplyTime = 0;\n\t\t\tthis._onProcessOrphanQuestion.fire();\n\t\t}\n\n\t\tawait this._orphanQuestionBarrier.wait();\n\t\treturn (Date.now() - this._orphanQuestionReplyTime > 500);\n\t}\n}\n\nclass MutationLogger<T> {\n\tget value(): T { return this._value; }\n\tsetValue(value: T, reason: string) {\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tthis._log(reason);\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _name: string,\n\t\tprivate _value: T,\n\t\tprivate readonly _logService: ILogService\n\t) {\n\t\tthis._log('initialized');\n\t}\n\n\tprivate _log(reason: string): void {\n\t\tthis._logService.debug(`MutationLogger \"${this._name}\" set to \"${this._value}\", reason: ${reason}`);\n\t}\n}\n\nclass XtermSerializer implements ITerminalSerializer {\n\tprivate readonly _xterm: XtermTerminal;\n\tprivate readonly _shellIntegrationAddon: ShellIntegrationAddon;\n\tprivate _unicodeAddon?: XtermUnicode11Addon;\n\n\tconstructor(\n\t\tcols: number,\n\t\trows: number,\n\t\tscrollback: number,\n\t\tunicodeVersion: '6' | '11',\n\t\treviveBufferWithRestoreMessage: string | undefined,\n\t\tprivate _rawReviveBuffer: string | undefined,\n\t\tlogService: ILogService\n\t) {\n\t\tthis._xterm = new XtermTerminal({\n\t\t\tcols,\n\t\t\trows,\n\t\t\tscrollback,\n\t\t\tallowProposedApi: true\n\t\t});\n\t\tif (reviveBufferWithRestoreMessage) {\n\t\t\tthis._xterm.writeln(reviveBufferWithRestoreMessage);\n\t\t}\n\t\tthis.setUnicodeVersion(unicodeVersion);\n\t\tthis._shellIntegrationAddon = new ShellIntegrationAddon(true, undefined, logService);\n\t\tthis._xterm.loadAddon(this._shellIntegrationAddon);\n\t}\n\n\tfreeRawReviveBuffer(): void {\n\t\t// Free the memory of the terminal if it will need to be re-serialized\n\t\tthis._rawReviveBuffer = undefined;\n\t}\n\n\thandleData(data: string): void {\n\t\tthis._xterm.write(data);\n\t}\n\n\thandleResize(cols: number, rows: number): void {\n\t\tthis._xterm.resize(cols, rows);\n\t}\n\n\tasync generateReplayEvent(normalBufferOnly?: boolean, restoreToLastReviveBuffer?: boolean): Promise<IPtyHostProcessReplayEvent> {\n\t\tconst serialize = new (await this._getSerializeConstructor());\n\t\tthis._xterm.loadAddon(serialize);\n\t\tconst options: ISerializeOptions = {\n\t\t\tscrollback: this._xterm.options.scrollback\n\t\t};\n\t\tif (normalBufferOnly) {\n\t\t\toptions.excludeAltBuffer = true;\n\t\t\toptions.excludeModes = true;\n\t\t}\n\t\tlet serialized: string;\n\t\tif (restoreToLastReviveBuffer && this._rawReviveBuffer) {\n\t\t\tserialized = this._rawReviveBuffer;\n\t\t} else {\n\t\t\tserialized = serialize.serialize(options);\n\t\t}\n\t\treturn {\n\t\t\tevents: [\n\t\t\t\t{\n\t\t\t\t\tcols: this._xterm.cols,\n\t\t\t\t\trows: this._xterm.rows,\n\t\t\t\t\tdata: serialized\n\t\t\t\t}\n\t\t\t],\n\t\t\tcommands: this._shellIntegrationAddon.serialize()\n\t\t};\n\t}\n\n\tasync setUnicodeVersion(version: '6' | '11'): Promise<void> {\n\t\tif (this._xterm.unicode.activeVersion === version) {\n\t\t\treturn;\n\t\t}\n\t\tif (version === '11') {\n\t\t\tthis._unicodeAddon = new (await this._getUnicode11Constructor());\n\t\t\tthis._xterm.loadAddon(this._unicodeAddon);\n\t\t} else {\n\t\t\tthis._unicodeAddon?.dispose();\n\t\t\tthis._unicodeAddon = undefined;\n\t\t}\n\t\tthis._xterm.unicode.activeVersion = version;\n\t}\n\n\tasync _getUnicode11Constructor(): Promise<typeof Unicode11Addon> {\n\t\tif (!Unicode11Addon) {\n\t\t\tUnicode11Addon = (await import('xterm-addon-unicode11')).Unicode11Addon;\n\t\t}\n\t\treturn Unicode11Addon;\n\t}\n\n\tasync _getSerializeConstructor(): Promise<typeof SerializeAddon> {\n\t\tif (!SerializeAddon) {\n\t\t\tSerializeAddon = (await import('xterm-addon-serialize')).SerializeAddon;\n\t\t}\n\t\treturn SerializeAddon;\n\t}\n}\n\nfunction printTime(ms: number): string {\n\tlet h = 0;\n\tlet m = 0;\n\tlet s = 0;\n\tif (ms >= 1000) {\n\t\ts = Math.floor(ms / 1000);\n\t\tms -= s * 1000;\n\t}\n\tif (s >= 60) {\n\t\tm = Math.floor(s / 60);\n\t\ts -= m * 60;\n\t}\n\tif (m >= 60) {\n\t\th = Math.floor(m / 60);\n\t\tm -= h * 60;\n\t}\n\tconst _h = h ? `${h}h` : ``;\n\tconst _m = m ? `${m}m` : ``;\n\tconst _s = s ? `${s}s` : ``;\n\tconst _ms = ms ? `${ms}ms` : ``;\n\treturn `${_h}${_m}${_s}${_ms}`;\n}\n\nexport interface ITerminalSerializer {\n\thandleData(data: string): void;\n\tfreeRawReviveBuffer(): void;\n\thandleResize(cols: number, rows: number): void;\n\tgenerateReplayEvent(normalBufferOnly?: boolean, restoreToLastReviveBuffer?: boolean): Promise<IPtyHostProcessReplayEvent>;\n\tsetUnicodeVersion?(version: '6' | '11'): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { OPTIONS, parseArgs } from 'vs/platform/environment/node/argv';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ConsoleLogger, getLogLevel, LogService, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { LogLevelChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IReconnectConstants, TerminalIpcChannels, TerminalLogConstants } from 'vs/platform/terminal/common/terminal';\nimport { HeartbeatService } from 'vs/platform/terminal/node/heartbeatService';\nimport { PtyService } from 'vs/platform/terminal/node/ptyService';\n\nconst server = new Server('ptyHost');\n\nconst lastPtyId = parseInt(process.env.VSCODE_LAST_PTY_ID || '0');\ndelete process.env.VSCODE_LAST_PTY_ID;\n\n// Logging\nconst productService: IProductService = { _serviceBrand: undefined, ...product };\nconst environmentService = new NativeEnvironmentService(parseArgs(process.argv, OPTIONS), productService);\nconst logService = new LogService(new MultiplexLogService([\n\tnew ConsoleLogger(),\n\tnew SpdLogLogger(TerminalLogConstants.FileName, join(environmentService.logsPath, `${TerminalLogConstants.FileName}.log`), true, false, getLogLevel(environmentService))\n]));\nconst logLevelChannel = new LogLevelChannel(logService);\nserver.registerChannel(TerminalIpcChannels.Log, logLevelChannel);\n\nconst heartbeatService = new HeartbeatService();\nserver.registerChannel(TerminalIpcChannels.Heartbeat, ProxyChannel.fromService(heartbeatService));\n\nconst reconnectConstants: IReconnectConstants = {\n\tgraceTime: parseInt(process.env.VSCODE_RECONNECT_GRACE_TIME || '0'),\n\tshortGraceTime: parseInt(process.env.VSCODE_RECONNECT_SHORT_GRACE_TIME || '0'),\n\tscrollback: parseInt(process.env.VSCODE_RECONNECT_SCROLLBACK || '100')\n};\ndelete process.env.VSCODE_RECONNECT_GRACE_TIME;\ndelete process.env.VSCODE_RECONNECT_SHORT_GRACE_TIME;\ndelete process.env.VSCODE_RECONNECT_SCROLLBACK;\n\nconst ptyService = new PtyService(lastPtyId, logService, productService, reconnectConstants);\nserver.registerChannel(TerminalIpcChannels.PtyHost, ProxyChannel.fromService(ptyService));\n\nprocess.once('exit', () => {\n\tlogService.dispose();\n\theartbeatService.dispose();\n\tptyService.dispose();\n});\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","createDecorator","mapFn","target","key","descriptor","fnKey","fn","exports","memoize","_target","memoizeKey","args","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","throttle","lastRunKey","pendingKey","nextTime","ErrorHandler","e","ErrorNoTelemetry","listener","newUnexpectedErrorHandler","setUnexpectedErrorHandler","onUnexpectedError","isCancellationError","onUnexpectedExternalError","transformErrorForSerialization","error","name","message","stack","canceledName","CancellationError","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","NotImplementedError","NotSupportedError","ExpectedError","msg","BugIndicatingError","tail","array","n","tail2","arr","equals","one","other","itemEquals","a","b","removeFastWithoutKeepingOrder","index","last","binarySearch","comparator","binarySearch2","length","compareToKey","low","high","mid","comp","findFirstInSorted","p","quickSelect","nth","data","compare","pivotValue","lower","higher","pivots","value","val","groupBy","currentGroup","element","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","delta","splices","removed","added","splice","top","topStep","topAsync","batch","token","resolve","reject","o","m","errors_1","j","coalesce","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","isNonEmptyArray","distinct","keyFn","seen","uniqueFilter","findLast","predicate","idx","lastIndex","firstOrDefault","notFoundValue","lastOrDefault","commonPrefixLength","flatten","range","arg","indexer","mapper","r","t","insert","remove","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","temp","pushToStart","pushToEnd","pushMany","items","item","mapArrayOrNot","asArray","getRandomElement","mapFind","mapped","insertInto","newItems","startIdx","getActualStartIndex","originalLength","newItemsLength","CompareResult","isLessThan","isGreaterThan","isNeitherLessOrGreaterThan","compareBy","selector","tieBreakComparators","comparators","item1","item2","numberComparator","findMaxBy","max","findLastMaxBy","findMinBy","ArrayQueue","endIdx","count","CallbackIterable","iterate","handler","cb","first","_callback","once","_this","didCall","Iterable","is","thing","_empty","empty","single","iterable","isEmpty","some","find","filter","map","concat","iterables","concatNested","reduce","initialValue","forEach","slice","consume","atMost","consumed","iterator","next","collect","at","bt","ai","bi","an","bn","Lazy","executor","f","TRACK_DISPOSABLES","disposableTracker","setDisposableTracker","tracker","__is_disposable_tracked__","child","parent","Disposable","disposable","trackDisposable","markAsDisposed","setParentOfDisposable","setParentOfDisposables","children","markAsSingleton","singleton","isDisposable","dispose","iterator_1","errors","d","disposeIfDisposable","disposables","combinedDisposable","toDisposable","self","functional_1","DisposableStore","MutableDisposable","oldValue","RefCountedDisposable","_disposable","SafeDisposable","callback","ReferenceCollection","reference","object","AsyncReferenceCollection","referenceCollection","ref","ImmortalReference","disposeOnReturn","store","Node","LinkedList","node","atTheEnd","newNode","oldLast","oldFirst","didRemove","res","anchor","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_locale","_language","_translationsConfigFile","_userAgent","nodeProcess","isElectronProcess","isElectronRenderer","el","rawNlsConfig","nlsConfig","resolved","Platform","PlatformToString","platform","_platform","Language","isDefaultVariant","isDefault","pending","candidate","lastId","myId","OperatingSystem","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","safeProcess","platform_1","sandboxProcess","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","type","validateString","isPathSeparator","code","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","sep","pathObject","dir","base","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","process","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","ext","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","trailingSeparator","hasRoot","Source","TerminateResponseCode","sanitizeProcessEnvironment","env","preserve","set","keysToRemove","envKey","removeDangerousEnvVariables","hasPerformanceNow","StopWatch","highResolution","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","lifecycle_1","_addLeakageTraceLogic","options","origListenerDidAdd","Stacktrace","event","thisArgs","didFire","snapshot","each","signal","any","events","merge","initial","output","emitter","Emitter","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","firstCall","cache","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","runAndSubscribe","runAndSubscribeWithStore","run","EmitterObserver","obs","_observable","_change","fromObservable","EventProfiling","listenerCount","stopwatch_1","elapsed","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","LeakageMonitor","customThreshold","threshold","topStack","topCount","Listener","callbackThis","listeners","linkedList_1","firstListener","removeMonitor","removeListener","PrivateEventDeliveryQueue","EventDeliveryQueue","EventDeliveryQueueElement","newQueue","AsyncEmitter","promiseJoin","thenables","values","PauseableEmitter","DebounceEmitter","MicrotaskEmitter","EventMultiplexer","EventBufferer","Relay","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","event_1","CancellationTokenSource","cancel","Cache","task","cts","cancellation_1","promise","LRUCachedFunction","CachedFunction","isReadable","isReadableStream","isReadableBufferedStream","newWriteableStream","WriteableStreamImpl","fullDataBuffer","pendingWritePromises","pendingWritePromise","consumeReadable","readable","chunks","chunk","peekReadable","maxChunks","lastReadChunk","consumeStream","stream","listenStream","destroyed","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","emptyStream","toReadable","transform","transformer","prefixedReadable","prefix","prefixHandled","prefixedStream","hasBuffer","textEncoder","textDecoder","VSBuffer","byteLength","source","buffers","totalLength","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","readUInt16LE","writeUInt16LE","destination","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","newWriteableBufferStream","prefixedBufferReadable","prefixedBufferStream","decodeBase64","encoded","building","remainder","bufi","append","unpadded","base64Alphabet","base64UrlSafeAlphabet","encodeBase64","padded","urlSafe","dictionary","c","isFalsyOrWhitespace","str","_formatRegexp","format","match","group","_format2Regexp","format2","template","escape","html","escapeRegExpCharacters","character","ch","truncate","maxLength","suffix","trim","haystack","needle","trimmed","ltrim","rtrim","needleLen","haystackLen","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","modifiers","regExpLeadsToEndlessLoop","regexp","regExpContainsBackreference","regexpValue","regExpFlags","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","replaceAsync","search","replacer","parts","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","CodePointIterator","codePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","initialOffset","graphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","endOffset","charCount","CONTAINS_RTL","makeContainsRtl","containsRTL","IS_BASIC_ASCII","isBasicASCII","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","startsWithUTF8BOM","stripUTF8BOM","fuzzyContains","query","queryLen","targetLower","lastIndexOf","indexOf","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","getNLines","singleLetterHash","getGraphemeBreakType","breakTypeA","breakTypeB","GraphemeBreakType","getGraphemeBreakRawData","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","getOffsetBeforeLastEmojiComponent","isEmojiModifier","resultOffset","CodePoint","AmbiguousCharacters","locales","confusableDictionary","lazy_1","cache_1","arrayToMap","mergeMaps","map1","map2","intersectMaps","_a","filteredLocales","l","languageSpecificMap","locale","commonMap","k","InvisibleCharacters","getOrSet","mapToString","entries","setToString","StringIterator","aCode","thisCode","ConfigKeysIterator","_caseSensitive","justSeps","strings_1","PathIterator","_splitOnBackslash","pos","UriIteratorState","UriIterator","_ignorePathCasing","_ignoreQueryAndFragment","TernarySearchTreeNode","tmp","Dir","TernarySearchTree","ignorePathCasing","ignoreQueryAndFragment","segments","keys","arrays_1","entry","iter","oldElement","bf","d1","d2","superStr","min","segment","newChild","bucket","nodeIsBalanced","ResourceMapEntry","uri","ResourceMap","mapOrKeyFn","toKey","resource","clb","thisArg","_","ResourceSet","entriesOrKey","_b","callbackfn","_value","Touch","LinkedMap","_c","touch","state","current","newSize","currentSize","previous","LRUCache","limit","ratio","nfcCache","map_1","normalizeNFC","normalize","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","regex","isString","isStringArray","elem","isObject","isTypedArray","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","isUndefinedOrNull","assertType","condition","assertIsDefined","assertAllDefined","hasOwnProperty","isEmptyObject","isFunction","areFunctions","objects","validateConstraints","constraints","validateConstraint","constraint","withNullAsUndefined","withUndefinedAsNull","toSlashes","osPath","path_1","toPosixPath","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","ignoreCase","identityEquals","isEqualOrParent","parentCandidate","sepOffset","char0","sanitizeFilePath","cwd","isRootOrDriveLetter","pathNormalized","hasDriveLetter","getDriveLetter","indexOfPath","parseLineAndColumnAware","rawPath","line","column","segmentAsNumber","types_1","pathChars","randomPath","randomLength","randomFileName","deepClone","deepFreeze","_hasOwnProperty","prop","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","oneKeys","otherKeys","safeStringify","baseValue","targetValue","getCaseInsensitive","lowercaseKey","equivalentKey","getAllPropertyNames","proto","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","schemeOrData","authority","fragment","uriToFsPath","change","Uri","percentDecode","components","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","isRemoteConsoleLog","parse","parsedArguments","stackArgument","getFirstFrame","arg0","topFrame","findFirstFrame","matches","uri_1","newlineIndex","log","label","isOneStringArg","consoleArgs","color","stringify","revive","depth","buffer_1","Schemas","RemoteAuthoritiesImpl","schema","delegate","serverRootPath","host","port","connectionToken","FileAccessImpl","uriOrModule","moduleIdToUrl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","originalFSPath","ExtUri","uri1","uri2","ignoreFragment","network_1","extpath","dirname","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","fsp","isRootSep","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","parseMetaData","dataUri","metadata","property","mime","toLocalResource","localScheme","isThenable","createCancelablePromise","thenable","onfinally","raceCancellation","defaultValue","raceCancellationError","raceCancellablePromises","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","promiseFactory","onComplete","Sequencer","promiseTask","SequencerByKey","newPromise","timeoutDeferred","scheduled","microtaskDeferred","Delayer","defaultDelay","ThrottledDelayer","Barrier","AutoOpenBarrier","autoOpenTimeMs","millis","disposableTimeout","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","firstParallel","promiseList","todo","finish","Limiter","maxDegreeOfParalellism","iLimitedTask","Queue","ResourceQueue","DeferredPromise","queue","extUri","resources_1","drainer","TimeoutTimer","runner","IntervalTimer","interval","RunOnceScheduler","ProcessTimeRunOnceScheduler","RunOnceWorker","unit","units","ThrottledWorker","IdleValue","retry","retries","lastError","TaskSequentializer","taskId","onCancel","promiseReject","IntervalCounter","nowFn","now","Promises","settled","firstError","withAsyncBody","bodyFn","AsyncIterableSourceState","AsyncIterableObject","writer","filterFn","CancelableAsyncIterableObject","_source","createCancelableAsyncIterable","innerIterable","RimRafMode","rimraf","mode","extpath_1","rimrafUnlink","rimrafMove","pathInTemp","os_1","fs","util_1","rimrafSync","readdir","handleDirectoryChildren","safeReaddirWithFileTypes","isFile","isDirectory","isSymbolicLink","lstat","readdirSync","normalization_1","readDirsInDir","dirPath","directories","SymlinkSupport","whenDeleted","intervalMs","running","stat","lstats","existsFile","symbolicLink","existsDirectory","writeQueues","async_1","writeFile","ensuredOptions","ensureWriteOptions","doWriteFileAndFlush","canFlush","configureFlushOnWrite","enabled","openError","fd","writeError","syncError","closeError","writeFileSync","copy","doCopy","COPY_MODE_MASK","payload","doCopySymlink","doCopyDirectory","doCopyFile","files","file","linkTarget","position","bytesRead","bytesWritten","IntRegex","PwshMsixRegex","PwshPreviewMsixRegex","Arch","processArch","osArch","PossiblePowerShellExe","exePath","displayName","knownToExist","pfs","getProgramFilesPath","useAlternateBitness","findPSCoreWindowsInstallation","findPreview","programFilesPath","powerShellInstallBaseDir","highestSeenVersion","pwshExePath","currentVersion","dashIndex","intPart","bitness","preview","findPSCoreMsix","msixAppDir","pwshMsixDirRegex","pwshMsixName","subdir","pwshMsixPath","findPSCoreDotnetGlobalTool","dotnetGlobalToolExePath","os","findWinPS","winPSPath","enumerateDefaultPowerShellInstallations","pwshExe","enumeratePowerShellInstallations","defaultPwsh","getFirstAvailablePowerShellInstallation","pwsh","processes_1","getWindowsShell","createQueuedSender","childProcess","msgQueue","useQueue","send","msgQueueCopy","win32","findExecutable","command","Types","fileExists","statValue","pathEntry","fullPath","withExtension","listProcesses","rootPid","rootItem","addToTree","pid","ppid","cmd","load","mem","findName","SHARED_PROCESS_HINT","ISSUE_REPORTER_HINT","PROCESS_EXPLORER_HINT","UTILITY_NETWORK_HINT","UTILITY_EXTENSION_HOST_HINT","WINDOWS_CRASH_REPORTER","WINDOWS_PTY","WINDOWS_CONSOLE_HOST","TYPE","JS","cleanUNCPrefix","resolve_1","reject_1","require","windowsProcessTree","processList","completeProcessList","processItems","commandLine","calculateLinuxCpuUsage","processes","pids","child_process_1","stdout","stderr","cpuUsage","processInfo","parsePsOutput","ps","PID_CMD","lines","getSystemShell","getSystemShellWindows","getSystemShellUnixLike","getSystemShellSync","getSystemShellWindowsSync","_TERMINAL_DEFAULT_SHELL_UNIX_LIKE","unixLikeTerminal","_TERMINAL_DEFAULT_SHELL_WINDOWS","powershell_1","isAtLeastWindows10","is32ProcessOn64Windows","powerShellPath","RequestType","requestTypeToStr","ResponseType","responseTypeToStr","State","BufferReader","bytes","BufferWriter","DataType","createSizeBuffer","size","readSizeBuffer","reader","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","logger","timeoutDelay","channelName","channel","response","msgLength","header","body","request","cancellationTokenSource","pendingRequests","requests","RequestInitiator","ChannelClient","that","cancellationToken","doRequest","uninitializedPromise","cancellationTokenListener","__decorate","decorators_1","IPCServer","onDidClientConnect","onDidClientDisconnect","channelServer","channelClient","connection","routerOrClientFilter","connectionPromise","channelPromise","getDelayedChannel","clientFilter","eventMultiplexer","onDidAddConnection","onDidRemoveConnection","IPCClient","ipcLogger","relay","getNextTickChannel","didTick","StaticRouter","hub","ProxyChannel","fromService","service","disableMarshalling","mapEventNameToEvent","propertyIsEvent","eventImpl","propertyIsDynamicEvent","marshalling_1","toService","propKey","methodArgs","strings","colorTables","prettyWithoutArrays","pretty","logWithColors","direction","req","initiator","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","requestId","Server","ipc_1","Client","modulePath","forkOpts","objects_1","processes_2","onMessageEmitter","console_1","sender","onMessage","onExit","nls","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","useFullTimeWords","seconds","nls_1","toLocalISOString","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","toErrorMessage","arrays","types","detail","isErrorWithActions","createErrorWithActions","messageOrError","actions","AbstractNativeEnvironmentService","date_1","vscodePortable","process_1","cliBuiltinExtensionsDir","cliExtensionsDownloadDir","cliExtensionsDir","vscodeExtensions","extensionDevelopmentPaths","extensionDevelopmentPath","kind","extensionTestsPath","disableExtensions","parseExtensionHostPort","_args","productService","isBuild","parseDebugParams","parseSearchPort","parsePtyHostPort","debugArg","debugBrkArg","defaultBuildPort","debugId","environmentString","brk","helpCategories","ignoringReporter","parseArgs","errorReporter","alias","string","boolean","optionId","parsedArgs","minimist","cleanedArgs","remainingArgs","deprecatedId","sanitized","v","formatUsage","option","formatOptions","columns","usageTexts","usageText","argLength","ut","descriptionColumns","usage","wrappedDescription","wrapText","keyPadding","indent","buildHelpMessage","productName","executableName","version","capabilities","inputFiles","help","optionsByCategory","optionsByCat","helpCategoryKey","categoryOptions","buildVersionMessage","commit","getUserDataPath","cliArgs","userDataPath","doGetUserDataPath","pathsToResolve","portablePath","appDataPath","cliPath","userProfile","NativeEnvironmentService","environmentService_1","userDataPath_1","_util","getServiceDependencies","ctor","storeServiceDependency","serviceId","refineServiceDecorator","serviceIdentifier","instantiation_1","isFileOpenForWriteOptions","FileType","FilePermission","FileSystemProviderCapabilities","hasReadWriteCapability","provider","hasFileFolderCopyCapability","hasFileCloneCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","hasFileAtomicReadCapability","FileSystemProviderErrorCode","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","ensureFileSystemProviderError","toFileSystemProviderErrorCode","toFileOperationResult","FileOperationError","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","entriesByType","hasTypesFilter","isParent","fileOperationResult","NotModifiedSinceFileOperationError","FileOperationResult","FileKind","etag","whenProviderRegistered","fileService","ByteSize","getPlatformLimits","arch","LogLevel","level","AbstractLogger","AbstractMessageLogger","logAlways","ConsoleMainLogger","logLevel","ConsoleLogger","AdapterLogger","adapter","errorMessage_1","MultiplexLogService","logServices","logService","LogService","AbstractLoggerService","onDidChangeLogLevel","NullLogService","getLogLevel","environmentService","parseLogLevel","LogLevelToString","LogLevelChannel","LogLevelChannelClient","LoggerChannel","loggerService","consoleFn","log_1","messages","LoggerChannelClient","Logger","loggerOptions","FollowerLogService","createSpdLogLogger","logfilePath","filesize","filecount","donotUseFormatters","_spdlog","SpdLogLogger","filepath","rotating","files_1","product","configuration","rootPath","pkg","BufferMarkCapability","_terminal","properties","marker","CommandDetectionCapability","_logService","baseY","rowsDifference","potentialShiftedLineCount","shiftedY","cursorX","cursorY","totalDelay","y","commandExecutedLine","continuation","startColumn","exitCode","lastCommand","timestamp","executedMarker","endMarker","newCommand","getOutputForCommand","outputMatcher","getOutputMatchForCommand","commands","serialized","__param","startLine","endLine","cols","matcher","linesToCheck","countNewLines","wrappedLineStart","wrappedLineEnd","getXtermLineContent","lineStart","lineEnd","maxLineLength","content","CwdDetectionCapability","didChange","Constants","PartialCommandDetectionCapability","TerminalCapabilityStore","capability","impl","TerminalCapabilityStoreMultiplexer","RequestStore","tokenSource","resolveRequest","TerminalSettingPrefix","TerminalSettingId","TerminalLogConstants","PosixShellType","WindowsShellType","TitleEventSource","TerminalIpcChannels","ProcessPropertyType","HeartbeatConstants","TerminalLocation","TerminalLocationString","LocalReconnectConstants","FlowControlConstants","ProfileSource","ShellIntegrationStatus","TerminalExitReason","TerminalAutoResponder","proc","matchWord","TerminalDataBufferer","throttleBy","timeoutId","escapeNonWindowsPath","bannedChars","collapseTildePath","userHome","normalizedUserHome","formatMessageForTerminal","ShellIntegrationOscPs","VSCodeOscPt","ITermOscPt","ShellIntegrationAddon","_disableTelemetry","_telemetryService","terminalCapabilityStore_1","xterm","partialCommandDetectionCapability_1","didHandle","deserializeMessage","parseKeyValueAssignment","parseMarkSequence","cwdDetection","cwdDetectionCapability_1","terminal","commandDetection","commandDetectionCapability_1","bufferMarkDetection","bufferMarkCapability_1","deserializeRegex","deserialized","separatorIndex","hidden","ChildProcessMonitor","_pid","processItem","ps_1","spaceIndex","HeartbeatService","terminal_1","getWindowsBuildNumber","osVersion","buildNumber","exists","envPath","getShellIntegrationInjection","shellLaunchConfig","originalArgs","shell","appRoot","newArgs","envMixin","arePwshImpliedArgs","ShellIntegrationExecutable","arePwshLoginArgs","areZshBashLoginArgs","zdotdir","userZdotdir","filesToCopy","loginArgs","pwshImpliedArgs","SHELL_EXECUTABLES","WindowsShellHelper","_rootProcessId","title","tree","favouriteChild","executable","ShutdownConstants","posixShellTypeMap","TerminalProcess","rows","_executableEnv","_options","_productService","useConpty","terminalEnvironment_1","DelayedResizer","dimensions","windowsShellHelper_1","injection","fs_1","pfs_1","slc","envPaths","shellIntegrationInjection","ptyProcess","childProcessMonitor_1","sanitizedTitle","immediate","isBinary","newCwd","initialCwd","productService_1","SerializeAddon","Unicode11Addon","PtyService","_lastPtyId","_reconnectConstants","pty","requestStore_1","names","workspaceId","instanceId","persistentProcessId","processDetails","processesForPort","capturePid","processId","ids","persistentProcess","dateTimeFormatLocale","restoreMessage","newId","terminalStrings_1","unicodeVersion","executableEnv","shouldPersist","workspaceName","isReviving","rawReviveBuffer","terminalProcess_1","processLaunchOptions","PersistentTerminalProcess","titleSource","userInitiated","icon","forcePersist","persistentProcesses","terminalProcessData","reply","osOverride","shell_1","original","terminalEnvironment_2","layout","tabs","tab","filtered","term","revivedPtyId","wasRevived","isOrphan","InteractionState","fixedDimensions","_persistentProcessId","_terminalProcess","shouldPersistTerminal","reconnectConstants","reviveBuffer","_icon","_color","MutationLogger","XtermSerializer","printTime","terminalDataBuffering_1","ev","dataLength","terminalAutoResponder_1","reqId","isError","serializedPayload","barrier","reason","_name","scrollback","reviveBufferWithRestoreMessage","_rawReviveBuffer","xterm_headless_1","shellIntegrationAddon_1","normalBufferOnly","restoreToLastReviveBuffer","resolve_2","reject_2","ms","h","s","_h","_m","_s","_ms","server","ipc_cp_1","lastPtyId","product_1","argv_1","spdlogLog_1","logLevelChannel","logIpc_1","heartbeatService","heartbeatService_1","ptyService","ptyService_1"],"file":"ptyHostMain.js"}