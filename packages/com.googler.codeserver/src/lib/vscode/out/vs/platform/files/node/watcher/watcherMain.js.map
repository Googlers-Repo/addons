{"version":3,"sources":["out-vscode-reh-web/vs/platform/files/node/watcher/fake","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/decorators.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/errors.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/arrays.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/functional.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/iterator.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/lazy.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/lifecycle.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/linkedList.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/platform.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/process.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/path.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/processes.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/stopwatch.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/event.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/cancellation.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/cache.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/stream.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/strings.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/map.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/normalization.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/types.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/objects.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/uri.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/console.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/marshalling.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/glob.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/node/pfs.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/node/extpath.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/node/processes.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/base/common/errorMessage.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/common/files.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/common/watcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsWatcherLib.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsWatcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/node/watcher/parcel/parcelWatcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/vscode/code-server/lib/vscode/src/vs/platform/files/node/watcher/watcherMain.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'CodeExpectedError';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'CodeExpectedError';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// eslint-disable-next-line no-debugger\n\t\tdebugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => any = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function findLast<T>(arr: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = lastIndex(arr, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn arr[idx];\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function lastOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\n/**\n * @deprecated Use `[].flat()`\n */\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tconst result = array.splice(index, deleteCount);\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findMinBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findMaxBy(items, (a, b) => -comparator(a, b));\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: readonly T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable<T> {\n\tpublic static readonly empty = new CallbackIterable<never>(_callback => { });\n\n\tconstructor(\n\t\t/**\n\t\t * Calls the callback for every item.\n\t\t * Stops when the callback returns false.\n\t\t*/\n\t\tpublic readonly iterate: (callback: (item: T) => boolean) => void\n\t) {\n\t}\n\n\tforEach(handler: (item: T) => void) {\n\t\tthis.iterate(item => { handler(item); return true; });\n\t}\n\n\ttoArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tthis.iterate(item => { result.push(item); return true; });\n\t\treturn result;\n\t}\n\n\tfilter(predicate: (item: T) => boolean): CallbackIterable<T> {\n\t\treturn new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n\t}\n\n\tmap<TResult>(mapFn: (item: T) => TResult): CallbackIterable<TResult> {\n\t\treturn new CallbackIterable<TResult>(cb => this.iterate(item => cb(mapFn(item))));\n\t}\n\n\tsome(predicate: (item: T) => boolean): boolean {\n\t\tlet result = false;\n\t\tthis.iterate(item => { result = predicate(item); return !result; });\n\t\treturn result;\n\t}\n\n\tfindFirst(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLast(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLastMaxBy(comparator: Comparator<T>): T | undefined {\n\t\tlet result: T | undefined;\n\t\tlet first = true;\n\t\tthis.iterate(item => {\n\t\t\tif (first || CompareResult.isGreaterThan(comparator(item, result!))) {\n\t\t\t\tfirst = false;\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => unknown): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\texport function forEach<T>(iterable: Iterable<T>, fn: (t: T, index: number) => any): void {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tfn(element, index++);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function collect<T>(iterable: Iterable<T>): T[] {\n\t\treturn consume(iterable)[0];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A value that is resolved synchronously when it is first needed.\n */\nexport interface Lazy<T> {\n\n\thasValue(): boolean;\n\n\n\tgetValue(): T;\n\n\n\tmap<R>(f: (x: T) => R): Lazy<R>;\n}\n\nexport class Lazy<T> {\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\thasValue() { return this._didRun; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n\n\t/**\n\t * Create a new lazy value that is the result of applying `f` to the wrapped value.\n\t *\n\t * This does not force the evaluation of the current lazy value.\n\t */\n\tmap<R>(f: (x: T) => R): Lazy<R> {\n\t\treturn new Lazy<R>(() => f(this.getValue()));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nfunction markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new AggregateError(errors, 'Encountered errors while disposing of store');\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\nexport function disposeIfDisposable<T extends IDisposable | object>(disposables: Array<T>): Array<T> {\n\tfor (const d of disposables) {\n\t\tif (isDisposable(d)) {\n\t\t\td.dispose();\n\t\t}\n\t}\n\treturn [];\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: once(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Returns `true` if this object has been disposed\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable implements IDisposable {\n\n\tdispose: () => void = () => { };\n\tunset: () => void = () => { };\n\tisset: () => boolean = () => false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tset(fn: Function) {\n\t\tlet callback: Function | undefined = fn;\n\t\tthis.unset = () => callback = undefined;\n\t\tthis.isset = () => callback !== undefined;\n\t\tthis.dispose = () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = undefined;\n\t\t\t\tmarkAsDisposed(this);\n\t\t\t}\n\t\t};\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isMobile = _userAgent?.indexOf('Mobi') >= 0;\n\t_isWeb = true;\n\n\t_locale = LANGUAGE_DEFAULT;\n\n\t_language = _locale;\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals, INodeProcess, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isLinux, isMacintosh } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_(?!SHELL_LOGIN).+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t\t/^CODE_SERVER_.+$/,\n\t\t/^CS_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: IProcessEnvironment | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (isMacintosh) {\n\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/104525\n\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\tdelete env['DYLD_LIBRARY_PATH'];\n\t}\n\n\tif (isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, DisposableStore, IDisposable, SafeDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IObservable, IObserver } from 'vs/base/common/observable';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\n// _enableSnapshotPotentialLeakWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onListenerDidAdd: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onListenerDidAdd = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> extends IDisposable {\n\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tprivate readonly disposables = new DisposableStore();\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn, this.disposables));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn, this.disposables));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn, this.disposables));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial, this.disposables));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event, undefined, this.disposables));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold, this.disposables));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.disposables.dispose();\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => any): IDisposable {\n\t\thandler(undefined);\n\t\treturn event(e => handler(e));\n\t}\n\n\texport function runAndSubscribeWithStore<T>(event: Event<T>, handler: (e: T | undefined, disposableStore: DisposableStore) => any): IDisposable {\n\t\tlet store: DisposableStore | null = null;\n\n\t\tfunction run(e: T | undefined) {\n\t\t\tstore?.dispose();\n\t\t\tstore = new DisposableStore();\n\t\t\thandler(e, store);\n\t\t}\n\n\t\trun(undefined);\n\t\tconst disposable = event(e => run(e));\n\t\treturn toDisposable(() => {\n\t\t\tdisposable.dispose();\n\t\t\tstore?.dispose();\n\t\t});\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly obs: IObservable<T, any>, store: DisposableStore | undefined) {\n\t\t\tconst options = {\n\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\tobs.addObserver(this);\n\t\t\t\t},\n\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\tobs.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// console.assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservable<T, TChange>, _change: TChange): void {\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\tif (--this._counter === 0) {\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this.obs.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\texport function fromObservable<T>(obs: IObservable<T, any>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n}\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nexport class EventProfiling {\n\n\tstatic readonly all = new Set<EventProfiling>();\n\n\tprivate static _idPool = 0;\n\n\treadonly name: string;\n\tpublic listenerCount: number = 0;\n\tpublic invocationCount = 0;\n\tpublic elapsedOverall = 0;\n\tpublic durations: number[] = [];\n\n\tprivate _stopWatch?: StopWatch;\n\n\tconstructor(name: string) {\n\t\tthis.name = `${name}_${EventProfiling._idPool++}`;\n\t\tEventProfiling.all.add(this);\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis.listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis.durations.push(elapsed);\n\t\t\tthis.elapsedOverall += elapsed;\n\t\t\tthis.invocationCount += 1;\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\treturn new Stacktrace(new Error().stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\nclass Listener<T> {\n\n\treadonly subscription = new SafeDisposable();\n\n\tconstructor(\n\t\treadonly callback: (e: T) => void,\n\t\treadonly callbackThis: any | undefined,\n\t\treadonly stack: Stacktrace | undefined\n\t) { }\n\n\tinvoke(e: T) {\n\t\tthis.callback.call(this.callbackThis, e);\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: EventDeliveryQueue;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = Array.from(this._listeners);\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tfor (const listener of listeners) {\n\t\t\t\t\t\t\tif (listener.subscription.isset()) {\n\t\t\t\t\t\t\t\tlistener.subscription.unset();\n\t\t\t\t\t\t\t\tlistener.stack?.print();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners.clear();\n\t\t\t}\n\t\t\tthis._deliveryQueue?.clear(this);\n\t\t\tthis._options?.onLastListenerRemove?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (callback: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tlet removeMonitor: Function | undefined;\n\t\t\t\tlet stack: Stacktrace | undefined;\n\t\t\t\tif (this._leakageMon && this._listeners.size >= 30) {\n\t\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\t\tstack = Stacktrace.create();\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(stack, this._listeners.size + 1);\n\t\t\t\t}\n\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tstack = stack ?? Stacktrace.create();\n\t\t\t\t}\n\n\t\t\t\tconst listener = new Listener(callback, thisArgs, stack);\n\t\t\t\tconst removeListener = this._listeners.push(listener);\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options?.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, callback, thisArgs);\n\t\t\t\t}\n\n\t\t\t\tconst result = listener.subscription.set(() => {\n\t\t\t\t\tremoveMonitor?.();\n\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new PrivateEventDeliveryQueue();\n\t\t\t}\n\n\t\t\tfor (const listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push(this, listener, event);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\tthis._deliveryQueue.deliver();\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\thasListeners(): boolean {\n\t\tif (!this._listeners) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this._listeners.isEmpty();\n\t}\n}\n\nexport class EventDeliveryQueue {\n\tprotected _queue = new LinkedList<EventDeliveryQueueElement>();\n\n\tget size(): number {\n\t\treturn this._queue.size;\n\t}\n\n\tpush<T>(emitter: Emitter<T>, listener: Listener<T>, event: T): void {\n\t\tthis._queue.push(new EventDeliveryQueueElement(emitter, listener, event));\n\t}\n\n\tclear<T>(emitter: Emitter<T>): void {\n\t\tconst newQueue = new LinkedList<EventDeliveryQueueElement>();\n\t\tfor (const element of this._queue) {\n\t\t\tif (element.emitter !== emitter) {\n\t\t\t\tnewQueue.push(element);\n\t\t\t}\n\t\t}\n\t\tthis._queue = newQueue;\n\t}\n\n\tdeliver(): void {\n\t\twhile (this._queue.size > 0) {\n\t\t\tconst element = this._queue.shift()!;\n\t\t\ttry {\n\t\t\t\telement.listener.invoke(element.event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * An `EventDeliveryQueue` that is guaranteed to be used by a single `Emitter`.\n */\nclass PrivateEventDeliveryQueue extends EventDeliveryQueue {\n\toverride clear<T>(emitter: Emitter<T>): void {\n\t\t// Here we can just clear the entire linked list because\n\t\t// all elements are guaranteed to belong to this emitter\n\t\tthis._queue.clear();\n\t}\n}\n\nclass EventDeliveryQueueElement<T = any> {\n\tconstructor(\n\t\treadonly emitter: Emitter<T>,\n\t\treadonly listener: Listener<T>,\n\t\treadonly event: T\n\t) { }\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener.callback);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener.invoke(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tif (this._eventQueue.size > 0) {\n\t\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\t\tthis._eventQueue.clear();\n\t\t\t\t\tsuper.fire(this._mergeFn(events));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\n\t\tif (!this.hasListeners()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tthis._parentListener?.dispose();\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: string | undefined = undefined;\n\n\tconstructor(private readonly fn: (arg: TArg) => TComputed) {\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = JSON.stringify(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this.fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache (referential equality) to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TValue> {\n\tprivate readonly _map = new Map<TArg, TValue>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TValue> {\n\t\treturn this._map;\n\t}\n\n\tconstructor(private readonly fn: (arg: TArg) => TValue) { }\n\n\tpublic get(arg: TArg): TValue {\n\t\tif (this._map.has(arg)) {\n\t\t\treturn this._map.get(arg)!;\n\t\t}\n\t\tconst value = this.fn(arg);\n\t\tthis._map.set(arg, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): IDisposable {\n\tlet destroyed = false;\n\n\tstream.on('error', error => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n\n\treturn toDisposable(() => destroyed = true);\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from 'vs/base/common/cache';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\nexport function charCount(str: string): number {\n\tconst iterator = new GraphemeIterator(str);\n\tlet length = 0;\n\twhile (!iterator.eol()) {\n\t\tlength++;\n\t\titerator.nextGraphemeLength();\n\t}\n\treturn length;\n}\n\nlet CONTAINS_RTL: RegExp | undefined = undefined;\n\nfunction makeContainsRtl() {\n\t// Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n\treturn /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\tif (!CONTAINS_RTL) {\n\t\tCONTAINS_RTL = makeContainsRtl();\n\t}\n\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>((locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.getValue();\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.getValue();\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from 'vs/base/common/arrays';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _valueLen!: number;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\tthis._value = key;\n\t\tthis._valueLen = key.length;\n\t\tfor (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n\t\t\tconst ch = this._value.charCodeAt(pos);\n\t\t\tif (!(ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._valueLen;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._valueLen; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _ignorePathCasing: (uri: URI) => boolean,\n\t\tprivate readonly _ignoreQueryAndFragment: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (!this._ignoreQueryAndFragment(key)) {\n\t\t\tif (this._value.query) {\n\t\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t\t}\n\t\t\tif (this._value.fragment) {\n\t\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t\t}\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1,\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false, ignoreQueryAndFragment: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n\t}\n\n\tstatic forPaths<E>(ignorePathCasing = false): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator(undefined, !ignorePathCasing));\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\t// replace deleted-node with the min-node of the right branch.\n\t\t\t\t// If there is no true min-node leave things as they are\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tif (min.key) {\n\t\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\t\tthis._delete(min.key!, false);\n\t\t\t\t\tnode.key = key;\n\t\t\t\t\tnode.value = value;\n\t\t\t\t\tnode.segment = segment;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = node.right!.rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = node.left!.rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate _entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tconst result: [K, V][] = [];\n\t\tthis._dfsEntries(node, result);\n\t\treturn result[Symbol.iterator]();\n\t}\n\n\tprivate _dfsEntries(node: TernarySearchTreeNode<K, V> | undefined, bucket: [K, V][]) {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tthis._dfsEntries(node.left, bucket);\n\t\t}\n\t\tif (node.value) {\n\t\t\tbucket.push([node.key!, node.value]);\n\t\t}\n\t\tif (node.mid) {\n\t\t\tthis._dfsEntries(node.mid, bucket);\n\t\t}\n\t\tif (node.right) {\n\t\t\tthis._dfsEntries(node.right, bucket);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = str.normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\t// transform into NFD form and remove accents\n\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\tconst regex = /[\\u0300-\\u036f]/g;\n\treturn function (str: string) {\n\t\treturn normalizeNFD(str).replace(regex, '');\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj: unknown): obj is Object {\n\tconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\treturn typeof obj === 'object'\n\t\t&& obj instanceof TypedArray;\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (const key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Given an object with all optional properties, requires at least one to be defined.\n * i.e. AtLeastOne<MyObject>;\n */\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tsuffix += pathChars.charAt(Math.floor(Math.random() * pathChars.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isTypedArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\ntype obj = { [key: string]: any };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport * as paths from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t\t_validateUri(result, true);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\nexport interface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[]; stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledId } from './marshallingIds';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t\tcase MarshalledId.Date: return <any>new Date(obj.source);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractive = 'vscode-interactive';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _remoteResourcesPath: string = `/${Schemas.vscodeRemoteResource}`;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(serverRootPath: string): void {\n\t\tthis._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/** Can be passed into the Delayed to defer using a microtask */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T>{\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t * An event that fires when every promise in the queue\n\t * has started to execute. In other words: no work is\n\t * pending to be scheduled.\n\t *\n\t * This is NOT an event that signals when all promises\n\t * have finished though.\n\t */\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): ILimiter<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tthis.pendingWork.push(...units);\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface INextTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithNextTask {\n\treadonly next: INextTask;\n}\n\nexport class TaskSequentializer {\n\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: INextTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending?.promise;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n\n\thasNext(): this is ITaskSequentializerWithNextTask {\n\t\treturn !!this._next;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._next?.promise ?? this._pending?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(new CancellationError());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { isThenable } from 'vs/base/common/async';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { LRUCache } from 'vs/base/common/map';\nimport { basename, extname, posix, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\treturn parsedPattern(path.substr(arg2.base.length + 1), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { promisify } from 'util';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isEqualOrParent, isRootOrDriveLetter, randomPath } from 'vs/base/common/extpath';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provided path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nasync function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rm\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = randomPath(tmpdir());\n\t\ttry {\n\t\t\t// Intentionally using `fs.promises` here to skip\n\t\t\t// the patched graceful-fs method that can result\n\t\t\t// in very long running `rename` calls when the\n\t\t\t// folder is locked by a file watcher. We do not\n\t\t\t// really want to slow down this operation more\n\t\t\t// than necessary and we have a fallback to delete\n\t\t\t// via unlink.\n\t\t\t// https://github.com/microsoft/vscode/issues/139908\n\t\t\tawait fs.promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\treturn; // ignore - path to delete did not exist\n\t\t\t}\n\n\t\t\treturn rimrafUnlink(path); // otherwise fallback to unlink\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn promisify(fs.rm)(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmSync(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nasync function readdir(path: string): Promise<string[]>;\nasync function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nasync function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : promisify(fs.readdir)(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await promisify(fs.readdir)(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await Promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convenience method to read all children of a path that\n * are directories.\n */\nasync function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await Promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await Promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await Promises.stat(await Promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v14.16.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nfunction writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\ninterface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\nexport function configureFlushOnWrite(enabled: boolean): void {\n\tcanFlush = enabled;\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\t// https://github.com/microsoft/vscode/issues/9589\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tconfigureFlushOnWrite(false);\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tconfigureFlushOnWrite(false);\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - allows to move across multiple disks\n */\nasync function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\ttry {\n\t\tawait Promises.rename(source, target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string; target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nasync function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait Promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait Promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait Promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await Promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait Promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Promise based fs methods\n\n/**\n * Prefer this helper class over the `fs.promises` API to\n * enable `graceful-fs` to function properly. Given issue\n * https://github.com/isaacs/node-graceful-fs/issues/160 it\n * is evident that the module only takes care of the non-promise\n * based fs methods.\n *\n * Another reason is `realpath` being entirely different in\n * the promise based implementation compared to the other\n * one (https://github.com/microsoft/vscode/issues/118562)\n *\n * Note: using getters for a reason, since `graceful-fs`\n * patching might kick in later after modules have been\n * loaded we need to defer access to fs methods.\n * (https://github.com/microsoft/vscode/issues/124176)\n */\nexport const Promises = new class {\n\n\t//#region Implemented by node.js\n\n\tget access() { return promisify(fs.access); }\n\n\tget stat() { return promisify(fs.stat); }\n\tget lstat() { return promisify(fs.lstat); }\n\tget utimes() { return promisify(fs.utimes); }\n\n\tget read() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes read, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number, length: number, position: number | null) => {\n\t\t\treturn new Promise<{ bytesRead: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesRead, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\tget readFile() { return promisify(fs.readFile); }\n\n\tget write() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes written, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number | undefined | null, length: number | undefined | null, position: number | undefined | null) => {\n\t\t\treturn new Promise<{ bytesWritten: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.write(fd, buffer, offset, length, position, (err, bytesWritten, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesWritten, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\n\tget appendFile() { return promisify(fs.appendFile); }\n\n\tget fdatasync() { return promisify(fs.fdatasync); }\n\tget truncate() { return promisify(fs.truncate); }\n\n\tget rename() { return promisify(fs.rename); }\n\tget copyFile() { return promisify(fs.copyFile); }\n\n\tget open() { return promisify(fs.open); }\n\tget close() { return promisify(fs.close); }\n\n\tget symlink() { return promisify(fs.symlink); }\n\tget readlink() { return promisify(fs.readlink); }\n\n\tget chmod() { return promisify(fs.chmod); }\n\n\tget mkdir() { return promisify(fs.mkdir); }\n\n\tget unlink() { return promisify(fs.unlink); }\n\tget rmdir() { return promisify(fs.rmdir); }\n\n\tget realpath() { return promisify(fs.realpath); }\n\n\t//#endregion\n\n\t//#region Implemented by us\n\n\tasync exists(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tawait Promises.access(path);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget readdir() { return readdir; }\n\tget readDirsInDir() { return readDirsInDir; }\n\n\tget writeFile() { return writeFile; }\n\n\tget rm() { return rimraf; }\n\n\tget move() { return move; }\n\tget copy() { return copy; }\n\n\t//#endregion\n};\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { basename, dirname, join, normalize, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { rtrim } from 'vs/base/common/strings';\nimport { Promises, readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tif (isLinux) {\n\t\t// This method is unsupported on OS that have case sensitive\n\t\t// file system where the same path can exist in different forms\n\t\t// (see also https://github.com/microsoft/vscode/issues/139709)\n\t\treturn path;\n\t}\n\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realcase(path: string): Promise<string | null> {\n\tif (isLinux) {\n\t\t// This method is unsupported on OS that have case sensitive\n\t\t// file system where the same path can exist in different forms\n\t\t// (see also https://github.com/microsoft/vscode/issues/139709)\n\t\treturn path;\n\t}\n\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = await Promises.readdir(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = await realcase(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = await realcase(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await Promises.realpath(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait Promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats } from 'fs';\nimport * as path from 'vs/base/common/path';\nimport * as Platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { CommandOptions, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from 'vs/base/common/processes';\nimport * as Types from 'vs/base/common/types';\nimport * as pfs from 'vs/base/node/pfs';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await pfs.Promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await pfs.Promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (const pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event, EventMultiplexer, Relay } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel; id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose; id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string; name: string; stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(new CancellationError());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Event.None;\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(new CancellationError());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(new CancellationError());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError: {\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(new CancellationError());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\thandler?.(response);\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tconst connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService<TContext>(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel<TContext> {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\tconst target = handler[event];\n\t\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T extends object>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tconst result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { deepClone } from 'vs/base/common/objects';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { removeDangerousEnvVariables } from 'vs/base/common/processes';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tprocess.send?.((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number; signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tthis.disposeDelayer?.cancel();\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { IAction } from 'vs/base/common/actions';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n\nexport interface IErrorWithActions extends Error {\n\tactions: IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(messageOrError: string | Error, actions: IAction[]): IErrorWithActions {\n\tlet error: IErrorWithActions;\n\tif (typeof messageOrError === 'string') {\n\t\terror = new Error(messageOrError) as IErrorWithActions;\n\t} else {\n\t\terror = messageOrError as IErrorWithActions;\n\t}\n\n\terror.actions = actions;\n\n\treturn error;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A, ...BrandedService[]] ? [A]\n\t: Args extends [infer A, ...infer R] ? [A, ...GetLeadingNonServiceArgs<R>]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IExpression, IRelativePattern } from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { sep } from 'vs/base/common/path';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes its capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource by\n\t * first activating any extension that wants to be activated\n\t * on the provided resource scheme to include extensions that\n\t * contribute file system providers for the given resource.\n\t */\n\tcanHandleResource(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Checks if the file service has a registered provider for the\n\t * provided resource.\n\t *\n\t * Note: this does NOT account for contributed providers from\n\t * extensions that have not been activated yet. To include those,\n\t * consider to call `await fileService.canHandleResource(resource)`.\n\t */\n\thasProvider(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilities for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string; capabilities: FileSystemProviderCapabilities }>;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource. For a folder, children\n\t * information is resolved as well depending on the provided options. Use `stat()` method if\n\t * you do not need children information.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as `resolve()` but supports resolving multiple resources in parallel.\n\t *\n\t * If one of the resolve targets fails to resolve returns a fake `IFileStat` instead of\n\t * making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI; options: IResolveMetadataFileOptions }[]): Promise<IFileStatResult[]>;\n\tresolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]>;\n\n\t/**\n\t * Same as `resolve()` but without resolving the children of a folder if the\n\t * resource is pointing to a folder.\n\t */\n\tstat(resource: URI): Promise<IFileStatWithPartialMetadata>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions, token?: CancellationToken): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t *\n\t * Emits a `FileOperation.WRITE` file operation event when successful.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t *\n\t * Emits a `FileOperation.MOVE` file operation event when successful.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource. A folder is copied\n\t * recursively.\n\t *\n\t * Emits a `FileOperation.COPY` file operation event when successful.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Clones a file to a path identified by the resource. Folders are not supported.\n\t *\n\t * If the target path exists, it will be overwritten.\n\t */\n\tcloneFile(source: URI, target: URI): Promise<void>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t *\n\t * Emits a `FileOperation.DELETE` file operation event when successful.\n\t */\n\tdel(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * An event that signals an error when watching for file changes.\n\t */\n\treadonly onDidWatchError: Event<Error>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: recursive file watching is not supported from this method. Only events from files\n\t * that are direct children of the provided resource will be reported.\n\t */\n\twatch(resource: URI, options?: IWatchOptions): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface IFileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface IFileAtomicReadOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic: true;\n}\n\nexport interface IFileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface IFileWriteOptions extends IFileOverwriteOptions, IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type IFileOpenOptions = IFileOpenForReadOptions | IFileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: IFileOpenOptions): options is IFileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface IFileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface IFileOpenForWriteOptions extends IFileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface IFileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n\t/**\n\t * File is readonly.\n\t */\n\tReadonly = 1\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * The file permissions.\n\t */\n\treadonly permissions?: FilePermission;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t */\n\tincludes?: Array<string | IRelativePattern>;\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13,\n\n\t/**\n\t * Provider support to read files atomically. This implies the\n\t * provider provides the `FileReadWrite` capability too.\n\t */\n\tFileAtomicRead = 1 << 14,\n\n\t/**\n\t * Provider support to clone files atomically.\n\t */\n\tFileClone = 1 << 15\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\treadonly onDidWatchError?: Event<string>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n\tcloneFile?(from: URI, to: URI): Promise<void>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithFileCloneCapability extends IFileSystemProvider {\n\tcloneFile(from: URI, to: URI): Promise<void>;\n}\n\nexport function hasFileCloneCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileCloneCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileClone);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport interface IFileSystemProviderWithFileAtomicReadCapability extends IFileSystemProvider {\n\treadFile(resource: URI, opts?: IFileAtomicReadOptions): Promise<Uint8Array>;\n}\n\nexport function hasFileAtomicReadCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileAtomicReadCapability {\n\tif (!hasReadWriteCapability(provider)) {\n\t\treturn false; // we require the `FileReadWrite` capability too\n\t}\n\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileAtomicRead);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY,\n\tWRITE\n}\n\nexport interface IFileOperationEvent {\n\n\treadonly resource: URI;\n\treadonly operation: FileOperation;\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n}\n\nexport interface IFileOperationEventWithMetadata extends IFileOperationEvent {\n\treadonly target: IFileStatWithMetadata;\n}\n\nexport class FileOperationEvent implements IFileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE | FileOperation.WRITE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(readonly resource: URI, readonly operation: FileOperation, readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], ignorePathCasing: boolean) {\n\t\tthis.rawChanges = changes;\n\n\t\tconst entriesByType = new Map<FileChangeType, [URI, IFileChange][]>();\n\n\t\tfor (const change of changes) {\n\t\t\tconst array = entriesByType.get(change.type);\n\t\t\tif (array) {\n\t\t\t\tarray.push([change.resource, change]);\n\t\t\t} else {\n\t\t\t\tentriesByType.set(change.type, [[change.resource, change]]);\n\t\t\t}\n\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.rawAdded.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.rawUpdated.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.rawDeleted.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of entriesByType) {\n\t\t\tswitch (key) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.added.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.updated.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.deleted.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawChanges: readonly IFileChange[] = [];\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawAdded: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawUpdated: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawDeleted: URI[] = [];\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseFileStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier that represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * The file is read-only.\n\t */\n\treadonly readonly?: boolean;\n}\n\nexport interface IBaseFileStatWithMetadata extends Required<IBaseFileStat> { }\n\n/**\n * A file resource with meta information and resolved children if any.\n */\nexport interface IFileStat extends IBaseFileStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren: IFileStat[] | undefined;\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseFileStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly readonly: boolean;\n\treadonly children: IFileStatWithMetadata[] | undefined;\n}\n\nexport interface IFileStatResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IFileStatResultWithMetadata extends IFileStatResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileStatWithPartialMetadata extends Omit<IFileStatWithMetadata, 'children'> { }\n\nexport interface IFileContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends IFileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly fileOperationResult: FileOperationResult,\n\t\treadonly options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly stat: IFileStatWithMetadata,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\twatcherInclude: string[];\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number; size: number }): string;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { GLOBSTAR, IRelativePattern, parse, ParsedPattern } from 'vs/base/common/glob';\nimport { Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, IFileChange, isParent } from 'vs/platform/files/common/files';\n\ninterface IWatchRequest {\n\n\t/**\n\t * The path to watch.\n\t */\n\tpath: string;\n\n\t/**\n\t * Whether to watch recursively or not.\n\t */\n\trecursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t *\n\t * Paths or basic glob patterns that are relative will be\n\t * resolved to an absolute path using the currently opened\n\t * workspace. Complex glob patterns must match on absolute\n\t * paths via leading or trailing `**`.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t *\n\t * Paths or basic glob patterns that are relative will be\n\t * resolved to an absolute path using the currently opened\n\t * workspace. Complex glob patterns must match on absolute\n\t * paths via leading or trailing `**`.\n\t */\n\tincludes?: Array<string | IRelativePattern>;\n}\n\nexport interface INonRecursiveWatchRequest extends IWatchRequest {\n\n\t/**\n\t * The watcher will be non-recursive.\n\t */\n\trecursive: false;\n}\n\nexport interface IRecursiveWatchRequest extends IWatchRequest {\n\n\t/**\n\t * The watcher will be recursive.\n\t */\n\trecursive: true;\n\n\t/**\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport function isRecursiveWatchRequest(request: IWatchRequest): request is IRecursiveWatchRequest {\n\treturn request.recursive === true;\n}\n\nexport type IUniversalWatchRequest = IRecursiveWatchRequest | INonRecursiveWatchRequest;\n\ninterface IWatcher {\n\n\t/**\n\t * A normalized file change event from the raw events\n\t * the watcher emits.\n\t */\n\treadonly onDidChangeFile: Event<IDiskFileChange[]>;\n\n\t/**\n\t * An event to indicate a message that should get logged.\n\t */\n\treadonly onDidLogMessage: Event<ILogMessage>;\n\n\t/**\n\t * An event to indicate an error occurred from the watcher\n\t * that is unrecoverable. Listeners should restart the\n\t * watcher if possible.\n\t */\n\treadonly onDidError: Event<string>;\n\n\t/**\n\t * Configures the watcher to watch according to the\n\t * requests. Any existing watched path that is not\n\t * in the array, will be removed from watching and\n\t * any new path will be added to watching.\n\t */\n\twatch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging in the watcher.\n\t */\n\tsetVerboseLogging(enabled: boolean): Promise<void>;\n\n\t/**\n\t * Stop all watchers.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport interface IRecursiveWatcher extends IWatcher {\n\twatch(requests: IRecursiveWatchRequest[]): Promise<void>;\n}\n\nexport interface IRecursiveWatcherOptions {\n\n\t/**\n\t * If `true`, will enable polling for all watchers, otherwise\n\t * will enable it for paths included in the string array.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tusePolling: boolean | string[];\n\n\t/**\n\t * If polling is enabled (via `usePolling`), defines the duration\n\t * in which the watcher will poll for changes.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface INonRecursiveWatcher extends IWatcher {\n\twatch(requests: INonRecursiveWatchRequest[]): Promise<void>;\n}\n\nexport interface IUniversalWatcher extends IWatcher {\n\twatch(requests: IUniversalWatchRequest[]): Promise<void>;\n}\n\nexport abstract class AbstractWatcherClient extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate watcher: IWatcher | undefined;\n\tprivate readonly watcherDisposables = this._register(new MutableDisposable());\n\n\tprivate requests: IWatchRequest[] | undefined = undefined;\n\n\tprivate restartCounter = 0;\n\n\tconstructor(\n\t\tprivate readonly onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate options: {\n\t\t\ttype: string;\n\t\t\trestartOnError: boolean;\n\t\t}\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected abstract createWatcher(disposables: DisposableStore): IWatcher;\n\n\tprotected init(): void {\n\n\t\t// Associate disposables to the watcher\n\t\tconst disposables = new DisposableStore();\n\t\tthis.watcherDisposables.value = disposables;\n\n\t\t// Ask implementors to create the watcher\n\t\tthis.watcher = this.createWatcher(disposables);\n\t\tthis.watcher.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tdisposables.add(this.watcher.onDidChangeFile(changes => this.onFileChanges(changes)));\n\t\tdisposables.add(this.watcher.onDidLogMessage(msg => this.onLogMessage(msg)));\n\t\tdisposables.add(this.watcher.onDidError(error => this.onError(error)));\n\t}\n\n\tprotected onError(error: string): void {\n\n\t\t// Restart on error (up to N times, if enabled)\n\t\tif (this.options.restartOnError) {\n\t\t\tif (this.restartCounter < AbstractWatcherClient.MAX_RESTARTS && this.requests) {\n\t\t\t\tthis.error(`restarting watcher after error: ${error}`);\n\t\t\t\tthis.restart(this.requests);\n\t\t\t} else {\n\t\t\t\tthis.error(`gave up attempting to restart watcher after error: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\t// Do not attempt to restart if not enabled\n\t\telse {\n\t\t\tthis.error(error);\n\t\t}\n\t}\n\n\tprivate restart(requests: IUniversalWatchRequest[]): void {\n\t\tthis.restartCounter++;\n\n\t\tthis.init();\n\t\tthis.watch(requests);\n\t}\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\n\t\tawait this.watcher?.watch(requests);\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tawait this.watcher?.setVerboseLogging(verboseLogging);\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (${this.options.type})] ${message}` });\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Render the watcher invalid from here\n\t\tthis.watcher = undefined;\n\n\t\treturn super.dispose();\n\t}\n}\n\nexport abstract class AbstractNonRecursiveWatcherClient extends AbstractWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging, { type: 'node.js', restartOnError: false });\n\t}\n\n\tprotected abstract override createWatcher(disposables: DisposableStore): INonRecursiveWatcher;\n}\n\nexport abstract class AbstractUniversalWatcherClient extends AbstractWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging, { type: 'universal', restartOnError: true });\n\t}\n\n\tprotected abstract override createWatcher(disposables: DisposableStore): IUniversalWatcher;\n}\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function coalesceEvents(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst coalescer = new EventCoalescer();\n\tfor (const event of changes) {\n\t\tcoalescer.processEvent(event);\n\t}\n\n\treturn coalescer.coalesce();\n}\n\nexport function normalizeWatcherPattern(path: string, pattern: string | IRelativePattern): string | IRelativePattern {\n\n\t// Patterns are always matched on the full absolute path\n\t// of the event. As such, if the pattern is not absolute\n\t// and is a string and does not start with a leading\n\t// `**`, we have to convert it to a relative pattern with\n\t// the given `base`\n\n\tif (typeof pattern === 'string' && !pattern.startsWith(GLOBSTAR) && !isAbsolute(pattern)) {\n\t\treturn { base: path, pattern };\n\t}\n\n\treturn pattern;\n}\n\nexport function parseWatcherPatterns(path: string, patterns: Array<string | IRelativePattern>): ParsedPattern[] {\n\tconst parsedPatterns: ParsedPattern[] = [];\n\n\tfor (const pattern of patterns) {\n\t\tparsedPatterns.push(parse(normalizeWatcherPattern(path, pattern)));\n\t}\n\n\treturn parsedPatterns;\n}\n\nclass EventCoalescer {\n\n\tprivate readonly coalesced = new Set<IDiskFileChange>();\n\tprivate readonly mapPathToChange = new Map<string, IDiskFileChange>();\n\n\tprivate toKey(event: IDiskFileChange): string {\n\t\tif (isLinux) {\n\t\t\treturn event.path;\n\t\t}\n\n\t\treturn event.path.toLowerCase(); // normalise to file system case sensitivity\n\t}\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(this.toKey(event));\n\n\t\tlet keepEvent = false;\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// macOS/Windows: track renames to different case\n\t\t\t// by keeping both CREATE and DELETE events\n\t\t\tif (existingEvent.path !== event.path && (event.type === FileChangeType.DELETED || event.type === FileChangeType.ADDED)) {\n\t\t\t\tkeepEvent = true;\n\t\t\t}\n\n\t\t\t// Ignore CREATE followed by DELETE in one go\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(this.toKey(event));\n\t\t\t\tthis.coalesced.delete(existingEvent);\n\t\t\t}\n\n\t\t\t// Flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise keep\n\t\telse {\n\t\t\tkeepEvent = true;\n\t\t}\n\n\t\tif (keepEvent) {\n\t\t\tthis.coalesced.add(event);\n\t\t\tthis.mapPathToChange.set(this.toKey(event), event);\n\t\t}\n\t}\n\n\tcoalesce(): IDiskFileChange[] {\n\t\tconst addOrChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn Array.from(this.coalesced).filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddOrChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(deletedPath => isParent(e.path, deletedPath, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addOrChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watch } from 'fs';\nimport { ThrottledDelayer, ThrottledWorker } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { basename, dirname, join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { realcase } from 'vs/base/node/extpath';\nimport { Promises } from 'vs/base/node/pfs';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, coalesceEvents, INonRecursiveWatchRequest, parseWatcherPatterns } from 'vs/platform/files/common/watcher';\n\nexport class NodeJSFileWatcherLibrary extends Disposable {\n\n\t// A delay in reacting to file deletes to support\n\t// atomic save operations where a tool may chose\n\t// to delete a file before creating it again for\n\t// an update.\n\tprivate static readonly FILE_DELETE_HANDLER_DELAY = 100;\n\n\t// A delay for collecting file changes from node.js\n\t// before collecting them for coalescing and emitting\n\t// (same delay as Parcel is using)\n\tprivate static readonly FILE_CHANGES_HANDLER_DELAY = 50;\n\n\t// Reduce likelyhood of spam from file events via throttling.\n\t// These numbers are a bit more aggressive compared to the\n\t// recursive watcher because we can have many individual\n\t// node.js watchers per request.\n\t// (https://github.com/microsoft/vscode/issues/124723)\n\tprivate readonly throttledFileChangesWorker = new ThrottledWorker<IDiskFileChange>(\n\t\t{\n\t\t\tmaxWorkChunkSize: 100,\t// only process up to 100 changes at once before...\n\t\t\tthrottleDelay: 200,\t  \t// ...resting for 200ms until we process events again...\n\t\t\tmaxBufferedWork: 10000 \t// ...but never buffering more than 10000 events in memory\n\t\t},\n\t\tevents => this.onDidFilesChange(events)\n\t);\n\n\tprivate readonly fileChangesDelayer = this._register(new ThrottledDelayer<void>(NodeJSFileWatcherLibrary.FILE_CHANGES_HANDLER_DELAY));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tprivate readonly excludes = parseWatcherPatterns(this.request.path, this.request.excludes);\n\tprivate readonly includes = this.request.includes ? parseWatcherPatterns(this.request.path, this.request.includes) : undefined;\n\n\tprivate readonly cts = new CancellationTokenSource();\n\n\treadonly ready = this.watch();\n\n\tconstructor(\n\t\tprivate request: INonRecursiveWatchRequest,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage?: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging?: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate async watch(): Promise<void> {\n\t\ttry {\n\t\t\tconst realPath = await this.normalizePath(this.request);\n\n\t\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Watch via node.js\n\t\t\tconst stat = await Promises.stat(realPath);\n\t\t\tthis._register(await this.doWatch(realPath, stat.isDirectory()));\n\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.error(error);\n\t\t\t} else {\n\t\t\t\tthis.trace(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async normalizePath(request: INonRecursiveWatchRequest): Promise<string> {\n\t\tlet realPath = request.path;\n\n\t\ttry {\n\n\t\t\t// First check for symbolic link\n\t\t\trealPath = await Promises.realpath(request.path);\n\n\t\t\t// Second check for casing difference\n\t\t\t// Note: this will be a no-op on Linux platforms\n\t\t\tif (request.path === realPath) {\n\t\t\t\trealPath = await realcase(request.path) ?? request.path;\n\t\t\t}\n\n\t\t\t// Correct watch path as needed\n\t\t\tif (request.path !== realPath) {\n\t\t\t\tthis.trace(`correcting a path to watch that seems to be a symbolic link or wrong casing (original: ${request.path}, real: ${realPath})`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn realPath;\n\t}\n\n\tprivate async doWatch(path: string, isDirectory: boolean): Promise<IDisposable> {\n\n\t\t// macOS: watching samba shares can crash VSCode so we do\n\t\t// a simple check for the file path pointing to /Volumes\n\t\t// (https://github.com/microsoft/vscode/issues/106879)\n\t\t// TODO@electron this needs a revisit when the crash is\n\t\t// fixed or mitigated upstream.\n\t\tif (isMacintosh && isEqualOrParent(path, '/Volumes/', true)) {\n\t\t\tthis.error(`Refusing to watch ${path} for changes using fs.watch() for possibly being a network share where watching is unreliable and unstable.`);\n\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource(this.cts.token);\n\n\t\tconst disposables = new DisposableStore();\n\n\t\ttry {\n\t\t\tconst pathBasename = basename(path);\n\n\t\t\t// Creating watcher can fail with an exception\n\t\t\tconst watcher = watch(path);\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\twatcher.removeAllListeners();\n\t\t\t\twatcher.close();\n\t\t\t}));\n\n\t\t\tthis.trace(`Started watching: '${path}'`);\n\n\t\t\t// Folder: resolve children to emit proper events\n\t\t\tconst folderChildren = new Set<string>();\n\t\t\tif (isDirectory) {\n\t\t\t\ttry {\n\t\t\t\t\tfor (const child of await Promises.readdir(path)) {\n\t\t\t\t\t\tfolderChildren.add(child);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tfor (const [, disposable] of mapPathToStatDisposable) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t\tmapPathToStatDisposable.clear();\n\t\t\t}));\n\n\t\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\t\tthis.error(`Failed to watch ${path} for changes using fs.watch() (${code}, ${signal})`);\n\n\t\t\t\t// The watcher is no longer functional reliably\n\t\t\t\t// so we go ahead and dispose it\n\t\t\t\tthis.dispose();\n\t\t\t});\n\n\t\t\twatcher.on('change', (type, raw) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn; // ignore if already disposed\n\t\t\t\t}\n\n\t\t\t\tthis.trace(`[raw] [\"${type}\"] ${raw}`);\n\n\t\t\t\t// Normalize file name\n\t\t\t\tlet changedFileName = '';\n\t\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\t\treturn; // ignore unexpected events\n\t\t\t\t}\n\n\t\t\t\t// Folder\n\t\t\t\tif (isDirectory) {\n\n\t\t\t\t\t// Folder child added/deleted\n\t\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t\t// Cancel any previous stats for this file if existing\n\t\t\t\t\t\tmapPathToStatDisposable.get(changedFileName)?.dispose();\n\n\t\t\t\t\t\t// Wait a bit and try see if the file still exists on disk\n\t\t\t\t\t\t// to decide on the resulting event\n\t\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFileName);\n\n\t\t\t\t\t\t\t// Depending on the OS the watcher runs on, there\n\t\t\t\t\t\t\t// is different behaviour for when the watched\n\t\t\t\t\t\t\t// folder path is being deleted:\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// -   macOS: not reported but events continue to\n\t\t\t\t\t\t\t//            work even when the folder is brought\n\t\t\t\t\t\t\t//            back, though it seems every change\n\t\t\t\t\t\t\t//            to a file is reported as \"rename\"\n\t\t\t\t\t\t\t// -   Linux: \"rename\" event is reported with the\n\t\t\t\t\t\t\t//            name of the folder and events stop\n\t\t\t\t\t\t\t//            working\n\t\t\t\t\t\t\t// - Windows: an EPERM error is thrown that we\n\t\t\t\t\t\t\t//            handle from the `on('error')` event\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// We do not re-attach the watcher after timeout\n\t\t\t\t\t\t\t// though as we do for file watches because for\n\t\t\t\t\t\t\t// file watching specifically we want to handle\n\t\t\t\t\t\t\t// the atomic-write cases where the file is being\n\t\t\t\t\t\t\t// deleted and recreated with different contents.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// Same as with recursive watching, we do not\n\t\t\t\t\t\t\t// emit a delete event in this case.\n\t\t\t\t\t\t\tif (changedFileName === pathBasename && !await Promises.exists(path)) {\n\t\t\t\t\t\t\t\tthis.warn('Watcher shutdown because watched path got deleted');\n\n\t\t\t\t\t\t\t\t// The watcher is no longer functional reliably\n\t\t\t\t\t\t\t\t// so we go ahead and dispose it\n\t\t\t\t\t\t\t\tthis.dispose();\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// In order to properly detect renames on a case-insensitive\n\t\t\t\t\t\t\t// file system, we need to use `existsChildStrictCase` helper\n\t\t\t\t\t\t\t// because otherwise we would wrongly assume a file exists\n\t\t\t\t\t\t\t// when it was renamed to same name but different case.\n\t\t\t\t\t\t\tconst fileExists = await this.existsChildStrictCase(join(path, changedFileName));\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t\t// File Exists: either 'added' or 'updated' if known before\n\t\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\t\tlet type: FileChangeType;\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\t\ttype = FileChangeType.UPDATED;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttype = FileChangeType.ADDED;\n\t\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\t\ttype = FileChangeType.DELETED;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.onFileChange({ path: join(this.request.path, changedFileName), type });\n\t\t\t\t\t\t}, NodeJSFileWatcherLibrary.FILE_DELETE_HANDLER_DELAY);\n\n\t\t\t\t\t\tmapPathToStatDisposable.set(changedFileName, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Folder child changed\n\t\t\t\t\telse {\n\n\t\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\t\tlet type: FileChangeType;\n\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\ttype = FileChangeType.UPDATED;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = FileChangeType.ADDED;\n\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.onFileChange({ path: join(this.request.path, changedFileName), type });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// File\n\t\t\t\telse {\n\n\t\t\t\t\t// File added/deleted\n\t\t\t\t\tif (type === 'rename' || changedFileName !== pathBasename) {\n\n\t\t\t\t\t\t// Depending on the OS the watcher runs on, there\n\t\t\t\t\t\t// is different behaviour for when the watched\n\t\t\t\t\t\t// file path is being deleted:\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// -   macOS: \"rename\" event is reported and events\n\t\t\t\t\t\t//            stop working\n\t\t\t\t\t\t// -   Linux: \"rename\" event is reported and events\n\t\t\t\t\t\t//            stop working\n\t\t\t\t\t\t// - Windows: \"rename\" event is reported and events\n\t\t\t\t\t\t//            continue to work when file is restored\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// As opposed to folder watching, we re-attach the\n\t\t\t\t\t\t// watcher after brief timeout to support \"atomic save\"\n\t\t\t\t\t\t// operations where a tool may decide to delete a file\n\t\t\t\t\t\t// and then create it with the updated contents.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Different to folder watching, we emit a delete event\n\t\t\t\t\t\t// though we never detect when the file is brought back\n\t\t\t\t\t\t// because the watcher is disposed then.\n\n\t\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\t\tconst fileExists = await Promises.exists(path);\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\tthis.onFileChange({ path: this.request.path, type: FileChangeType.UPDATED }, true /* skip excludes/includes (file is explicitly watched) */);\n\n\t\t\t\t\t\t\t\tdisposables.add(await this.doWatch(path, false));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event and dispose\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconst eventPromise = this.onFileChange({ path: this.request.path, type: FileChangeType.DELETED }, true /* skip excludes/includes (file is explicitly watched) */);\n\n\t\t\t\t\t\t\t\t// Important to await the event delivery\n\t\t\t\t\t\t\t\t// before disposing the watcher, otherwise\n\t\t\t\t\t\t\t\t// we will loose this event.\n\t\t\t\t\t\t\t\tawait eventPromise;\n\t\t\t\t\t\t\t\tthis.dispose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, NodeJSFileWatcherLibrary.FILE_DELETE_HANDLER_DELAY);\n\n\t\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\t\tdisposables.clear();\n\t\t\t\t\t\tdisposables.add(toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t\t}\n\n\t\t\t\t\t// File changed\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.onFileChange({ path: this.request.path, type: FileChangeType.UPDATED }, true /* skip excludes/includes (file is explicitly watched) */);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (await Promises.exists(path) && !cts.token.isCancellationRequested) {\n\t\t\t\tthis.error(`Failed to watch ${path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tcts.dispose(true);\n\t\t\tdisposables.dispose();\n\t\t});\n\t}\n\n\tprivate async onFileChange(event: IDiskFileChange, skipIncludeExcludeChecks = false): Promise<void> {\n\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.trace(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Add to buffer unless excluded or not included (not if explicitly disabled)\n\t\tif (!skipIncludeExcludeChecks && this.excludes.some(exclude => exclude(event.path))) {\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.trace(` >> ignored (excluded) ${event.path}`);\n\t\t\t}\n\t\t} else if (!skipIncludeExcludeChecks && this.includes && this.includes.length > 0 && !this.includes.some(include => include(event.path))) {\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.trace(` >> ignored (not included) ${event.path}`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fileChangesBuffer.push(event);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\ttry {\n\t\t\tawait this.fileChangesDelayer.trigger(async () => {\n\t\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t\t// Coalesce events: merge events of same kind\n\t\t\t\tconst coalescedFileChanges = coalesceEvents(fileChanges);\n\n\t\t\t\tif (coalescedFileChanges.length > 0) {\n\n\t\t\t\t\t// Logging\n\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\tfor (const event of coalescedFileChanges) {\n\t\t\t\t\t\t\tthis.trace(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Broadcast to clients via throttler\n\t\t\t\t\tconst worked = this.throttledFileChangesWorker.work(coalescedFileChanges);\n\n\t\t\t\t\t// Logging\n\t\t\t\t\tif (!worked) {\n\t\t\t\t\t\tthis.warn(`started ignoring events due to too many file change events at once (incoming: ${coalescedFileChanges.length}, most recent change: ${coalescedFileChanges[0].path}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.throttledFileChangesWorker.pending > 0) {\n\t\t\t\t\t\t\tthis.trace(`started throttling events due to large amount of file change events at once (pending: ${this.throttledFileChangesWorker.pending}, most recent change: ${coalescedFileChanges[0].path}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// ignore (we are likely disposed and cancelled)\n\t\t}\n\t}\n\n\tprivate async existsChildStrictCase(path: string): Promise<boolean> {\n\t\tif (isLinux) {\n\t\t\treturn Promises.exists(path);\n\t\t}\n\n\t\ttry {\n\t\t\tconst pathBasename = basename(path);\n\t\t\tconst children = await Promises.readdir(dirname(path));\n\n\t\t\treturn children.some(child => child === pathBasename);\n\t\t} catch (error) {\n\t\t\tthis.trace(error);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate error(error: string): void {\n\t\tif (!this.cts.token.isCancellationRequested) {\n\t\t\tthis.onLogMessage?.({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate warn(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested) {\n\t\t\tthis.onLogMessage?.({ type: 'warn', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tprivate trace(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested && this.verboseLogging) {\n\t\t\tthis.onLogMessage?.({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.trace(`stopping file watcher on ${this.request.path}`);\n\n\t\tthis.cts.dispose(true);\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * Watch the provided `path` for changes and return\n * the data in chunks of `Uint8Array` for further use.\n */\nexport async function watchFileContents(path: string, onData: (chunk: Uint8Array) => void, onReady: () => void, token: CancellationToken, bufferSize = 512): Promise<void> {\n\tconst handle = await Promises.open(path, 'r');\n\tconst buffer = Buffer.allocUnsafe(bufferSize);\n\n\tconst cts = new CancellationTokenSource(token);\n\n\tlet error: Error | undefined = undefined;\n\tlet isReading = false;\n\n\tconst request: INonRecursiveWatchRequest = { path, excludes: [], recursive: false };\n\tconst watcher = new NodeJSFileWatcherLibrary(request, changes => {\n\t\t(async () => {\n\t\t\tfor (const { type } of changes) {\n\t\t\t\tif (type === FileChangeType.UPDATED) {\n\n\t\t\t\t\tif (isReading) {\n\t\t\t\t\t\treturn; // return early if we are already reading the output\n\t\t\t\t\t}\n\n\t\t\t\t\tisReading = true;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Consume the new contents of the file until finished\n\t\t\t\t\t\t// everytime there is a change event signalling a change\n\t\t\t\t\t\twhile (!cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\tconst { bytesRead } = await Promises.read(handle, buffer, 0, bufferSize, null);\n\t\t\t\t\t\t\tif (!bytesRead || cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tonData(buffer.slice(0, bytesRead));\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\terror = new Error(err);\n\t\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tisReading = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n\n\tawait watcher.ready;\n\tonReady();\n\n\treturn new Promise<void>((resolve, reject) => {\n\t\tcts.token.onCancellationRequested(async () => {\n\t\t\twatcher.dispose();\n\n\t\t\ttry {\n\t\t\t\tawait Promises.close(handle);\n\t\t\t} catch (err) {\n\t\t\t\terror = new Error(err);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { patternsEquals } from 'vs/base/common/glob';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isLinux } from 'vs/base/common/platform';\nimport { IDiskFileChange, ILogMessage, INonRecursiveWatchRequest, INonRecursiveWatcher } from 'vs/platform/files/common/watcher';\nimport { NodeJSFileWatcherLibrary } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcherLib';\n\nexport interface INodeJSWatcherInstance {\n\n\t/**\n\t * The watcher instance.\n\t */\n\treadonly instance: NodeJSFileWatcherLibrary;\n\n\t/**\n\t * The watch request associated to the watcher.\n\t */\n\treadonly request: INonRecursiveWatchRequest;\n}\n\nexport class NodeJSWatcher extends Disposable implements INonRecursiveWatcher {\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<IDiskFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage = this._onDidLogMessage.event;\n\n\treadonly onDidError = Event.None;\n\n\tprotected readonly watchers = new Map<string, INodeJSWatcherInstance>();\n\n\tprivate verboseLogging = false;\n\n\tasync watch(requests: INonRecursiveWatchRequest[]): Promise<void> {\n\n\t\t// Figure out duplicates to remove from the requests\n\t\tconst normalizedRequests = this.normalizeRequests(requests);\n\n\t\t// Gather paths that we should start watching\n\t\tconst requestsToStartWatching = normalizedRequests.filter(request => {\n\t\t\tconst watcher = this.watchers.get(request.path);\n\t\t\tif (!watcher) {\n\t\t\t\treturn true; // not yet watching that path\n\t\t\t}\n\n\t\t\t// Re-watch path if excludes or includes have changed\n\t\t\treturn !patternsEquals(watcher.request.excludes, request.excludes) || !patternsEquals(watcher.request.includes, request.includes);\n\t\t});\n\n\t\t// Gather paths that we should stop watching\n\t\tconst pathsToStopWatching = Array.from(this.watchers.values()).filter(({ request }) => {\n\t\t\treturn !normalizedRequests.find(normalizedRequest => normalizedRequest.path === request.path && patternsEquals(normalizedRequest.excludes, request.excludes) && patternsEquals(normalizedRequest.includes, request.includes));\n\t\t}).map(({ request }) => request.path);\n\n\t\t// Logging\n\n\t\tif (requestsToStartWatching.length) {\n\t\t\tthis.trace(`Request to start watching: ${requestsToStartWatching.map(request => `${request.path} (excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'})`).join(',')}`);\n\t\t}\n\n\t\tif (pathsToStopWatching.length) {\n\t\t\tthis.trace(`Request to stop watching: ${pathsToStopWatching.join(',')}`);\n\t\t}\n\n\t\t// Stop watching as instructed\n\t\tfor (const pathToStopWatching of pathsToStopWatching) {\n\t\t\tthis.stopWatching(pathToStopWatching);\n\t\t}\n\n\t\t// Start watching as instructed\n\t\tfor (const request of requestsToStartWatching) {\n\t\t\tthis.startWatching(request);\n\t\t}\n\t}\n\n\tprivate startWatching(request: INonRecursiveWatchRequest): void {\n\n\t\t// Start via node.js lib\n\t\tconst instance = new NodeJSFileWatcherLibrary(request, changes => this._onDidChangeFile.fire(changes), msg => this._onDidLogMessage.fire(msg), this.verboseLogging);\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: INodeJSWatcherInstance = { request, instance };\n\t\tthis.watchers.set(request.path, watcher);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const [path] of this.watchers) {\n\t\t\tthis.stopWatching(path);\n\t\t}\n\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate stopWatching(path: string): void {\n\t\tconst watcher = this.watchers.get(path);\n\t\tif (watcher) {\n\t\t\tthis.watchers.delete(path);\n\n\t\t\twatcher.instance.dispose();\n\t\t}\n\t}\n\n\tprivate normalizeRequests(requests: INonRecursiveWatchRequest[]): INonRecursiveWatchRequest[] {\n\t\tconst requestsMap = new Map<string, INonRecursiveWatchRequest>();\n\n\t\t// Ignore requests for the same paths\n\t\tfor (const request of requests) {\n\t\t\tconst path = isLinux ? request.path : request.path.toLowerCase(); // adjust for case sensitivity\n\t\t\trequestsMap.set(path, request);\n\t\t}\n\n\t\treturn Array.from(requestsMap.values());\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\n\t\tfor (const [, watcher] of this.watchers) {\n\t\t\twatcher.instance.setVerboseLogging(enabled);\n\t\t}\n\t}\n\n\tprivate trace(message: string): void {\n\t\tif (this.verboseLogging) {\n\t\t\tthis._onDidLogMessage.fire({ type: 'trace', message: this.toMessage(message) });\n\t\t}\n\t}\n\n\tprivate toMessage(message: string, watcher?: INodeJSWatcherInstance): string {\n\t\treturn watcher ? `[File Watcher (node.js)] ${message} (path: ${watcher.request.path})` : `[File Watcher (node.js)] ${message}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as parcelWatcher from '@parcel/watcher';\nimport { existsSync, statSync, unlinkSync } from 'fs';\nimport { tmpdir } from 'os';\nimport { DeferredPromise, RunOnceScheduler, ThrottledWorker } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter } from 'vs/base/common/event';\nimport { isEqualOrParent, randomPath } from 'vs/base/common/extpath';\nimport { GLOBSTAR, ParsedPattern, patternsEquals } from 'vs/base/common/glob';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { dirname, isAbsolute, join, normalize, sep } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { rtrim } from 'vs/base/common/strings';\nimport { realcaseSync, realpathSync } from 'vs/base/node/extpath';\nimport { NodeJSFileWatcherLibrary } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcherLib';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, coalesceEvents, IRecursiveWatchRequest, IRecursiveWatcher, parseWatcherPatterns } from 'vs/platform/files/common/watcher';\n\nexport interface IParcelWatcherInstance {\n\n\t/**\n\t * Signals when the watcher is ready to watch.\n\t */\n\treadonly ready: Promise<unknown>;\n\n\t/**\n\t * The watch request associated to the watcher.\n\t */\n\treadonly request: IRecursiveWatchRequest;\n\n\t/**\n\t * How often this watcher has been restarted in case of an unexpected\n\t * shutdown.\n\t */\n\treadonly restarts: number;\n\n\t/**\n\t * The cancellation token associated with the lifecycle of the watcher.\n\t */\n\treadonly token: CancellationToken;\n\n\t/**\n\t * Stops and disposes the watcher. This operation is async to await\n\t * unsubscribe call in Parcel.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport class ParcelWatcher extends Disposable implements IRecursiveWatcher {\n\n\tprivate static readonly MAP_PARCEL_WATCHER_ACTION_TO_FILE_CHANGE = new Map<parcelWatcher.EventType, number>(\n\t\t[\n\t\t\t['create', FileChangeType.ADDED],\n\t\t\t['update', FileChangeType.UPDATED],\n\t\t\t['delete', FileChangeType.DELETED]\n\t\t]\n\t);\n\n\tprivate static readonly GLOB_MARKERS = {\n\t\tStar: '*',\n\t\tGlobStar: '**',\n\t\tGlobStarPosix: '**/**',\n\t\tGlobStarWindows: '**\\\\**',\n\t\tGlobStarPathStartPosix: '**/',\n\t\tGlobStarPathEndPosix: '/**',\n\t\tStarPathEndPosix: '/*',\n\t\tGlobStarPathStartWindows: '**\\\\',\n\t\tGlobStarPathEndWindows: '\\\\**'\n\t};\n\n\tprivate static readonly PARCEL_WATCHER_BACKEND = isWindows ? 'windows' : isLinux ? 'inotify' : 'fs-events';\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<IDiskFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage = this._onDidLogMessage.event;\n\n\tprivate readonly _onDidError = this._register(new Emitter<string>());\n\treadonly onDidError = this._onDidError.event;\n\n\tprotected readonly watchers = new Map<string, IParcelWatcherInstance>();\n\n\t// Reduce likelyhood of spam from file events via throttling.\n\t// (https://github.com/microsoft/vscode/issues/124723)\n\tprivate readonly throttledFileChangesWorker = new ThrottledWorker<IDiskFileChange>(\n\t\t{\n\t\t\tmaxWorkChunkSize: 500,\t// only process up to 500 changes at once before...\n\t\t\tthrottleDelay: 200,\t  \t// ...resting for 200ms until we process events again...\n\t\t\tmaxBufferedWork: 30000 \t// ...but never buffering more than 30000 events in memory\n\t\t},\n\t\tevents => this._onDidChangeFile.fire(events)\n\t);\n\n\tprivate verboseLogging = false;\n\tprivate enospcErrorLogged = false;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Error handling on process\n\t\tprocess.on('uncaughtException', error => this.onUnexpectedError(error));\n\t\tprocess.on('unhandledRejection', error => this.onUnexpectedError(error));\n\t}\n\n\tasync watch(requests: IRecursiveWatchRequest[]): Promise<void> {\n\n\t\t// Figure out duplicates to remove from the requests\n\t\tconst normalizedRequests = this.normalizeRequests(requests);\n\n\t\t// Gather paths that we should start watching\n\t\tconst requestsToStartWatching = normalizedRequests.filter(request => {\n\t\t\tconst watcher = this.watchers.get(request.path);\n\t\t\tif (!watcher) {\n\t\t\t\treturn true; // not yet watching that path\n\t\t\t}\n\n\t\t\t// Re-watch path if excludes/includes have changed or polling interval\n\t\t\treturn !patternsEquals(watcher.request.excludes, request.excludes) || !patternsEquals(watcher.request.includes, request.includes) || watcher.request.pollingInterval !== request.pollingInterval;\n\t\t});\n\n\t\t// Gather paths that we should stop watching\n\t\tconst pathsToStopWatching = Array.from(this.watchers.values()).filter(({ request }) => {\n\t\t\treturn !normalizedRequests.find(normalizedRequest => {\n\t\t\t\treturn normalizedRequest.path === request.path &&\n\t\t\t\t\tpatternsEquals(normalizedRequest.excludes, request.excludes) &&\n\t\t\t\t\tpatternsEquals(normalizedRequest.includes, request.includes) &&\n\t\t\t\t\tnormalizedRequest.pollingInterval === request.pollingInterval;\n\n\t\t\t});\n\t\t}).map(({ request }) => request.path);\n\n\t\t// Logging\n\n\t\tif (requestsToStartWatching.length) {\n\t\t\tthis.trace(`Request to start watching: ${requestsToStartWatching.map(request => `${request.path} (excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'})`).join(',')}`);\n\t\t}\n\n\t\tif (pathsToStopWatching.length) {\n\t\t\tthis.trace(`Request to stop watching: ${pathsToStopWatching.join(',')}`);\n\t\t}\n\n\t\t// Stop watching as instructed\n\t\tfor (const pathToStopWatching of pathsToStopWatching) {\n\t\t\tawait this.stopWatching(pathToStopWatching);\n\t\t}\n\n\t\t// Start watching as instructed\n\t\tfor (const request of requestsToStartWatching) {\n\t\t\tif (request.pollingInterval) {\n\t\t\t\tthis.startPolling(request, request.pollingInterval);\n\t\t\t} else {\n\t\t\t\tthis.startWatching(request);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected toExcludePaths(path: string, excludes: string[] | undefined): string[] | undefined {\n\t\tif (!Array.isArray(excludes)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst excludePaths = new Set<string>();\n\n\t\t// Parcel watcher currently does not support glob patterns\n\t\t// for native exclusions. As long as that is the case, try\n\t\t// to convert exclude patterns into absolute paths that the\n\t\t// watcher supports natively to reduce the overhead at the\n\t\t// level of the file watcher as much as possible.\n\t\t// Refs: https://github.com/parcel-bundler/watcher/issues/64\n\t\tfor (const exclude of excludes) {\n\t\t\tconst isGlob = exclude.includes(ParcelWatcher.GLOB_MARKERS.Star);\n\n\t\t\t// Glob pattern: check for typical patterns and convert\n\t\t\tlet normalizedExclude: string | undefined = undefined;\n\t\t\tif (isGlob) {\n\n\t\t\t\t// Examples: **, **/**, **\\**\n\t\t\t\tif (\n\t\t\t\t\texclude === ParcelWatcher.GLOB_MARKERS.GlobStar ||\n\t\t\t\t\texclude === ParcelWatcher.GLOB_MARKERS.GlobStarPosix ||\n\t\t\t\t\texclude === ParcelWatcher.GLOB_MARKERS.GlobStarWindows\n\t\t\t\t) {\n\t\t\t\t\tnormalizedExclude = path;\n\t\t\t\t}\n\n\t\t\t\t// Examples:\n\t\t\t\t// - **/node_modules/**\n\t\t\t\t// - **/.git/objects/**\n\t\t\t\t// - **/build-folder\n\t\t\t\t// - output/**\n\t\t\t\telse {\n\t\t\t\t\tconst startsWithGlobStar = exclude.startsWith(ParcelWatcher.GLOB_MARKERS.GlobStarPathStartPosix) || exclude.startsWith(ParcelWatcher.GLOB_MARKERS.GlobStarPathStartWindows);\n\t\t\t\t\tconst endsWithGlobStar = exclude.endsWith(ParcelWatcher.GLOB_MARKERS.GlobStarPathEndPosix) || exclude.endsWith(ParcelWatcher.GLOB_MARKERS.GlobStarPathEndWindows);\n\t\t\t\t\tif (startsWithGlobStar || endsWithGlobStar) {\n\t\t\t\t\t\tif (startsWithGlobStar && endsWithGlobStar) {\n\t\t\t\t\t\t\tnormalizedExclude = exclude.substring(ParcelWatcher.GLOB_MARKERS.GlobStarPathStartPosix.length, exclude.length - ParcelWatcher.GLOB_MARKERS.GlobStarPathEndPosix.length);\n\t\t\t\t\t\t} else if (startsWithGlobStar) {\n\t\t\t\t\t\t\tnormalizedExclude = exclude.substring(ParcelWatcher.GLOB_MARKERS.GlobStarPathStartPosix.length);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnormalizedExclude = exclude.substring(0, exclude.length - ParcelWatcher.GLOB_MARKERS.GlobStarPathEndPosix.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support even more glob patterns on Linux where we know\n\t\t\t\t\t// that each folder requires a file handle to watch.\n\t\t\t\t\t// Examples:\n\t\t\t\t\t// - node_modules/* (full form: **/node_modules/*/**)\n\t\t\t\t\tif (isLinux && normalizedExclude) {\n\t\t\t\t\t\tconst endsWithStar = normalizedExclude?.endsWith(ParcelWatcher.GLOB_MARKERS.StarPathEndPosix);\n\t\t\t\t\t\tif (endsWithStar) {\n\t\t\t\t\t\t\tnormalizedExclude = normalizedExclude.substring(0, normalizedExclude.length - ParcelWatcher.GLOB_MARKERS.StarPathEndPosix.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Not a glob pattern, take as is\n\t\t\telse {\n\t\t\t\tnormalizedExclude = exclude;\n\t\t\t}\n\n\t\t\tif (!normalizedExclude || normalizedExclude.includes(ParcelWatcher.GLOB_MARKERS.Star)) {\n\t\t\t\tcontinue; // skip for parcel (will be applied later by our glob matching)\n\t\t\t}\n\n\t\t\t// Absolute path: normalize to watched path and\n\t\t\t// exclude if not a parent of it otherwise.\n\t\t\tif (isAbsolute(normalizedExclude)) {\n\t\t\t\tif (!isEqualOrParent(normalizedExclude, path, !isLinux)) {\n\t\t\t\t\tcontinue; // exclude points to path outside of watched folder, ignore\n\t\t\t\t}\n\n\t\t\t\t// convert to relative path to ensure we\n\t\t\t\t// get the correct path casing going forward\n\t\t\t\tnormalizedExclude = normalizedExclude.substr(path.length);\n\t\t\t}\n\n\t\t\t// Finally take as relative path joined to watched path\n\t\t\texcludePaths.add(rtrim(join(path, normalizedExclude), sep));\n\t\t}\n\n\t\tif (excludePaths.size > 0) {\n\t\t\treturn Array.from(excludePaths);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate startPolling(request: IRecursiveWatchRequest, pollingInterval: number, restarts = 0): void {\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst instance = new DeferredPromise<void>();\n\n\t\tconst snapshotFile = randomPath(tmpdir(), 'vscode-watcher-snapshot');\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: IParcelWatcherInstance = {\n\t\t\trequest,\n\t\t\tready: instance.p,\n\t\t\trestarts,\n\t\t\ttoken: cts.token,\n\t\t\tstop: async () => {\n\t\t\t\tcts.dispose(true);\n\t\t\t\tpollingWatcher.dispose();\n\t\t\t\tunlinkSync(snapshotFile);\n\t\t\t}\n\t\t};\n\t\tthis.watchers.set(request.path, watcher);\n\n\t\t// Path checks for symbolic links / wrong casing\n\t\tconst { realPath, realPathDiffers, realPathLength } = this.normalizePath(request);\n\n\t\t// Warm up exclude/include patterns for usage\n\t\tconst excludePatterns = parseWatcherPatterns(request.path, request.excludes);\n\t\tconst includePatterns = request.includes ? parseWatcherPatterns(request.path, request.includes) : undefined;\n\n\t\tconst ignore = this.toExcludePaths(realPath, watcher.request.excludes);\n\n\t\tthis.trace(`Started watching: '${realPath}' with polling interval '${pollingInterval}' and native excludes '${ignore?.join(', ')}'`);\n\n\t\tlet counter = 0;\n\n\t\tconst pollingWatcher = new RunOnceScheduler(async () => {\n\t\t\tcounter++;\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We already ran before, check for events since\n\t\t\tif (counter > 1) {\n\t\t\t\tconst parcelEvents = await parcelWatcher.getEventsSince(realPath, snapshotFile, { ignore, backend: ParcelWatcher.PARCEL_WATCHER_BACKEND });\n\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Handle & emit events\n\t\t\t\tthis.onParcelEvents(parcelEvents, watcher, excludePatterns, includePatterns, realPathDiffers, realPathLength);\n\t\t\t}\n\n\t\t\t// Store a snapshot of files to the snapshot file\n\t\t\tawait parcelWatcher.writeSnapshot(realPath, snapshotFile, { ignore, backend: ParcelWatcher.PARCEL_WATCHER_BACKEND });\n\n\t\t\t// Signal we are ready now when the first snapshot was written\n\t\t\tif (counter === 1) {\n\t\t\t\tinstance.complete();\n\t\t\t}\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Schedule again at the next interval\n\t\t\tpollingWatcher.schedule();\n\t\t}, pollingInterval);\n\t\tpollingWatcher.schedule(0);\n\t}\n\n\tprivate startWatching(request: IRecursiveWatchRequest, restarts = 0): void {\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst instance = new DeferredPromise<parcelWatcher.AsyncSubscription | undefined>();\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: IParcelWatcherInstance = {\n\t\t\trequest,\n\t\t\tready: instance.p,\n\t\t\trestarts,\n\t\t\ttoken: cts.token,\n\t\t\tstop: async () => {\n\t\t\t\tcts.dispose(true);\n\n\t\t\t\tconst watcherInstance = await instance.p;\n\t\t\t\tawait watcherInstance?.unsubscribe();\n\t\t\t}\n\t\t};\n\t\tthis.watchers.set(request.path, watcher);\n\n\t\t// Path checks for symbolic links / wrong casing\n\t\tconst { realPath, realPathDiffers, realPathLength } = this.normalizePath(request);\n\n\t\t// Warm up exclude/include patterns for usage\n\t\tconst excludePatterns = parseWatcherPatterns(request.path, request.excludes);\n\t\tconst includePatterns = request.includes ? parseWatcherPatterns(request.path, request.includes) : undefined;\n\n\t\tconst ignore = this.toExcludePaths(realPath, watcher.request.excludes);\n\t\tparcelWatcher.subscribe(realPath, (error, parcelEvents) => {\n\t\t\tif (watcher.token.isCancellationRequested) {\n\t\t\t\treturn; // return early when disposed\n\t\t\t}\n\n\t\t\t// In any case of an error, treat this like a unhandled exception\n\t\t\t// that might require the watcher to restart. We do not really know\n\t\t\t// the state of parcel at this point and as such will try to restart\n\t\t\t// up to our maximum of restarts.\n\t\t\tif (error) {\n\t\t\t\tthis.onUnexpectedError(error, watcher);\n\t\t\t}\n\n\t\t\t// Handle & emit events\n\t\t\tthis.onParcelEvents(parcelEvents, watcher, excludePatterns, includePatterns, realPathDiffers, realPathLength);\n\t\t}, {\n\t\t\tbackend: ParcelWatcher.PARCEL_WATCHER_BACKEND,\n\t\t\tignore\n\t\t}).then(parcelWatcher => {\n\t\t\tthis.trace(`Started watching: '${realPath}' with backend '${ParcelWatcher.PARCEL_WATCHER_BACKEND}' and native excludes '${ignore?.join(', ')}'`);\n\n\t\t\tinstance.complete(parcelWatcher);\n\t\t}).catch(error => {\n\t\t\tthis.onUnexpectedError(error, watcher);\n\n\t\t\tinstance.complete(undefined);\n\t\t});\n\t}\n\n\tprivate onParcelEvents(parcelEvents: parcelWatcher.Event[], watcher: IParcelWatcherInstance, excludes: ParsedPattern[], includes: ParsedPattern[] | undefined, realPathDiffers: boolean, realPathLength: number): void {\n\t\tif (parcelEvents.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Normalize events: handle NFC normalization and symlinks\n\t\t// It is important to do this before checking for includes\n\t\t// and excludes to check on the original path.\n\t\tconst { events: normalizedEvents, rootDeleted } = this.normalizeEvents(parcelEvents, watcher.request, realPathDiffers, realPathLength);\n\n\t\t// Check for excludes\n\t\tconst includedEvents = this.handleExcludeIncludes(normalizedEvents, excludes, includes);\n\n\t\t// Coalesce events: merge events of same kind\n\t\tconst coalescedEvents = coalesceEvents(includedEvents);\n\n\t\t// Filter events: check for specific events we want to exclude\n\t\tconst filteredEvents = this.filterEvents(coalescedEvents, watcher.request, rootDeleted);\n\n\t\t// Broadcast to clients\n\t\tthis.emitEvents(filteredEvents);\n\n\t\t// Handle root path delete if confirmed from coalesced events\n\t\tif (rootDeleted && coalescedEvents.some(event => event.path === watcher.request.path && event.type === FileChangeType.DELETED)) {\n\t\t\tthis.onWatchedPathDeleted(watcher);\n\t\t}\n\t}\n\n\tprivate handleExcludeIncludes(parcelEvents: parcelWatcher.Event[], excludes: ParsedPattern[], includes: ParsedPattern[] | undefined): IDiskFileChange[] {\n\t\tconst events: IDiskFileChange[] = [];\n\n\t\tfor (const { path, type: parcelEventType } of parcelEvents) {\n\t\t\tconst type = ParcelWatcher.MAP_PARCEL_WATCHER_ACTION_TO_FILE_CHANGE.get(parcelEventType)!;\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.trace(`${type === FileChangeType.ADDED ? '[ADDED]' : type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${path}`);\n\t\t\t}\n\n\t\t\t// Add to buffer unless excluded or not included (not if explicitly disabled)\n\t\t\tif (excludes.some(exclude => exclude(path))) {\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tthis.trace(` >> ignored (excluded) ${path}`);\n\t\t\t\t}\n\t\t\t} else if (includes && includes.length > 0 && !includes.some(include => include(path))) {\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tthis.trace(` >> ignored (not included) ${path}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevents.push({ type, path });\n\t\t\t}\n\t\t}\n\n\t\treturn events;\n\t}\n\n\tprivate emitEvents(events: IDiskFileChange[]): void {\n\t\tif (events.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tfor (const event of events) {\n\t\t\t\tthis.trace(` >> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t}\n\t\t}\n\n\t\t// Broadcast to clients via throttler\n\t\tconst worked = this.throttledFileChangesWorker.work(events);\n\n\t\t// Logging\n\t\tif (!worked) {\n\t\t\tthis.warn(`started ignoring events due to too many file change events at once (incoming: ${events.length}, most recent change: ${events[0].path}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t} else {\n\t\t\tif (this.throttledFileChangesWorker.pending > 0) {\n\t\t\t\tthis.trace(`started throttling events due to large amount of file change events at once (pending: ${this.throttledFileChangesWorker.pending}, most recent change: ${events[0].path}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate normalizePath(request: IRecursiveWatchRequest): { realPath: string; realPathDiffers: boolean; realPathLength: number } {\n\t\tlet realPath = request.path;\n\t\tlet realPathDiffers = false;\n\t\tlet realPathLength = request.path.length;\n\n\t\ttry {\n\n\t\t\t// First check for symbolic link\n\t\t\trealPath = realpathSync(request.path);\n\n\t\t\t// Second check for casing difference\n\t\t\t// Note: this will be a no-op on Linux platforms\n\t\t\tif (request.path === realPath) {\n\t\t\t\trealPath = realcaseSync(request.path) ?? request.path;\n\t\t\t}\n\n\t\t\t// Correct watch path as needed\n\t\t\tif (request.path !== realPath) {\n\t\t\t\trealPathLength = realPath.length;\n\t\t\t\trealPathDiffers = true;\n\n\t\t\t\tthis.trace(`correcting a path to watch that seems to be a symbolic link or wrong casing (original: ${request.path}, real: ${realPath})`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn { realPath, realPathDiffers, realPathLength };\n\t}\n\n\tprivate normalizeEvents(events: parcelWatcher.Event[], request: IRecursiveWatchRequest, realPathDiffers: boolean, realPathLength: number): { events: parcelWatcher.Event[]; rootDeleted: boolean } {\n\t\tlet rootDeleted = false;\n\n\t\tfor (const event of events) {\n\n\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\tif (isMacintosh) {\n\t\t\t\tevent.path = normalizeNFC(event.path);\n\t\t\t}\n\n\t\t\t// Workaround for https://github.com/parcel-bundler/watcher/issues/68\n\t\t\t// where watching root drive letter adds extra backslashes.\n\t\t\tif (isWindows) {\n\t\t\t\tif (request.path.length <= 3) { // for ex. c:, C:\\\n\t\t\t\t\tevent.path = normalize(event.path);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert paths back to original form in case it differs\n\t\t\tif (realPathDiffers) {\n\t\t\t\tevent.path = request.path + event.path.substr(realPathLength);\n\t\t\t}\n\n\t\t\t// Check for root deleted\n\t\t\tif (event.path === request.path && event.type === 'delete') {\n\t\t\t\trootDeleted = true;\n\t\t\t}\n\t\t}\n\n\t\treturn { events, rootDeleted };\n\t}\n\n\tprivate filterEvents(events: IDiskFileChange[], request: IRecursiveWatchRequest, rootDeleted: boolean): IDiskFileChange[] {\n\t\tif (!rootDeleted) {\n\t\t\treturn events;\n\t\t}\n\n\t\treturn events.filter(event => {\n\t\t\tif (event.path === request.path && event.type === FileChangeType.DELETED) {\n\t\t\t\t// Explicitly exclude changes to root if we have any\n\t\t\t\t// to avoid VS Code closing all opened editors which\n\t\t\t\t// can happen e.g. in case of network connectivity\n\t\t\t\t// issues\n\t\t\t\t// (https://github.com/microsoft/vscode/issues/136673)\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tprivate onWatchedPathDeleted(watcher: IParcelWatcherInstance): void {\n\t\tthis.warn('Watcher shutdown because watched path got deleted', watcher);\n\n\t\tconst parentPath = dirname(watcher.request.path);\n\t\tif (existsSync(parentPath)) {\n\t\t\tconst nodeWatcher = new NodeJSFileWatcherLibrary({ path: parentPath, excludes: [], recursive: false }, changes => {\n\t\t\t\tif (watcher.token.isCancellationRequested) {\n\t\t\t\t\treturn; // return early when disposed\n\t\t\t\t}\n\n\t\t\t\t// Watcher path came back! Restart watching...\n\t\t\t\tfor (const { path, type } of changes) {\n\t\t\t\t\tif (path === watcher.request.path && (type === FileChangeType.ADDED || type === FileChangeType.UPDATED)) {\n\t\t\t\t\t\tthis.warn('Watcher restarts because watched path got created again', watcher);\n\n\t\t\t\t\t\t// Stop watching that parent folder\n\t\t\t\t\t\tnodeWatcher.dispose();\n\n\t\t\t\t\t\t// Restart the file watching\n\t\t\t\t\t\tthis.restartWatching(watcher);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, msg => this._onDidLogMessage.fire(msg), this.verboseLogging);\n\n\t\t\t// Make sure to stop watching when the watcher is disposed\n\t\t\twatcher.token.onCancellationRequested(() => nodeWatcher.dispose());\n\t\t}\n\t}\n\n\tprivate onUnexpectedError(error: unknown, watcher?: IParcelWatcherInstance): void {\n\t\tconst msg = toErrorMessage(error);\n\n\t\t// Specially handle ENOSPC errors that can happen when\n\t\t// the watcher consumes so many file descriptors that\n\t\t// we are running into a limit. We only want to warn\n\t\t// once in this case to avoid log spam.\n\t\t// See https://github.com/microsoft/vscode/issues/7950\n\t\tif (msg.indexOf('No space left on device') !== -1) {\n\t\t\tif (!this.enospcErrorLogged) {\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)', watcher);\n\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Any other error is unexpected and we should try to\n\t\t// restart the watcher as a result to get into healthy\n\t\t// state again if possible and if not attempted too much\n\t\telse {\n\t\t\tthis.error(`Unexpected error: ${msg} (EUNKNOWN)`, watcher);\n\n\t\t\tthis._onDidError.fire(msg);\n\t\t}\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const [path] of this.watchers) {\n\t\t\tawait this.stopWatching(path);\n\t\t}\n\n\t\tthis.watchers.clear();\n\t}\n\n\tprotected restartWatching(watcher: IParcelWatcherInstance, delay = 800): void {\n\n\t\t// Restart watcher delayed to accomodate for\n\t\t// changes on disk that have triggered the\n\t\t// need for a restart in the first place.\n\t\tconst scheduler = new RunOnceScheduler(async () => {\n\t\t\tif (watcher.token.isCancellationRequested) {\n\t\t\t\treturn; // return early when disposed\n\t\t\t}\n\n\t\t\t// Await the watcher having stopped, as this is\n\t\t\t// needed to properly re-watch the same path\n\t\t\tawait this.stopWatching(watcher.request.path);\n\n\t\t\t// Start watcher again counting the restarts\n\t\t\tif (watcher.request.pollingInterval) {\n\t\t\t\tthis.startPolling(watcher.request, watcher.request.pollingInterval, watcher.restarts + 1);\n\t\t\t} else {\n\t\t\t\tthis.startWatching(watcher.request, watcher.restarts + 1);\n\t\t\t}\n\t\t}, delay);\n\n\t\tscheduler.schedule();\n\t\twatcher.token.onCancellationRequested(() => scheduler.dispose());\n\t}\n\n\tprivate async stopWatching(path: string): Promise<void> {\n\t\tconst watcher = this.watchers.get(path);\n\t\tif (watcher) {\n\t\t\tthis.trace(`stopping file watcher on ${watcher.request.path}`);\n\n\t\t\tthis.watchers.delete(path);\n\n\t\t\ttry {\n\t\t\t\tawait watcher.stop();\n\t\t\t} catch (error) {\n\t\t\t\tthis.error(`Unexpected error stopping watcher: ${toErrorMessage(error)}`, watcher);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected normalizeRequests(requests: IRecursiveWatchRequest[], validatePaths = true): IRecursiveWatchRequest[] {\n\t\tconst requestTrie = TernarySearchTree.forPaths<IRecursiveWatchRequest>(!isLinux);\n\n\t\t// Sort requests by path length to have shortest first\n\t\t// to have a way to prevent children to be watched if\n\t\t// parents exist.\n\t\trequests.sort((requestA, requestB) => requestA.path.length - requestB.path.length);\n\n\t\t// Only consider requests for watching that are not\n\t\t// a child of an existing request path to prevent\n\t\t// duplication. In addition, drop any request where\n\t\t// everything is excluded (via `**` glob).\n\t\t//\n\t\t// However, allow explicit requests to watch folders\n\t\t// that are symbolic links because the Parcel watcher\n\t\t// does not allow to recursively watch symbolic links.\n\t\tfor (const request of requests) {\n\t\t\tif (request.excludes.includes(GLOBSTAR)) {\n\t\t\t\tcontinue; // path is ignored entirely (via `**` glob exclude)\n\t\t\t}\n\n\t\t\t// Check for overlapping requests\n\t\t\tif (requestTrie.findSubstr(request.path)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst realpath = realpathSync(request.path);\n\t\t\t\t\tif (realpath === request.path) {\n\t\t\t\t\t\tthis.trace(`ignoring a path for watching who's parent is already watched: ${request.path}`);\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.trace(`ignoring a path for watching who's realpath failed to resolve: ${request.path} (error: ${error})`);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for invalid paths\n\t\t\tif (validatePaths) {\n\t\t\t\ttry {\n\t\t\t\t\tconst stat = statSync(request.path);\n\t\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\t\tthis.trace(`ignoring a path for watching that is a file and not a folder: ${request.path}`);\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.trace(`ignoring a path for watching who's stat info failed to resolve: ${request.path} (error: ${error})`);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequestTrie.set(request.path, request);\n\t\t}\n\n\t\treturn Array.from(requestTrie).map(([, request]) => request);\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\t}\n\n\tprivate trace(message: string) {\n\t\tif (this.verboseLogging) {\n\t\t\tthis._onDidLogMessage.fire({ type: 'trace', message: this.toMessage(message) });\n\t\t}\n\t}\n\n\tprivate warn(message: string, watcher?: IParcelWatcherInstance) {\n\t\tthis._onDidLogMessage.fire({ type: 'warn', message: this.toMessage(message, watcher) });\n\t}\n\n\tprivate error(message: string, watcher: IParcelWatcherInstance | undefined) {\n\t\tthis._onDidLogMessage.fire({ type: 'error', message: this.toMessage(message, watcher) });\n\t}\n\n\tprivate toMessage(message: string, watcher?: IParcelWatcherInstance): string {\n\t\treturn watcher ? `[File Watcher (parcel)] ${message} (path: ${watcher.request.path})` : `[File Watcher (parcel)] ${message}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INonRecursiveWatchRequest, IRecursiveWatchRequest, IUniversalWatcher, IUniversalWatchRequest } from 'vs/platform/files/common/watcher';\nimport { Event } from 'vs/base/common/event';\nimport { ParcelWatcher } from 'vs/platform/files/node/watcher/parcel/parcelWatcher';\nimport { NodeJSWatcher } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcher';\nimport { Promises } from 'vs/base/common/async';\n\nexport class UniversalWatcher extends Disposable implements IUniversalWatcher {\n\n\tprivate readonly recursiveWatcher = this._register(new ParcelWatcher());\n\tprivate readonly nonRecursiveWatcher = this._register(new NodeJSWatcher());\n\n\treadonly onDidChangeFile = Event.any(this.recursiveWatcher.onDidChangeFile, this.nonRecursiveWatcher.onDidChangeFile);\n\treadonly onDidLogMessage = Event.any(this.recursiveWatcher.onDidLogMessage, this.nonRecursiveWatcher.onDidLogMessage);\n\treadonly onDidError = Event.any(this.recursiveWatcher.onDidError, this.nonRecursiveWatcher.onDidError);\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tconst recursiveWatchRequests: IRecursiveWatchRequest[] = [];\n\t\tconst nonRecursiveWatchRequests: INonRecursiveWatchRequest[] = [];\n\n\t\tfor (const request of requests) {\n\t\t\tif (request.recursive) {\n\t\t\t\trecursiveWatchRequests.push(request);\n\t\t\t} else {\n\t\t\t\tnonRecursiveWatchRequests.push(request);\n\t\t\t}\n\t\t}\n\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.watch(recursiveWatchRequests),\n\t\t\tthis.nonRecursiveWatcher.watch(nonRecursiveWatchRequests)\n\t\t]);\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.setVerboseLogging(enabled),\n\t\t\tthis.nonRecursiveWatcher.setVerboseLogging(enabled)\n\t\t]);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.stop(),\n\t\t\tthis.nonRecursiveWatcher.stop()\n\t\t]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { UniversalWatcher } from 'vs/platform/files/node/watcher/watcher';\n\nconst server = new Server('watcher');\nconst service = new UniversalWatcher();\nserver.registerChannel('watcher', ProxyChannel.fromService(service));\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","createDecorator","mapFn","target","key","descriptor","fnKey","fn","exports","memoize","_target","memoizeKey","args","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","throttle","lastRunKey","pendingKey","nextTime","ErrorHandler","e","ErrorNoTelemetry","listener","newUnexpectedErrorHandler","setUnexpectedErrorHandler","onUnexpectedError","isCancellationError","onUnexpectedExternalError","transformErrorForSerialization","error","name","message","stack","canceledName","CancellationError","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","NotImplementedError","NotSupportedError","ExpectedError","msg","BugIndicatingError","tail","array","n","tail2","arr","equals","one","other","itemEquals","a","b","removeFastWithoutKeepingOrder","index","last","binarySearch","comparator","binarySearch2","length","compareToKey","low","high","mid","comp","findFirstInSorted","quickSelect","nth","data","compare","pivotValue","lower","higher","pivots","value","val","groupBy","currentGroup","element","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","delta","splices","removed","added","splice","top","topStep","topAsync","batch","token","resolve","reject","o","m","errors_1","j","coalesce","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","isNonEmptyArray","distinct","keyFn","seen","uniqueFilter","findLast","predicate","idx","lastIndex","firstOrDefault","notFoundValue","lastOrDefault","commonPrefixLength","flatten","range","arg","indexer","mapper","r","t","insert","remove","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","temp","pushToStart","pushToEnd","pushMany","items","item","mapArrayOrNot","asArray","x","getRandomElement","mapFind","mapped","insertInto","newItems","startIdx","getActualStartIndex","originalLength","newItemsLength","CompareResult","isLessThan","isGreaterThan","isNeitherLessOrGreaterThan","compareBy","selector","tieBreakComparators","comparators","item1","item2","numberComparator","findMaxBy","max","findLastMaxBy","findMinBy","ArrayQueue","endIdx","count","CallbackIterable","iterate","handler","cb","first","_callback","once","_this","didCall","Iterable","is","thing","_empty","empty","single","iterable","isEmpty","some","find","filter","map","concat","iterables","concatNested","reduce","initialValue","forEach","slice","consume","atMost","consumed","iterator","next","collect","at","bt","ai","bi","an","bn","Lazy","executor","f","TRACK_DISPOSABLES","disposableTracker","setDisposableTracker","tracker","__is_disposable_tracked__","child","parent","Disposable","disposable","trackDisposable","markAsDisposed","setParentOfDisposable","setParentOfDisposables","children","markAsSingleton","singleton","isDisposable","dispose","iterator_1","errors","d","disposeIfDisposable","disposables","combinedDisposable","toDisposable","self","functional_1","DisposableStore","MutableDisposable","oldValue","RefCountedDisposable","_disposable","SafeDisposable","callback","ReferenceCollection","reference","object","AsyncReferenceCollection","referenceCollection","ref","ImmortalReference","disposeOnReturn","store","Node","LinkedList","node","atTheEnd","newNode","oldLast","oldFirst","didRemove","res","anchor","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_locale","_language","_translationsConfigFile","_userAgent","nodeProcess","isElectronProcess","isElectronRenderer","el","rawNlsConfig","nlsConfig","resolved","Platform","PlatformToString","platform","_platform","Language","isDefaultVariant","isDefault","pending","candidate","lastId","myId","OperatingSystem","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","safeProcess","platform_1","sandboxProcess","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","type","validateString","isPathSeparator","code","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","sep","pathObject","dir","base","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","process","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","ext","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","trailingSeparator","hasRoot","Source","TerminateResponseCode","sanitizeProcessEnvironment","env","preserve","set","keysToRemove","envKey","removeDangerousEnvVariables","hasPerformanceNow","StopWatch","highResolution","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","lifecycle_1","_addLeakageTraceLogic","options","origListenerDidAdd","Stacktrace","event","thisArgs","didFire","snapshot","each","signal","any","events","merge","initial","output","emitter","Emitter","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","firstCall","cache","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","runAndSubscribe","runAndSubscribeWithStore","run","EmitterObserver","obs","_observable","_change","fromObservable","EventProfiling","listenerCount","stopwatch_1","elapsed","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","LeakageMonitor","customThreshold","threshold","topStack","topCount","Listener","callbackThis","listeners","linkedList_1","firstListener","removeMonitor","removeListener","PrivateEventDeliveryQueue","EventDeliveryQueue","EventDeliveryQueueElement","newQueue","AsyncEmitter","promiseJoin","thenables","p","values","PauseableEmitter","DebounceEmitter","MicrotaskEmitter","EventMultiplexer","EventBufferer","Relay","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","event_1","CancellationTokenSource","cancel","Cache","task","cts","cancellation_1","promise","LRUCachedFunction","CachedFunction","isReadable","isReadableStream","isReadableBufferedStream","newWriteableStream","WriteableStreamImpl","fullDataBuffer","pendingWritePromises","pendingWritePromise","consumeReadable","readable","chunks","chunk","peekReadable","maxChunks","lastReadChunk","consumeStream","stream","listenStream","destroyed","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","emptyStream","toReadable","transform","transformer","prefixedReadable","prefix","prefixHandled","prefixedStream","hasBuffer","textEncoder","textDecoder","VSBuffer","byteLength","source","buffers","totalLength","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","readUInt16LE","writeUInt16LE","destination","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","newWriteableBufferStream","prefixedBufferReadable","prefixedBufferStream","decodeBase64","encoded","building","remainder","bufi","append","unpadded","base64Alphabet","base64UrlSafeAlphabet","encodeBase64","padded","urlSafe","dictionary","c","isFalsyOrWhitespace","str","_formatRegexp","format","match","group","_format2Regexp","format2","template","escape","html","escapeRegExpCharacters","character","ch","truncate","maxLength","suffix","trim","haystack","needle","trimmed","ltrim","rtrim","needleLen","haystackLen","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","modifiers","regExpLeadsToEndlessLoop","regexp","regExpContainsBackreference","regexpValue","regExpFlags","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","replaceAsync","search","replacer","parts","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","CodePointIterator","codePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","initialOffset","graphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","endOffset","charCount","CONTAINS_RTL","makeContainsRtl","containsRTL","IS_BASIC_ASCII","isBasicASCII","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","startsWithUTF8BOM","stripUTF8BOM","fuzzyContains","query","queryLen","targetLower","lastIndexOf","indexOf","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","getNLines","singleLetterHash","getGraphemeBreakType","breakTypeA","breakTypeB","GraphemeBreakType","getGraphemeBreakRawData","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","getOffsetBeforeLastEmojiComponent","isEmojiModifier","resultOffset","CodePoint","AmbiguousCharacters","locales","confusableDictionary","lazy_1","cache_1","arrayToMap","mergeMaps","map1","map2","intersectMaps","_a","filteredLocales","l","languageSpecificMap","locale","commonMap","k","InvisibleCharacters","getOrSet","mapToString","entries","setToString","StringIterator","aCode","thisCode","ConfigKeysIterator","_caseSensitive","justSeps","strings_1","PathIterator","_splitOnBackslash","pos","UriIteratorState","UriIterator","_ignorePathCasing","_ignoreQueryAndFragment","TernarySearchTreeNode","tmp","Dir","TernarySearchTree","ignorePathCasing","ignoreQueryAndFragment","segments","keys","arrays_1","entry","iter","oldElement","bf","d1","d2","superStr","min","segment","newChild","bucket","nodeIsBalanced","ResourceMapEntry","uri","ResourceMap","mapOrKeyFn","toKey","resource","clb","thisArg","_","ResourceSet","entriesOrKey","_b","callbackfn","_value","Touch","LinkedMap","_c","touch","state","current","newSize","currentSize","previous","LRUCache","limit","ratio","nfcCache","map_1","normalizeNFC","normalize","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","regex","isString","isStringArray","elem","isObject","isTypedArray","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","isUndefinedOrNull","assertType","condition","assertIsDefined","assertAllDefined","hasOwnProperty","isEmptyObject","isFunction","areFunctions","objects","validateConstraints","constraints","validateConstraint","constraint","withNullAsUndefined","withUndefinedAsNull","toSlashes","osPath","path_1","toPosixPath","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","ignoreCase","identityEquals","isEqualOrParent","parentCandidate","sepOffset","char0","sanitizeFilePath","cwd","isRootOrDriveLetter","pathNormalized","hasDriveLetter","getDriveLetter","indexOfPath","parseLineAndColumnAware","rawPath","line","column","segmentAsNumber","types_1","pathChars","randomPath","randomLength","randomFileName","deepClone","deepFreeze","_hasOwnProperty","prop","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","oneKeys","otherKeys","safeStringify","baseValue","targetValue","getCaseInsensitive","lowercaseKey","equivalentKey","getAllPropertyNames","proto","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","schemeOrData","authority","fragment","uriToFsPath","change","Uri","percentDecode","components","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","isRemoteConsoleLog","parse","parsedArguments","stackArgument","getFirstFrame","arg0","topFrame","findFirstFrame","matches","uri_1","newlineIndex","log","label","isOneStringArg","consoleArgs","color","stringify","revive","depth","buffer_1","Schemas","RemoteAuthoritiesImpl","schema","delegate","serverRootPath","host","port","connectionToken","FileAccessImpl","uriOrModule","moduleIdToUrl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","originalFSPath","ExtUri","uri1","uri2","ignoreFragment","network_1","extpath","dirname","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","fsp","isRootSep","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","parseMetaData","dataUri","metadata","property","mime","toLocalResource","localScheme","isThenable","createCancelablePromise","thenable","onfinally","raceCancellation","defaultValue","raceCancellationError","raceCancellablePromises","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","promiseFactory","onComplete","Sequencer","promiseTask","SequencerByKey","newPromise","timeoutDeferred","scheduled","microtaskDeferred","Delayer","defaultDelay","ThrottledDelayer","Barrier","AutoOpenBarrier","autoOpenTimeMs","millis","disposableTimeout","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","firstParallel","promiseList","todo","finish","Limiter","maxDegreeOfParalellism","iLimitedTask","Queue","ResourceQueue","DeferredPromise","queue","extUri","resources_1","drainer","TimeoutTimer","runner","IntervalTimer","interval","RunOnceScheduler","ProcessTimeRunOnceScheduler","RunOnceWorker","unit","units","ThrottledWorker","IdleValue","retry","retries","lastError","TaskSequentializer","taskId","onCancel","promiseReject","IntervalCounter","nowFn","now","Promises","settled","firstError","withAsyncBody","bodyFn","AsyncIterableSourceState","AsyncIterableObject","writer","filterFn","CancelableAsyncIterableObject","_source","createCancelableAsyncIterable","innerIterable","getEmptyExpression","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","splitGlobAware","splitChar","inBraces","inBrackets","curVal","char","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","choice","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","NULL","parsePattern","arg1","patternKey","parsedPattern","wrapRelativePattern","trivia1","trimForExclusions","trivia2","trivia3","trivia4and5","toRegExp","arg2","wrappedPattern","basename","extpath_1","slashBase","backslashBase","basenames","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","allPaths","all","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","regExp","hasSibling","isRelativePattern","resultPattern","parsedExpression","rp","getBasenameTerms","patternOrExpression","getPathTerms","expression","parseExpressionPattern","resultExpression","resultPromises","async_1","resultPromise","when","clausePattern","matched","basenamePatterns","patterns","aggregate","aggregatedPatterns","patternsEquals","patternsA","patternsB","RimRafMode","rimraf","mode","rimrafUnlink","rimrafMove","pathInTemp","os_1","fs","util_1","rimrafSync","readdir","handleDirectoryChildren","safeReaddirWithFileTypes","isFile","isDirectory","isSymbolicLink","lstat","readdirSync","normalization_1","readDirsInDir","dirPath","directories","SymlinkSupport","whenDeleted","intervalMs","running","stat","lstats","existsFile","symbolicLink","existsDirectory","writeQueues","writeFile","ensuredOptions","ensureWriteOptions","doWriteFileAndFlush","canFlush","configureFlushOnWrite","enabled","openError","fd","writeError","syncError","closeError","writeFileSync","copy","doCopy","COPY_MODE_MASK","payload","doCopySymlink","doCopyDirectory","doCopyFile","files","file","linkTarget","position","bytesRead","bytesWritten","realcaseSync","found","pfs_1","ix","realcase","realpath","normalizePath","realpathSync","processes_1","getWindowsShell","createQueuedSender","childProcess","msgQueue","useQueue","send","msgQueueCopy","win32","findExecutable","command","Types","fileExists","pfs","statValue","pathEntry","fullPath","withExtension","RequestType","requestTypeToStr","ResponseType","responseTypeToStr","State","BufferReader","bytes","BufferWriter","DataType","createSizeBuffer","size","readSizeBuffer","reader","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","logger","timeoutDelay","channelName","channel","response","msgLength","header","body","request","cancellationTokenSource","pendingRequests","requests","RequestInitiator","ChannelClient","that","cancellationToken","doRequest","uninitializedPromise","cancellationTokenListener","__decorate","decorators_1","IPCServer","onDidClientConnect","onDidClientDisconnect","channelServer","channelClient","connection","routerOrClientFilter","connectionPromise","channelPromise","getDelayedChannel","clientFilter","eventMultiplexer","onDidAddConnection","onDidRemoveConnection","IPCClient","ipcLogger","relay","getNextTickChannel","didTick","StaticRouter","hub","ProxyChannel","fromService","service","disableMarshalling","mapEventNameToEvent","propertyIsEvent","eventImpl","propertyIsDynamicEvent","marshalling_1","toService","propKey","methodArgs","strings","colorTables","prettyWithoutArrays","pretty","logWithColors","direction","req","initiator","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","requestId","Server","ipc_1","Client","modulePath","forkOpts","objects_1","processes_2","child_process_1","onMessageEmitter","console_1","sender","onMessage","onExit","nls","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","toErrorMessage","arrays","types","detail","isErrorWithActions","createErrorWithActions","messageOrError","actions","_util","getServiceDependencies","ctor","storeServiceDependency","serviceId","refineServiceDecorator","serviceIdentifier","instantiation_1","isFileOpenForWriteOptions","FileType","FilePermission","FileSystemProviderCapabilities","hasReadWriteCapability","provider","hasFileFolderCopyCapability","hasFileCloneCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","hasFileAtomicReadCapability","FileSystemProviderErrorCode","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","ensureFileSystemProviderError","nls_1","toFileSystemProviderErrorCode","toFileOperationResult","FileOperationError","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","entriesByType","hasTypesFilter","isParent","fileOperationResult","NotModifiedSinceFileOperationError","FileOperationResult","FileKind","etag","whenProviderRegistered","fileService","ByteSize","Arch","getPlatformLimits","arch","isRecursiveWatchRequest","AbstractWatcherClient","onFileChanges","onLogMessage","verboseLogging","AbstractNonRecursiveWatcherClient","AbstractUniversalWatcherClient","toFileChanges","coalesceEvents","coalescer","EventCoalescer","normalizeWatcherPattern","glob_1","parseWatcherPatterns","existingEvent","keepEvent","currentChangeType","newChangeType","addOrChangeEvents","deletedPaths","e1","e2","deletedPath","files_1","NodeJSFileWatcherLibrary","onDidFilesChange","watcher_1","realPath","extpath_2","pathBasename","watcher","fs_1","folderChildren","mapPathToStatDisposable","raw","changedFileName","timeoutHandle","skipIncludeExcludeChecks","exclude","include","fileChanges","coalescedFileChanges","watchFileContents","onData","onReady","bufferSize","isReading","NodeJSWatcher","normalizedRequests","requestsToStartWatching","pathsToStopWatching","normalizedRequest","pathToStopWatching","instance","nodejsWatcherLib_1","requestsMap","ParcelWatcher","excludes","excludePaths","isGlob","normalizedExclude","startsWithGlobStar","endsWithGlobStar","pollingInterval","restarts","snapshotFile","pollingWatcher","realPathDiffers","realPathLength","excludePatterns","includePatterns","ignore","counter","parcelEvents","parcelWatcher","includes","normalizedEvents","rootDeleted","includedEvents","coalescedEvents","filteredEvents","parcelEventType","parentPath","nodeWatcher","errorMessage_1","scheduler","validatePaths","requestTrie","requestA","requestB","UniversalWatcher","parcelWatcher_1","nodejsWatcher_1","recursiveWatchRequests","nonRecursiveWatchRequests","server","ipc_cp_1"],"file":"watcherMain.js"}