{"version":3,"sources":["out-vscode-reh-web/vs/base/worker/fake","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/nls.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/worker/workerMain.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/codicons.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/diff/diffChange.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/errors.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/arrays.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/assert.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/functional.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/iterator.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/keyCodes.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/lazy.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/lifecycle.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/linkedList.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/platform.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/process.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/path.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/stopwatch.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/event.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/cancellation.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/cache.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/strings.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/hash.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/diff/diff.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/types.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/objects.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/uint.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/uri.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/base/common/worker/simpleWorker.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/core/characterClassifier.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/core/position.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/core/range.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/core/selection.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/core/wordCharacterClassifier.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/core/wordHelper.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/algorithms/diffAlgorithm.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/algorithms/myersDiffAlgorithm.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/algorithms/utils.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/algorithms/dynamicProgrammingDiffing.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/linesDiffComputer.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/smartLinesDiffComputer.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/standardLinesDiffComputer.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/diff/linesDiffComputers.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/languages/linkComputer.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/languages/supports/inplaceReplaceSupport.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/model.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/model/prefixSumComputer.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/model/mirrorTextModel.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/model/textModelSearch.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/services/unicodeTextModelHighlighter.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/standalone/standaloneEnums.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/tokenizationRegistry.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/languages.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/services/editorBaseApi.ts","out-vscode-reh-web/vs/base/worker/file:/vscode/code-server/lib/vscode/src/vs/editor/common/services/editorSimpleWorker.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\n\ninterface INLSPluginConfig {\n\tavailableLanguages?: INLSPluginConfigAvailableLanguages;\n\tloadBundle?: BundleLoader;\n\ttranslationServiceUrl?: string;\n}\n\nexport interface INLSPluginConfigAvailableLanguages {\n\t'*'?: string;\n\t[module: string]: string | undefined;\n}\n\ninterface BundleLoader {\n\t(bundle: string, locale: string | null, cb: (err: Error, messages: string[] | IBundledStrings) => void): void;\n}\n\ninterface IBundledStrings {\n\t[moduleId: string]: string[];\n}\n\nexport interface ILocalizeInfo {\n\tkey: string;\n\tcomment: string[];\n}\n\ninterface ILocalizeFunc {\n\t(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\t(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n}\n\ninterface IBoundLocalizeFunc {\n\t(idx: number, defaultValue: null): string;\n}\n\ninterface IConsumerAPI {\n\tlocalize: ILocalizeFunc | IBoundLocalizeFunc;\n\tgetConfiguredDefaultLocale(stringFromLocalizeCall: string): string | undefined;\n}\n\nfunction _format(message: string, args: (string | number | boolean | undefined | null)[]): string {\n\tlet result: string;\n\n\tif (args.length === 0) {\n\t\tresult = message;\n\t} else {\n\t\tresult = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n\t\t\tconst index = rest[0];\n\t\t\tconst arg = args[index];\n\t\t\tlet result = match;\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tresult = arg;\n\t\t\t} else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n\t\t\t\tresult = String(arg);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tif (isPseudo) {\n\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\tresult = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t}\n\n\treturn result;\n}\n\nfunction findLanguageForModule(config: INLSPluginConfigAvailableLanguages, name: string) {\n\tlet result = config[name];\n\tif (result) {\n\t\treturn result;\n\t}\n\tresult = config['*'];\n\tif (result) {\n\t\treturn result;\n\t}\n\treturn null;\n}\n\nfunction endWithSlash(path: string): string {\n\tif (path.charAt(path.length - 1) === '/') {\n\t\treturn path;\n\t}\n\treturn path + '/';\n}\n\nasync function getMessagesFromTranslationsService(translationServiceUrl: string, language: string, name: string): Promise<string[] | IBundledStrings> {\n\tconst url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n\tconst res = await fetch(url);\n\tif (res.ok) {\n\t\tconst messages = await res.json() as string[] | IBundledStrings;\n\t\treturn messages;\n\t}\n\tthrow new Error(`${res.status} - ${res.statusText}`);\n}\n\nfunction createScopedLocalize(scope: string[]): IBoundLocalizeFunc {\n\treturn function (idx: number, defaultValue: null) {\n\t\tconst restArgs = Array.prototype.slice.call(arguments, 2);\n\t\treturn _format(scope[idx], restArgs);\n\t};\n}\n\n/**\n * Localize a message.\n *\n * `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * For example, `localize({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n */\nexport function localize(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * Localize a message.\n *\n * `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * For example, `localize('sayHello', 'hello {0}', name)`\n */\nexport function localize(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\nexport function localize(data: ILocalizeInfo | string, message: string, ...args: (string | number | boolean | undefined | null)[]): string {\n\treturn _format(message, args);\n}\n\n/**\n *\n * @param stringFromLocalizeCall You must pass in a string that was returned from a `nls.localize()` call\n * in order to ensure the loader plugin has been initialized before this function is called.\n */\nexport function getConfiguredDefaultLocale(stringFromLocalizeCall: string): string | undefined;\nexport function getConfiguredDefaultLocale(_: string): string | undefined {\n\t// This returns undefined because this implementation isn't used and is overwritten by the loader\n\t// when loaded.\n\treturn undefined;\n}\n\nexport function setPseudoTranslation(value: boolean) {\n\tisPseudo = value;\n}\n\n/**\n * Invoked in a built product at run-time\n */\nexport function create(key: string, data: IBundledStrings & IConsumerAPI): IConsumerAPI {\n\treturn {\n\t\tlocalize: createScopedLocalize(data[key]),\n\t\tgetConfiguredDefaultLocale: data.getConfiguredDefaultLocale ?? ((_: string) => undefined)\n\t};\n}\n\n/**\n * Invoked by the loader at run-time\n */\nexport function load(name: string, req: AMDLoader.IRelativeRequire, load: AMDLoader.IPluginLoadCallback, config: AMDLoader.IConfigurationOptions): void {\n\tconst pluginConfig: INLSPluginConfig = config['vs/nls'] ?? {};\n\tif (!name || name.length === 0) {\n\t\treturn load({\n\t\t\tlocalize: localize,\n\t\t\tgetConfiguredDefaultLocale: () => pluginConfig.availableLanguages?.['*']\n\t\t});\n\t}\n\tconst language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n\tconst useDefaultLanguage = language === null || language === DEFAULT_TAG;\n\tlet suffix = '.nls';\n\tif (!useDefaultLanguage) {\n\t\tsuffix = suffix + '.' + language;\n\t}\n\tconst messagesLoaded = (messages: string[] | IBundledStrings) => {\n\t\tif (Array.isArray(messages)) {\n\t\t\t(messages as any as IConsumerAPI).localize = createScopedLocalize(messages);\n\t\t} else {\n\t\t\t(messages as any as IConsumerAPI).localize = createScopedLocalize(messages[name]);\n\t\t}\n\t\t(messages as any as IConsumerAPI).getConfiguredDefaultLocale = () => pluginConfig.availableLanguages?.['*'];\n\t\tload(messages);\n\t};\n\tif (typeof pluginConfig.loadBundle === 'function') {\n\t\t(pluginConfig.loadBundle as BundleLoader)(name, language, (err: Error, messages) => {\n\t\t\t// We have an error. Load the English default strings to not fail\n\t\t\tif (err) {\n\t\t\t\treq([name + '.nls'], messagesLoaded);\n\t\t\t} else {\n\t\t\t\tmessagesLoaded(messages);\n\t\t\t}\n\t\t});\n\t} else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl!, language, name);\n\t\t\t\treturn messagesLoaded(messages);\n\t\t\t} catch (err) {\n\t\t\t\t// Language is already as generic as it gets, so require default messages\n\t\t\t\tif (!language.includes('-')) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn req([name + '.nls'], messagesLoaded);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\t// Since there is a dash, the language configured is a specific sub-language of the same generic language.\n\t\t\t\t\t// Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n\t\t\t\t\t// Swiss German (de-CH), so try to load the generic German (de) messages instead.\n\t\t\t\t\tconst genericLanguage = language.split('-')[0];\n\t\t\t\t\tconst messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl!, genericLanguage, name);\n\t\t\t\t\t// We got some messages, so we configure the configuration to use the generic language for this session.\n\t\t\t\t\tpluginConfig.availableLanguages ??= {};\n\t\t\t\t\tpluginConfig.availableLanguages['*'] = genericLanguage;\n\t\t\t\t\treturn messagesLoaded(messages);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn req([name + '.nls'], messagesLoaded);\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t} else {\n\t\treq([name + suffix], messagesLoaded, (err: Error) => {\n\t\t\tif (suffix === '.nls') {\n\t\t\t\tconsole.error('Failed trying to load default language strings', err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n\t\t\treq([name + '.nls'], messagesLoaded);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tconst MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tconst monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tconst trustedTypesPolicy = (\n\t\ttypeof self.trustedTypes?.createPolicy === 'function'\n\t\t\t? self.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL: value => value,\n\t\t\t\tcreateScript: (_, ...args: string[]) => {\n\t\t\t\t\t// workaround a chrome issue not allowing to create new functions\n\t\t\t\t\t// see https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\n\t\t\t\t\tconst fnArgs = args.slice(0, -1).join(',');\n\t\t\t\t\tconst fnBody = args.pop()!.toString();\n\t\t\t\t\t// Do not add a new line to fnBody, as this will confuse source maps.\n\t\t\t\t\tconst body = `(function anonymous(${fnArgs}) { ${fnBody}\\n})`;\n\t\t\t\t\treturn body;\n\t\t\t\t}\n\t\t\t})\n\t\t\t: undefined\n\t);\n\n\tfunction canUseEval(): boolean {\n\t\ttry {\n\t\t\tconst func = (\n\t\t\t\ttrustedTypesPolicy\n\t\t\t\t\t? self.eval(<any>trustedTypesPolicy.createScript('', 'true'))\n\t\t\t\t\t: new Function('true')\n\t\t\t);\n\t\t\tfunc.call(self);\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction loadAMDLoader() {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (typeof (<any>self).define === 'function' && (<any>self).define.amd) {\n\t\t\t\treturn resolve();\n\t\t\t}\n\t\t\tconst loaderSrc: string | TrustedScriptURL = monacoBaseUrl + 'vs/loader.js';\n\n\t\t\tconst isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(loaderSrc) && loaderSrc.substring(0, self.origin.length) !== self.origin);\n\t\t\tif (!isCrossOrigin && canUseEval()) {\n\t\t\t\t// use `fetch` if possible because `importScripts`\n\t\t\t\t// is synchronous and can lead to deadlocks on Safari\n\t\t\t\tfetch(loaderSrc).then((response) => {\n\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t\t}\n\t\t\t\t\treturn response.text();\n\t\t\t\t}).then((text) => {\n\t\t\t\t\ttext = `${text}\\n//# sourceURL=${loaderSrc}`;\n\t\t\t\t\tconst func = (\n\t\t\t\t\t\ttrustedTypesPolicy\n\t\t\t\t\t\t\t? self.eval(trustedTypesPolicy.createScript('', text) as unknown as string)\n\t\t\t\t\t\t\t: new Function(text)\n\t\t\t\t\t);\n\t\t\t\t\tfunc.call(self);\n\t\t\t\t\tresolve();\n\t\t\t\t}).then(undefined, reject);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (trustedTypesPolicy) {\n\t\t\t\timportScripts(trustedTypesPolicy.createScriptURL(loaderSrc) as unknown as string);\n\t\t\t} else {\n\t\t\t\timportScripts(loaderSrc as string);\n\t\t\t}\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tfunction configureAMDLoader() {\n\t\trequire.config({\n\t\t\tbaseUrl: monacoBaseUrl,\n\t\t\tcatchError: true,\n\t\t\ttrustedTypesPolicy,\n\t\t\tamdModulesPattern: /^vs\\//\n\t\t});\n\t}\n\n\tfunction loadCode(moduleId: string) {\n\t\tloadAMDLoader().then(() => {\n\t\t\tconfigureAMDLoader();\n\t\t\trequire([moduleId], function (ws) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tconst messageHandler = ws.create((msg: any, transfer?: Transferable[]) => {\n\t\t\t\t\t\t(<any>self).postMessage(msg, transfer);\n\t\t\t\t\t}, null);\n\n\t\t\t\t\tself.onmessage = (e: MessageEvent) => messageHandler.onmessage(e.data, e.ports);\n\t\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t});\n\t\t});\n\t}\n\n\t// If the loader is already defined, configure it immediately\n\t// This helps in the bundled case, where we must load nls files\n\t// and they need a correct baseUrl to be loaded.\n\tif (typeof (<any>self).define === 'function' && (<any>self).define.amd) {\n\t\tconfigureAMDLoader();\n\t}\n\n\tlet isFirstMessage = true;\n\tconst beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message: MessageEvent) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\n\nexport interface IIconRegistry {\n\treadonly all: IterableIterator<Codicon>;\n\treadonly onDidRegister: Event<Codicon>;\n\tget(id: string): Codicon | undefined;\n}\n\n// Selects all codicon names encapsulated in the `$()` syntax and wraps the\n// results with spaces so that screen readers can read the text better.\nexport function getCodiconAriaLabel(text: string | undefined) {\n\tif (!text) {\n\t\treturn '';\n\t}\n\n\treturn text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\n\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport class Codicon implements CSSIcon {\n\n\tprivate constructor(public readonly id: string, public readonly definition: IconDefinition, public description?: string) {\n\t\tCodicon._allCodicons.push(this);\n\t}\n\tpublic get classNames() { return 'codicon codicon-' + this.id; }\n\t// classNamesArray is useful for migrating to ES6 classlist\n\tpublic get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n\tpublic get cssSelector() { return '.codicon.codicon-' + this.id; }\n\n\t// registry\n\tprivate static _allCodicons: Codicon[] = [];\n\n\t/**\n\t * @returns Returns all default icons covered by the codicon font. Only to be used by the icon registry in platform.\n\t */\n\tpublic static getAll(): readonly Codicon[] {\n\t\treturn Codicon._allCodicons;\n\t}\n\n\t// built-in icons, with image name\n\tpublic static readonly add = new Codicon('add', { fontCharacter: '\\\\ea60' });\n\tpublic static readonly plus = new Codicon('plus', Codicon.add.definition);\n\tpublic static readonly gistNew = new Codicon('gist-new', Codicon.add.definition);\n\tpublic static readonly repoCreate = new Codicon('repo-create', Codicon.add.definition);\n\tpublic static readonly lightbulb = new Codicon('lightbulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly lightBulb = new Codicon('light-bulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly repo = new Codicon('repo', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly repoDelete = new Codicon('repo-delete', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly gistFork = new Codicon('gist-fork', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly repoForked = new Codicon('repo-forked', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly gitPullRequest = new Codicon('git-pull-request', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly recordKeys = new Codicon('record-keys', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly keyboard = new Codicon('keyboard', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly tag = new Codicon('tag', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagAdd = new Codicon('tag-add', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagRemove = new Codicon('tag-remove', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly person = new Codicon('person', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFollow = new Codicon('person-follow', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personOutline = new Codicon('person-outline', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFilled = new Codicon('person-filled', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly gitBranch = new Codicon('git-branch', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchCreate = new Codicon('git-branch-create', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchDelete = new Codicon('git-branch-delete', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly sourceControl = new Codicon('source-control', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly mirror = new Codicon('mirror', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly mirrorPublic = new Codicon('mirror-public', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly star = new Codicon('star', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starAdd = new Codicon('star-add', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starDelete = new Codicon('star-delete', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starEmpty = new Codicon('star-empty', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly comment = new Codicon('comment', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly commentAdd = new Codicon('comment-add', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly alert = new Codicon('alert', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly warning = new Codicon('warning', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly search = new Codicon('search', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly searchSave = new Codicon('search-save', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly logOut = new Codicon('log-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly signOut = new Codicon('sign-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly logIn = new Codicon('log-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly signIn = new Codicon('sign-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly eye = new Codicon('eye', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeUnwatch = new Codicon('eye-unwatch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeWatch = new Codicon('eye-watch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly circleFilled = new Codicon('circle-filled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveDot = new Codicon('primitive-dot', Codicon.circleFilled.definition);\n\tpublic static readonly closeDirty = new Codicon('close-dirty', Codicon.circleFilled.definition);\n\tpublic static readonly debugBreakpoint = new Codicon('debug-breakpoint', Codicon.circleFilled.definition);\n\tpublic static readonly debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', Codicon.circleFilled.definition);\n\tpublic static readonly debugHint = new Codicon('debug-hint', Codicon.circleFilled.definition);\n\tpublic static readonly primitiveSquare = new Codicon('primitive-square', { fontCharacter: '\\\\ea72' });\n\tpublic static readonly edit = new Codicon('edit', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly pencil = new Codicon('pencil', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly info = new Codicon('info', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly issueOpened = new Codicon('issue-opened', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly gistPrivate = new Codicon('gist-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly gitForkPrivate = new Codicon('git-fork-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly lock = new Codicon('lock', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly mirrorPrivate = new Codicon('mirror-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly close = new Codicon('close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly removeClose = new Codicon('remove-close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly x = new Codicon('x', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly repoSync = new Codicon('repo-sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly sync = new Codicon('sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly clone = new Codicon('clone', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly desktopDownload = new Codicon('desktop-download', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly beaker = new Codicon('beaker', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly microscope = new Codicon('microscope', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly vm = new Codicon('vm', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly deviceDesktop = new Codicon('device-desktop', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly file = new Codicon('file', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly fileText = new Codicon('file-text', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly more = new Codicon('more', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly ellipsis = new Codicon('ellipsis', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly kebabHorizontal = new Codicon('kebab-horizontal', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly mailReply = new Codicon('mail-reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly reply = new Codicon('reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly organization = new Codicon('organization', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationFilled = new Codicon('organization-filled', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationOutline = new Codicon('organization-outline', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly newFile = new Codicon('new-file', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly fileAdd = new Codicon('file-add', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly newFolder = new Codicon('new-folder', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly fileDirectoryCreate = new Codicon('file-directory-create', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly trash = new Codicon('trash', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly trashcan = new Codicon('trashcan', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly history = new Codicon('history', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly clock = new Codicon('clock', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly folder = new Codicon('folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly fileDirectory = new Codicon('file-directory', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly symbolFolder = new Codicon('symbol-folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly logoGithub = new Codicon('logo-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly markGithub = new Codicon('mark-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly github = new Codicon('github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly terminal = new Codicon('terminal', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly console = new Codicon('console', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly repl = new Codicon('repl', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly zap = new Codicon('zap', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly symbolEvent = new Codicon('symbol-event', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly error = new Codicon('error', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly stop = new Codicon('stop', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly variable = new Codicon('variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly symbolVariable = new Codicon('symbol-variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly array = new Codicon('array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolArray = new Codicon('symbol-array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolModule = new Codicon('symbol-module', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolPackage = new Codicon('symbol-package', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolNamespace = new Codicon('symbol-namespace', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolObject = new Codicon('symbol-object', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolMethod = new Codicon('symbol-method', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolFunction = new Codicon('symbol-function', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolConstructor = new Codicon('symbol-constructor', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolBoolean = new Codicon('symbol-boolean', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNull = new Codicon('symbol-null', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNumeric = new Codicon('symbol-numeric', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolNumber = new Codicon('symbol-number', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolStructure = new Codicon('symbol-structure', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolStruct = new Codicon('symbol-struct', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolParameter = new Codicon('symbol-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolTypeParameter = new Codicon('symbol-type-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolKey = new Codicon('symbol-key', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolText = new Codicon('symbol-text', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolReference = new Codicon('symbol-reference', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly goToFile = new Codicon('go-to-file', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly symbolEnum = new Codicon('symbol-enum', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolValue = new Codicon('symbol-value', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolRuler = new Codicon('symbol-ruler', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly symbolUnit = new Codicon('symbol-unit', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly activateBreakpoints = new Codicon('activate-breakpoints', { fontCharacter: '\\\\ea97' });\n\tpublic static readonly archive = new Codicon('archive', { fontCharacter: '\\\\ea98' });\n\tpublic static readonly arrowBoth = new Codicon('arrow-both', { fontCharacter: '\\\\ea99' });\n\tpublic static readonly arrowDown = new Codicon('arrow-down', { fontCharacter: '\\\\ea9a' });\n\tpublic static readonly arrowLeft = new Codicon('arrow-left', { fontCharacter: '\\\\ea9b' });\n\tpublic static readonly arrowRight = new Codicon('arrow-right', { fontCharacter: '\\\\ea9c' });\n\tpublic static readonly arrowSmallDown = new Codicon('arrow-small-down', { fontCharacter: '\\\\ea9d' });\n\tpublic static readonly arrowSmallLeft = new Codicon('arrow-small-left', { fontCharacter: '\\\\ea9e' });\n\tpublic static readonly arrowSmallRight = new Codicon('arrow-small-right', { fontCharacter: '\\\\ea9f' });\n\tpublic static readonly arrowSmallUp = new Codicon('arrow-small-up', { fontCharacter: '\\\\eaa0' });\n\tpublic static readonly arrowUp = new Codicon('arrow-up', { fontCharacter: '\\\\eaa1' });\n\tpublic static readonly bell = new Codicon('bell', { fontCharacter: '\\\\eaa2' });\n\tpublic static readonly bold = new Codicon('bold', { fontCharacter: '\\\\eaa3' });\n\tpublic static readonly book = new Codicon('book', { fontCharacter: '\\\\eaa4' });\n\tpublic static readonly bookmark = new Codicon('bookmark', { fontCharacter: '\\\\eaa5' });\n\tpublic static readonly debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { fontCharacter: '\\\\eaa6' });\n\tpublic static readonly debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { fontCharacter: '\\\\eaa8' });\n\tpublic static readonly debugBreakpointData = new Codicon('debug-breakpoint-data', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { fontCharacter: '\\\\eaaa' });\n\tpublic static readonly debugBreakpointLog = new Codicon('debug-breakpoint-log', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly briefcase = new Codicon('briefcase', { fontCharacter: '\\\\eaac' });\n\tpublic static readonly broadcast = new Codicon('broadcast', { fontCharacter: '\\\\eaad' });\n\tpublic static readonly browser = new Codicon('browser', { fontCharacter: '\\\\eaae' });\n\tpublic static readonly bug = new Codicon('bug', { fontCharacter: '\\\\eaaf' });\n\tpublic static readonly calendar = new Codicon('calendar', { fontCharacter: '\\\\eab0' });\n\tpublic static readonly caseSensitive = new Codicon('case-sensitive', { fontCharacter: '\\\\eab1' });\n\tpublic static readonly check = new Codicon('check', { fontCharacter: '\\\\eab2' });\n\tpublic static readonly checklist = new Codicon('checklist', { fontCharacter: '\\\\eab3' });\n\tpublic static readonly chevronDown = new Codicon('chevron-down', { fontCharacter: '\\\\eab4' });\n\tpublic static readonly dropDownButton = new Codicon('drop-down-button', Codicon.chevronDown.definition);\n\tpublic static readonly chevronLeft = new Codicon('chevron-left', { fontCharacter: '\\\\eab5' });\n\tpublic static readonly chevronRight = new Codicon('chevron-right', { fontCharacter: '\\\\eab6' });\n\tpublic static readonly chevronUp = new Codicon('chevron-up', { fontCharacter: '\\\\eab7' });\n\tpublic static readonly chromeClose = new Codicon('chrome-close', { fontCharacter: '\\\\eab8' });\n\tpublic static readonly chromeMaximize = new Codicon('chrome-maximize', { fontCharacter: '\\\\eab9' });\n\tpublic static readonly chromeMinimize = new Codicon('chrome-minimize', { fontCharacter: '\\\\eaba' });\n\tpublic static readonly chromeRestore = new Codicon('chrome-restore', { fontCharacter: '\\\\eabb' });\n\tpublic static readonly circle = new Codicon('circle', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly circleOutline = new Codicon('circle-outline', Codicon.circle.definition);\n\tpublic static readonly debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', Codicon.circle.definition);\n\tpublic static readonly circleSlash = new Codicon('circle-slash', { fontCharacter: '\\\\eabd' });\n\tpublic static readonly circuitBoard = new Codicon('circuit-board', { fontCharacter: '\\\\eabe' });\n\tpublic static readonly clearAll = new Codicon('clear-all', { fontCharacter: '\\\\eabf' });\n\tpublic static readonly clippy = new Codicon('clippy', { fontCharacter: '\\\\eac0' });\n\tpublic static readonly closeAll = new Codicon('close-all', { fontCharacter: '\\\\eac1' });\n\tpublic static readonly cloudDownload = new Codicon('cloud-download', { fontCharacter: '\\\\eac2' });\n\tpublic static readonly cloudUpload = new Codicon('cloud-upload', { fontCharacter: '\\\\eac3' });\n\tpublic static readonly code = new Codicon('code', { fontCharacter: '\\\\eac4' });\n\tpublic static readonly collapseAll = new Codicon('collapse-all', { fontCharacter: '\\\\eac5' });\n\tpublic static readonly colorMode = new Codicon('color-mode', { fontCharacter: '\\\\eac6' });\n\tpublic static readonly commentDiscussion = new Codicon('comment-discussion', { fontCharacter: '\\\\eac7' });\n\tpublic static readonly compareChanges = new Codicon('compare-changes', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly creditCard = new Codicon('credit-card', { fontCharacter: '\\\\eac9' });\n\tpublic static readonly dash = new Codicon('dash', { fontCharacter: '\\\\eacc' });\n\tpublic static readonly dashboard = new Codicon('dashboard', { fontCharacter: '\\\\eacd' });\n\tpublic static readonly database = new Codicon('database', { fontCharacter: '\\\\eace' });\n\tpublic static readonly debugContinue = new Codicon('debug-continue', { fontCharacter: '\\\\eacf' });\n\tpublic static readonly debugDisconnect = new Codicon('debug-disconnect', { fontCharacter: '\\\\ead0' });\n\tpublic static readonly debugPause = new Codicon('debug-pause', { fontCharacter: '\\\\ead1' });\n\tpublic static readonly debugRestart = new Codicon('debug-restart', { fontCharacter: '\\\\ead2' });\n\tpublic static readonly debugStart = new Codicon('debug-start', { fontCharacter: '\\\\ead3' });\n\tpublic static readonly debugStepInto = new Codicon('debug-step-into', { fontCharacter: '\\\\ead4' });\n\tpublic static readonly debugStepOut = new Codicon('debug-step-out', { fontCharacter: '\\\\ead5' });\n\tpublic static readonly debugStepOver = new Codicon('debug-step-over', { fontCharacter: '\\\\ead6' });\n\tpublic static readonly debugStop = new Codicon('debug-stop', { fontCharacter: '\\\\ead7' });\n\tpublic static readonly debug = new Codicon('debug', { fontCharacter: '\\\\ead8' });\n\tpublic static readonly deviceCameraVideo = new Codicon('device-camera-video', { fontCharacter: '\\\\ead9' });\n\tpublic static readonly deviceCamera = new Codicon('device-camera', { fontCharacter: '\\\\eada' });\n\tpublic static readonly deviceMobile = new Codicon('device-mobile', { fontCharacter: '\\\\eadb' });\n\tpublic static readonly diffAdded = new Codicon('diff-added', { fontCharacter: '\\\\eadc' });\n\tpublic static readonly diffIgnored = new Codicon('diff-ignored', { fontCharacter: '\\\\eadd' });\n\tpublic static readonly diffModified = new Codicon('diff-modified', { fontCharacter: '\\\\eade' });\n\tpublic static readonly diffRemoved = new Codicon('diff-removed', { fontCharacter: '\\\\eadf' });\n\tpublic static readonly diffRenamed = new Codicon('diff-renamed', { fontCharacter: '\\\\eae0' });\n\tpublic static readonly diff = new Codicon('diff', { fontCharacter: '\\\\eae1' });\n\tpublic static readonly discard = new Codicon('discard', { fontCharacter: '\\\\eae2' });\n\tpublic static readonly editorLayout = new Codicon('editor-layout', { fontCharacter: '\\\\eae3' });\n\tpublic static readonly emptyWindow = new Codicon('empty-window', { fontCharacter: '\\\\eae4' });\n\tpublic static readonly exclude = new Codicon('exclude', { fontCharacter: '\\\\eae5' });\n\tpublic static readonly extensions = new Codicon('extensions', { fontCharacter: '\\\\eae6' });\n\tpublic static readonly eyeClosed = new Codicon('eye-closed', { fontCharacter: '\\\\eae7' });\n\tpublic static readonly fileBinary = new Codicon('file-binary', { fontCharacter: '\\\\eae8' });\n\tpublic static readonly fileCode = new Codicon('file-code', { fontCharacter: '\\\\eae9' });\n\tpublic static readonly fileMedia = new Codicon('file-media', { fontCharacter: '\\\\eaea' });\n\tpublic static readonly filePdf = new Codicon('file-pdf', { fontCharacter: '\\\\eaeb' });\n\tpublic static readonly fileSubmodule = new Codicon('file-submodule', { fontCharacter: '\\\\eaec' });\n\tpublic static readonly fileSymlinkDirectory = new Codicon('file-symlink-directory', { fontCharacter: '\\\\eaed' });\n\tpublic static readonly fileSymlinkFile = new Codicon('file-symlink-file', { fontCharacter: '\\\\eaee' });\n\tpublic static readonly fileZip = new Codicon('file-zip', { fontCharacter: '\\\\eaef' });\n\tpublic static readonly files = new Codicon('files', { fontCharacter: '\\\\eaf0' });\n\tpublic static readonly filter = new Codicon('filter', { fontCharacter: '\\\\eaf1' });\n\tpublic static readonly flame = new Codicon('flame', { fontCharacter: '\\\\eaf2' });\n\tpublic static readonly foldDown = new Codicon('fold-down', { fontCharacter: '\\\\eaf3' });\n\tpublic static readonly foldUp = new Codicon('fold-up', { fontCharacter: '\\\\eaf4' });\n\tpublic static readonly fold = new Codicon('fold', { fontCharacter: '\\\\eaf5' });\n\tpublic static readonly folderActive = new Codicon('folder-active', { fontCharacter: '\\\\eaf6' });\n\tpublic static readonly folderOpened = new Codicon('folder-opened', { fontCharacter: '\\\\eaf7' });\n\tpublic static readonly gear = new Codicon('gear', { fontCharacter: '\\\\eaf8' });\n\tpublic static readonly gift = new Codicon('gift', { fontCharacter: '\\\\eaf9' });\n\tpublic static readonly gistSecret = new Codicon('gist-secret', { fontCharacter: '\\\\eafa' });\n\tpublic static readonly gist = new Codicon('gist', { fontCharacter: '\\\\eafb' });\n\tpublic static readonly gitCommit = new Codicon('git-commit', { fontCharacter: '\\\\eafc' });\n\tpublic static readonly gitCompare = new Codicon('git-compare', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly gitMerge = new Codicon('git-merge', { fontCharacter: '\\\\eafe' });\n\tpublic static readonly githubAction = new Codicon('github-action', { fontCharacter: '\\\\eaff' });\n\tpublic static readonly githubAlt = new Codicon('github-alt', { fontCharacter: '\\\\eb00' });\n\tpublic static readonly globe = new Codicon('globe', { fontCharacter: '\\\\eb01' });\n\tpublic static readonly grabber = new Codicon('grabber', { fontCharacter: '\\\\eb02' });\n\tpublic static readonly graph = new Codicon('graph', { fontCharacter: '\\\\eb03' });\n\tpublic static readonly gripper = new Codicon('gripper', { fontCharacter: '\\\\eb04' });\n\tpublic static readonly heart = new Codicon('heart', { fontCharacter: '\\\\eb05' });\n\tpublic static readonly home = new Codicon('home', { fontCharacter: '\\\\eb06' });\n\tpublic static readonly horizontalRule = new Codicon('horizontal-rule', { fontCharacter: '\\\\eb07' });\n\tpublic static readonly hubot = new Codicon('hubot', { fontCharacter: '\\\\eb08' });\n\tpublic static readonly inbox = new Codicon('inbox', { fontCharacter: '\\\\eb09' });\n\tpublic static readonly issueClosed = new Codicon('issue-closed', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly issueReopened = new Codicon('issue-reopened', { fontCharacter: '\\\\eb0b' });\n\tpublic static readonly issues = new Codicon('issues', { fontCharacter: '\\\\eb0c' });\n\tpublic static readonly italic = new Codicon('italic', { fontCharacter: '\\\\eb0d' });\n\tpublic static readonly jersey = new Codicon('jersey', { fontCharacter: '\\\\eb0e' });\n\tpublic static readonly json = new Codicon('json', { fontCharacter: '\\\\eb0f' });\n\tpublic static readonly kebabVertical = new Codicon('kebab-vertical', { fontCharacter: '\\\\eb10' });\n\tpublic static readonly key = new Codicon('key', { fontCharacter: '\\\\eb11' });\n\tpublic static readonly law = new Codicon('law', { fontCharacter: '\\\\eb12' });\n\tpublic static readonly lightbulbAutofix = new Codicon('lightbulb-autofix', { fontCharacter: '\\\\eb13' });\n\tpublic static readonly linkExternal = new Codicon('link-external', { fontCharacter: '\\\\eb14' });\n\tpublic static readonly link = new Codicon('link', { fontCharacter: '\\\\eb15' });\n\tpublic static readonly listOrdered = new Codicon('list-ordered', { fontCharacter: '\\\\eb16' });\n\tpublic static readonly listUnordered = new Codicon('list-unordered', { fontCharacter: '\\\\eb17' });\n\tpublic static readonly liveShare = new Codicon('live-share', { fontCharacter: '\\\\eb18' });\n\tpublic static readonly loading = new Codicon('loading', { fontCharacter: '\\\\eb19' });\n\tpublic static readonly location = new Codicon('location', { fontCharacter: '\\\\eb1a' });\n\tpublic static readonly mailRead = new Codicon('mail-read', { fontCharacter: '\\\\eb1b' });\n\tpublic static readonly mail = new Codicon('mail', { fontCharacter: '\\\\eb1c' });\n\tpublic static readonly markdown = new Codicon('markdown', { fontCharacter: '\\\\eb1d' });\n\tpublic static readonly megaphone = new Codicon('megaphone', { fontCharacter: '\\\\eb1e' });\n\tpublic static readonly mention = new Codicon('mention', { fontCharacter: '\\\\eb1f' });\n\tpublic static readonly milestone = new Codicon('milestone', { fontCharacter: '\\\\eb20' });\n\tpublic static readonly mortarBoard = new Codicon('mortar-board', { fontCharacter: '\\\\eb21' });\n\tpublic static readonly move = new Codicon('move', { fontCharacter: '\\\\eb22' });\n\tpublic static readonly multipleWindows = new Codicon('multiple-windows', { fontCharacter: '\\\\eb23' });\n\tpublic static readonly mute = new Codicon('mute', { fontCharacter: '\\\\eb24' });\n\tpublic static readonly noNewline = new Codicon('no-newline', { fontCharacter: '\\\\eb25' });\n\tpublic static readonly note = new Codicon('note', { fontCharacter: '\\\\eb26' });\n\tpublic static readonly octoface = new Codicon('octoface', { fontCharacter: '\\\\eb27' });\n\tpublic static readonly openPreview = new Codicon('open-preview', { fontCharacter: '\\\\eb28' });\n\tpublic static readonly package_ = new Codicon('package', { fontCharacter: '\\\\eb29' });\n\tpublic static readonly paintcan = new Codicon('paintcan', { fontCharacter: '\\\\eb2a' });\n\tpublic static readonly pin = new Codicon('pin', { fontCharacter: '\\\\eb2b' });\n\tpublic static readonly play = new Codicon('play', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly run = new Codicon('run', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly plug = new Codicon('plug', { fontCharacter: '\\\\eb2d' });\n\tpublic static readonly preserveCase = new Codicon('preserve-case', { fontCharacter: '\\\\eb2e' });\n\tpublic static readonly preview = new Codicon('preview', { fontCharacter: '\\\\eb2f' });\n\tpublic static readonly project = new Codicon('project', { fontCharacter: '\\\\eb30' });\n\tpublic static readonly pulse = new Codicon('pulse', { fontCharacter: '\\\\eb31' });\n\tpublic static readonly question = new Codicon('question', { fontCharacter: '\\\\eb32' });\n\tpublic static readonly quote = new Codicon('quote', { fontCharacter: '\\\\eb33' });\n\tpublic static readonly radioTower = new Codicon('radio-tower', { fontCharacter: '\\\\eb34' });\n\tpublic static readonly reactions = new Codicon('reactions', { fontCharacter: '\\\\eb35' });\n\tpublic static readonly references = new Codicon('references', { fontCharacter: '\\\\eb36' });\n\tpublic static readonly refresh = new Codicon('refresh', { fontCharacter: '\\\\eb37' });\n\tpublic static readonly regex = new Codicon('regex', { fontCharacter: '\\\\eb38' });\n\tpublic static readonly remoteExplorer = new Codicon('remote-explorer', { fontCharacter: '\\\\eb39' });\n\tpublic static readonly remote = new Codicon('remote', { fontCharacter: '\\\\eb3a' });\n\tpublic static readonly remove = new Codicon('remove', { fontCharacter: '\\\\eb3b' });\n\tpublic static readonly replaceAll = new Codicon('replace-all', { fontCharacter: '\\\\eb3c' });\n\tpublic static readonly replace = new Codicon('replace', { fontCharacter: '\\\\eb3d' });\n\tpublic static readonly repoClone = new Codicon('repo-clone', { fontCharacter: '\\\\eb3e' });\n\tpublic static readonly repoForcePush = new Codicon('repo-force-push', { fontCharacter: '\\\\eb3f' });\n\tpublic static readonly repoPull = new Codicon('repo-pull', { fontCharacter: '\\\\eb40' });\n\tpublic static readonly repoPush = new Codicon('repo-push', { fontCharacter: '\\\\eb41' });\n\tpublic static readonly report = new Codicon('report', { fontCharacter: '\\\\eb42' });\n\tpublic static readonly requestChanges = new Codicon('request-changes', { fontCharacter: '\\\\eb43' });\n\tpublic static readonly rocket = new Codicon('rocket', { fontCharacter: '\\\\eb44' });\n\tpublic static readonly rootFolderOpened = new Codicon('root-folder-opened', { fontCharacter: '\\\\eb45' });\n\tpublic static readonly rootFolder = new Codicon('root-folder', { fontCharacter: '\\\\eb46' });\n\tpublic static readonly rss = new Codicon('rss', { fontCharacter: '\\\\eb47' });\n\tpublic static readonly ruby = new Codicon('ruby', { fontCharacter: '\\\\eb48' });\n\tpublic static readonly saveAll = new Codicon('save-all', { fontCharacter: '\\\\eb49' });\n\tpublic static readonly saveAs = new Codicon('save-as', { fontCharacter: '\\\\eb4a' });\n\tpublic static readonly save = new Codicon('save', { fontCharacter: '\\\\eb4b' });\n\tpublic static readonly screenFull = new Codicon('screen-full', { fontCharacter: '\\\\eb4c' });\n\tpublic static readonly screenNormal = new Codicon('screen-normal', { fontCharacter: '\\\\eb4d' });\n\tpublic static readonly searchStop = new Codicon('search-stop', { fontCharacter: '\\\\eb4e' });\n\tpublic static readonly server = new Codicon('server', { fontCharacter: '\\\\eb50' });\n\tpublic static readonly settingsGear = new Codicon('settings-gear', { fontCharacter: '\\\\eb51' });\n\tpublic static readonly settings = new Codicon('settings', { fontCharacter: '\\\\eb52' });\n\tpublic static readonly shield = new Codicon('shield', { fontCharacter: '\\\\eb53' });\n\tpublic static readonly smiley = new Codicon('smiley', { fontCharacter: '\\\\eb54' });\n\tpublic static readonly sortPrecedence = new Codicon('sort-precedence', { fontCharacter: '\\\\eb55' });\n\tpublic static readonly splitHorizontal = new Codicon('split-horizontal', { fontCharacter: '\\\\eb56' });\n\tpublic static readonly splitVertical = new Codicon('split-vertical', { fontCharacter: '\\\\eb57' });\n\tpublic static readonly squirrel = new Codicon('squirrel', { fontCharacter: '\\\\eb58' });\n\tpublic static readonly starFull = new Codicon('star-full', { fontCharacter: '\\\\eb59' });\n\tpublic static readonly starHalf = new Codicon('star-half', { fontCharacter: '\\\\eb5a' });\n\tpublic static readonly symbolClass = new Codicon('symbol-class', { fontCharacter: '\\\\eb5b' });\n\tpublic static readonly symbolColor = new Codicon('symbol-color', { fontCharacter: '\\\\eb5c' });\n\tpublic static readonly symbolCustomColor = new Codicon('symbol-customcolor', { fontCharacter: '\\\\eb5c' });\n\tpublic static readonly symbolConstant = new Codicon('symbol-constant', { fontCharacter: '\\\\eb5d' });\n\tpublic static readonly symbolEnumMember = new Codicon('symbol-enum-member', { fontCharacter: '\\\\eb5e' });\n\tpublic static readonly symbolField = new Codicon('symbol-field', { fontCharacter: '\\\\eb5f' });\n\tpublic static readonly symbolFile = new Codicon('symbol-file', { fontCharacter: '\\\\eb60' });\n\tpublic static readonly symbolInterface = new Codicon('symbol-interface', { fontCharacter: '\\\\eb61' });\n\tpublic static readonly symbolKeyword = new Codicon('symbol-keyword', { fontCharacter: '\\\\eb62' });\n\tpublic static readonly symbolMisc = new Codicon('symbol-misc', { fontCharacter: '\\\\eb63' });\n\tpublic static readonly symbolOperator = new Codicon('symbol-operator', { fontCharacter: '\\\\eb64' });\n\tpublic static readonly symbolProperty = new Codicon('symbol-property', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrench = new Codicon('wrench', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrenchSubaction = new Codicon('wrench-subaction', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly symbolSnippet = new Codicon('symbol-snippet', { fontCharacter: '\\\\eb66' });\n\tpublic static readonly tasklist = new Codicon('tasklist', { fontCharacter: '\\\\eb67' });\n\tpublic static readonly telescope = new Codicon('telescope', { fontCharacter: '\\\\eb68' });\n\tpublic static readonly textSize = new Codicon('text-size', { fontCharacter: '\\\\eb69' });\n\tpublic static readonly threeBars = new Codicon('three-bars', { fontCharacter: '\\\\eb6a' });\n\tpublic static readonly thumbsdown = new Codicon('thumbsdown', { fontCharacter: '\\\\eb6b' });\n\tpublic static readonly thumbsup = new Codicon('thumbsup', { fontCharacter: '\\\\eb6c' });\n\tpublic static readonly tools = new Codicon('tools', { fontCharacter: '\\\\eb6d' });\n\tpublic static readonly triangleDown = new Codicon('triangle-down', { fontCharacter: '\\\\eb6e' });\n\tpublic static readonly triangleLeft = new Codicon('triangle-left', { fontCharacter: '\\\\eb6f' });\n\tpublic static readonly triangleRight = new Codicon('triangle-right', { fontCharacter: '\\\\eb70' });\n\tpublic static readonly triangleUp = new Codicon('triangle-up', { fontCharacter: '\\\\eb71' });\n\tpublic static readonly twitter = new Codicon('twitter', { fontCharacter: '\\\\eb72' });\n\tpublic static readonly unfold = new Codicon('unfold', { fontCharacter: '\\\\eb73' });\n\tpublic static readonly unlock = new Codicon('unlock', { fontCharacter: '\\\\eb74' });\n\tpublic static readonly unmute = new Codicon('unmute', { fontCharacter: '\\\\eb75' });\n\tpublic static readonly unverified = new Codicon('unverified', { fontCharacter: '\\\\eb76' });\n\tpublic static readonly verified = new Codicon('verified', { fontCharacter: '\\\\eb77' });\n\tpublic static readonly versions = new Codicon('versions', { fontCharacter: '\\\\eb78' });\n\tpublic static readonly vmActive = new Codicon('vm-active', { fontCharacter: '\\\\eb79' });\n\tpublic static readonly vmOutline = new Codicon('vm-outline', { fontCharacter: '\\\\eb7a' });\n\tpublic static readonly vmRunning = new Codicon('vm-running', { fontCharacter: '\\\\eb7b' });\n\tpublic static readonly watch = new Codicon('watch', { fontCharacter: '\\\\eb7c' });\n\tpublic static readonly whitespace = new Codicon('whitespace', { fontCharacter: '\\\\eb7d' });\n\tpublic static readonly wholeWord = new Codicon('whole-word', { fontCharacter: '\\\\eb7e' });\n\tpublic static readonly window = new Codicon('window', { fontCharacter: '\\\\eb7f' });\n\tpublic static readonly wordWrap = new Codicon('word-wrap', { fontCharacter: '\\\\eb80' });\n\tpublic static readonly zoomIn = new Codicon('zoom-in', { fontCharacter: '\\\\eb81' });\n\tpublic static readonly zoomOut = new Codicon('zoom-out', { fontCharacter: '\\\\eb82' });\n\tpublic static readonly listFilter = new Codicon('list-filter', { fontCharacter: '\\\\eb83' });\n\tpublic static readonly listFlat = new Codicon('list-flat', { fontCharacter: '\\\\eb84' });\n\tpublic static readonly listSelection = new Codicon('list-selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly selection = new Codicon('selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly listTree = new Codicon('list-tree', { fontCharacter: '\\\\eb86' });\n\tpublic static readonly debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { fontCharacter: '\\\\eb87' });\n\tpublic static readonly debugBreakpointFunction = new Codicon('debug-breakpoint-function', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugStackframeActive = new Codicon('debug-stackframe-active', { fontCharacter: '\\\\eb89' });\n\tpublic static readonly circleSmallFilled = new Codicon('circle-small-filled', { fontCharacter: '\\\\eb8a' });\n\tpublic static readonly debugStackframeDot = new Codicon('debug-stackframe-dot', Codicon.circleSmallFilled.definition);\n\tpublic static readonly debugStackframe = new Codicon('debug-stackframe', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugStackframeFocused = new Codicon('debug-stackframe-focused', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { fontCharacter: '\\\\eb8c' });\n\tpublic static readonly symbolString = new Codicon('symbol-string', { fontCharacter: '\\\\eb8d' });\n\tpublic static readonly debugReverseContinue = new Codicon('debug-reverse-continue', { fontCharacter: '\\\\eb8e' });\n\tpublic static readonly debugStepBack = new Codicon('debug-step-back', { fontCharacter: '\\\\eb8f' });\n\tpublic static readonly debugRestartFrame = new Codicon('debug-restart-frame', { fontCharacter: '\\\\eb90' });\n\tpublic static readonly callIncoming = new Codicon('call-incoming', { fontCharacter: '\\\\eb92' });\n\tpublic static readonly callOutgoing = new Codicon('call-outgoing', { fontCharacter: '\\\\eb93' });\n\tpublic static readonly menu = new Codicon('menu', { fontCharacter: '\\\\eb94' });\n\tpublic static readonly expandAll = new Codicon('expand-all', { fontCharacter: '\\\\eb95' });\n\tpublic static readonly feedback = new Codicon('feedback', { fontCharacter: '\\\\eb96' });\n\tpublic static readonly groupByRefType = new Codicon('group-by-ref-type', { fontCharacter: '\\\\eb97' });\n\tpublic static readonly ungroupByRefType = new Codicon('ungroup-by-ref-type', { fontCharacter: '\\\\eb98' });\n\tpublic static readonly account = new Codicon('account', { fontCharacter: '\\\\eb99' });\n\tpublic static readonly bellDot = new Codicon('bell-dot', { fontCharacter: '\\\\eb9a' });\n\tpublic static readonly debugConsole = new Codicon('debug-console', { fontCharacter: '\\\\eb9b' });\n\tpublic static readonly library = new Codicon('library', { fontCharacter: '\\\\eb9c' });\n\tpublic static readonly output = new Codicon('output', { fontCharacter: '\\\\eb9d' });\n\tpublic static readonly runAll = new Codicon('run-all', { fontCharacter: '\\\\eb9e' });\n\tpublic static readonly syncIgnored = new Codicon('sync-ignored', { fontCharacter: '\\\\eb9f' });\n\tpublic static readonly pinned = new Codicon('pinned', { fontCharacter: '\\\\eba0' });\n\tpublic static readonly githubInverted = new Codicon('github-inverted', { fontCharacter: '\\\\eba1' });\n\tpublic static readonly debugAlt = new Codicon('debug-alt', { fontCharacter: '\\\\eb91' });\n\tpublic static readonly serverProcess = new Codicon('server-process', { fontCharacter: '\\\\eba2' });\n\tpublic static readonly serverEnvironment = new Codicon('server-environment', { fontCharacter: '\\\\eba3' });\n\tpublic static readonly pass = new Codicon('pass', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly stopCircle = new Codicon('stop-circle', { fontCharacter: '\\\\eba5' });\n\tpublic static readonly playCircle = new Codicon('play-circle', { fontCharacter: '\\\\eba6' });\n\tpublic static readonly record = new Codicon('record', { fontCharacter: '\\\\eba7' });\n\tpublic static readonly debugAltSmall = new Codicon('debug-alt-small', { fontCharacter: '\\\\eba8' });\n\tpublic static readonly vmConnect = new Codicon('vm-connect', { fontCharacter: '\\\\eba9' });\n\tpublic static readonly cloud = new Codicon('cloud', { fontCharacter: '\\\\ebaa' });\n\tpublic static readonly merge = new Codicon('merge', { fontCharacter: '\\\\ebab' });\n\tpublic static readonly exportIcon = new Codicon('export', { fontCharacter: '\\\\ebac' });\n\tpublic static readonly graphLeft = new Codicon('graph-left', { fontCharacter: '\\\\ebad' });\n\tpublic static readonly magnet = new Codicon('magnet', { fontCharacter: '\\\\ebae' });\n\tpublic static readonly notebook = new Codicon('notebook', { fontCharacter: '\\\\ebaf' });\n\tpublic static readonly redo = new Codicon('redo', { fontCharacter: '\\\\ebb0' });\n\tpublic static readonly checkAll = new Codicon('check-all', { fontCharacter: '\\\\ebb1' });\n\tpublic static readonly pinnedDirty = new Codicon('pinned-dirty', { fontCharacter: '\\\\ebb2' });\n\tpublic static readonly passFilled = new Codicon('pass-filled', { fontCharacter: '\\\\ebb3' });\n\tpublic static readonly circleLargeFilled = new Codicon('circle-large-filled', { fontCharacter: '\\\\ebb4' });\n\tpublic static readonly circleLarge = new Codicon('circle-large', { fontCharacter: '\\\\ebb5' });\n\tpublic static readonly circleLargeOutline = new Codicon('circle-large-outline', Codicon.circleLarge.definition);\n\tpublic static readonly combine = new Codicon('combine', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly gather = new Codicon('gather', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly table = new Codicon('table', { fontCharacter: '\\\\ebb7' });\n\tpublic static readonly variableGroup = new Codicon('variable-group', { fontCharacter: '\\\\ebb8' });\n\tpublic static readonly typeHierarchy = new Codicon('type-hierarchy', { fontCharacter: '\\\\ebb9' });\n\tpublic static readonly typeHierarchySub = new Codicon('type-hierarchy-sub', { fontCharacter: '\\\\ebba' });\n\tpublic static readonly typeHierarchySuper = new Codicon('type-hierarchy-super', { fontCharacter: '\\\\ebbb' });\n\tpublic static readonly gitPullRequestCreate = new Codicon('git-pull-request-create', { fontCharacter: '\\\\ebbc' });\n\tpublic static readonly runAbove = new Codicon('run-above', { fontCharacter: '\\\\ebbd' });\n\tpublic static readonly runBelow = new Codicon('run-below', { fontCharacter: '\\\\ebbe' });\n\tpublic static readonly notebookTemplate = new Codicon('notebook-template', { fontCharacter: '\\\\ebbf' });\n\tpublic static readonly debugRerun = new Codicon('debug-rerun', { fontCharacter: '\\\\ebc0' });\n\tpublic static readonly workspaceTrusted = new Codicon('workspace-trusted', { fontCharacter: '\\\\ebc1' });\n\tpublic static readonly workspaceUntrusted = new Codicon('workspace-untrusted', { fontCharacter: '\\\\ebc2' });\n\tpublic static readonly workspaceUnspecified = new Codicon('workspace-unspecified', { fontCharacter: '\\\\ebc3' });\n\tpublic static readonly terminalCmd = new Codicon('terminal-cmd', { fontCharacter: '\\\\ebc4' });\n\tpublic static readonly terminalDebian = new Codicon('terminal-debian', { fontCharacter: '\\\\ebc5' });\n\tpublic static readonly terminalLinux = new Codicon('terminal-linux', { fontCharacter: '\\\\ebc6' });\n\tpublic static readonly terminalPowershell = new Codicon('terminal-powershell', { fontCharacter: '\\\\ebc7' });\n\tpublic static readonly terminalTmux = new Codicon('terminal-tmux', { fontCharacter: '\\\\ebc8' });\n\tpublic static readonly terminalUbuntu = new Codicon('terminal-ubuntu', { fontCharacter: '\\\\ebc9' });\n\tpublic static readonly terminalBash = new Codicon('terminal-bash', { fontCharacter: '\\\\ebca' });\n\tpublic static readonly arrowSwap = new Codicon('arrow-swap', { fontCharacter: '\\\\ebcb' });\n\tpublic static readonly copy = new Codicon('copy', { fontCharacter: '\\\\ebcc' });\n\tpublic static readonly personAdd = new Codicon('person-add', { fontCharacter: '\\\\ebcd' });\n\tpublic static readonly filterFilled = new Codicon('filter-filled', { fontCharacter: '\\\\ebce' });\n\tpublic static readonly wand = new Codicon('wand', { fontCharacter: '\\\\ebcf' });\n\tpublic static readonly debugLineByLine = new Codicon('debug-line-by-line', { fontCharacter: '\\\\ebd0' });\n\tpublic static readonly inspect = new Codicon('inspect', { fontCharacter: '\\\\ebd1' });\n\tpublic static readonly layers = new Codicon('layers', { fontCharacter: '\\\\ebd2' });\n\tpublic static readonly layersDot = new Codicon('layers-dot', { fontCharacter: '\\\\ebd3' });\n\tpublic static readonly layersActive = new Codicon('layers-active', { fontCharacter: '\\\\ebd4' });\n\tpublic static readonly compass = new Codicon('compass', { fontCharacter: '\\\\ebd5' });\n\tpublic static readonly compassDot = new Codicon('compass-dot', { fontCharacter: '\\\\ebd6' });\n\tpublic static readonly compassActive = new Codicon('compass-active', { fontCharacter: '\\\\ebd7' });\n\tpublic static readonly azure = new Codicon('azure', { fontCharacter: '\\\\ebd8' });\n\tpublic static readonly issueDraft = new Codicon('issue-draft', { fontCharacter: '\\\\ebd9' });\n\tpublic static readonly gitPullRequestClosed = new Codicon('git-pull-request-closed', { fontCharacter: '\\\\ebda' });\n\tpublic static readonly gitPullRequestDraft = new Codicon('git-pull-request-draft', { fontCharacter: '\\\\ebdb' });\n\tpublic static readonly debugAll = new Codicon('debug-all', { fontCharacter: '\\\\ebdc' });\n\tpublic static readonly debugCoverage = new Codicon('debug-coverage', { fontCharacter: '\\\\ebdd' });\n\tpublic static readonly runErrors = new Codicon('run-errors', { fontCharacter: '\\\\ebde' });\n\tpublic static readonly folderLibrary = new Codicon('folder-library', { fontCharacter: '\\\\ebdf' });\n\tpublic static readonly debugContinueSmall = new Codicon('debug-continue-small', { fontCharacter: '\\\\ebe0' });\n\tpublic static readonly beakerStop = new Codicon('beaker-stop', { fontCharacter: '\\\\ebe1' });\n\tpublic static readonly graphLine = new Codicon('graph-line', { fontCharacter: '\\\\ebe2' });\n\tpublic static readonly graphScatter = new Codicon('graph-scatter', { fontCharacter: '\\\\ebe3' });\n\tpublic static readonly pieChart = new Codicon('pie-chart', { fontCharacter: '\\\\ebe4' });\n\tpublic static readonly bracket = new Codicon('bracket', Codicon.json.definition);\n\tpublic static readonly bracketDot = new Codicon('bracket-dot', { fontCharacter: '\\\\ebe5' });\n\tpublic static readonly bracketError = new Codicon('bracket-error', { fontCharacter: '\\\\ebe6' });\n\tpublic static readonly lockSmall = new Codicon('lock-small', { fontCharacter: '\\\\ebe7' });\n\tpublic static readonly azureDevops = new Codicon('azure-devops', { fontCharacter: '\\\\ebe8' });\n\tpublic static readonly verifiedFilled = new Codicon('verified-filled', { fontCharacter: '\\\\ebe9' });\n\tpublic static readonly newLine = new Codicon('newline', { fontCharacter: '\\\\ebea' });\n\tpublic static readonly layout = new Codicon('layout', { fontCharacter: '\\\\ebeb' });\n\tpublic static readonly layoutActivitybarLeft = new Codicon('layout-activitybar-left', { fontCharacter: '\\\\ebec' });\n\tpublic static readonly layoutActivitybarRight = new Codicon('layout-activitybar-right', { fontCharacter: '\\\\ebed' });\n\tpublic static readonly layoutPanelLeft = new Codicon('layout-panel-left', { fontCharacter: '\\\\ebee' });\n\tpublic static readonly layoutPanelCenter = new Codicon('layout-panel-center', { fontCharacter: '\\\\ebef' });\n\tpublic static readonly layoutPanelJustify = new Codicon('layout-panel-justify', { fontCharacter: '\\\\ebf0' });\n\tpublic static readonly layoutPanelRight = new Codicon('layout-panel-right', { fontCharacter: '\\\\ebf1' });\n\tpublic static readonly layoutPanel = new Codicon('layout-panel', { fontCharacter: '\\\\ebf2' });\n\tpublic static readonly layoutSidebarLeft = new Codicon('layout-sidebar-left', { fontCharacter: '\\\\ebf3' });\n\tpublic static readonly layoutSidebarRight = new Codicon('layout-sidebar-right', { fontCharacter: '\\\\ebf4' });\n\tpublic static readonly layoutStatusbar = new Codicon('layout-statusbar', { fontCharacter: '\\\\ebf5' });\n\tpublic static readonly layoutMenubar = new Codicon('layout-menubar', { fontCharacter: '\\\\ebf6' });\n\tpublic static readonly layoutCentered = new Codicon('layout-centered', { fontCharacter: '\\\\ebf7' });\n\tpublic static readonly layoutSidebarRightOff = new Codicon('layout-sidebar-right-off', { fontCharacter: '\\\\ec00' });\n\tpublic static readonly layoutPanelOff = new Codicon('layout-panel-off', { fontCharacter: '\\\\ec01' });\n\tpublic static readonly layoutSidebarLeftOff = new Codicon('layout-sidebar-left-off', { fontCharacter: '\\\\ec02' });\n\tpublic static readonly target = new Codicon('target', { fontCharacter: '\\\\ebf8' });\n\tpublic static readonly indent = new Codicon('indent', { fontCharacter: '\\\\ebf9' });\n\tpublic static readonly recordSmall = new Codicon('record-small', { fontCharacter: '\\\\ebfa' });\n\tpublic static readonly errorSmall = new Codicon('error-small', { fontCharacter: '\\\\ebfb' });\n\tpublic static readonly arrowCircleDown = new Codicon('arrow-circle-down', { fontCharacter: '\\\\ebfc' });\n\tpublic static readonly arrowCircleLeft = new Codicon('arrow-circle-left', { fontCharacter: '\\\\ebfd' });\n\tpublic static readonly arrowCircleRight = new Codicon('arrow-circle-right', { fontCharacter: '\\\\ebfe' });\n\tpublic static readonly arrowCircleUp = new Codicon('arrow-circle-up', { fontCharacter: '\\\\ebff' });\n\tpublic static readonly heartFilled = new Codicon('heart-filled', { fontCharacter: '\\\\ec04' });\n\tpublic static readonly map = new Codicon('map', { fontCharacter: '\\\\ec05' });\n\tpublic static readonly mapFilled = new Codicon('map-filled', { fontCharacter: '\\\\ec06' });\n\tpublic static readonly circleSmall = new Codicon('circle-small', { fontCharacter: '\\\\ec07' });\n\tpublic static readonly bellSlash = new Codicon('bell-slash', { fontCharacter: '\\\\ec08' });\n\tpublic static readonly bellSlashDot = new Codicon('bell-slash-dot', { fontCharacter: '\\\\ec09' });\n\tpublic static readonly commentUnresolved = new Codicon('comment-unresolved', { fontCharacter: '\\\\ec0a' });\n\tpublic static readonly gitPullRequestGoToChanges = new Codicon('git-pull-request-go-to-changes', { fontCharacter: '\\\\ec0b' });\n\tpublic static readonly gitPullRequestNewChanges = new Codicon('git-pull-request-new-changes', { fontCharacter: '\\\\ec0c' });\n\tpublic static readonly searchFuzzy = new Codicon('search-fuzzy', { fontCharacter: '\\\\ec0d' });\n\n\n\t// derived icons, that could become separate icons\n\n\tpublic static readonly dialogError = new Codicon('dialog-error', Codicon.error.definition);\n\tpublic static readonly dialogWarning = new Codicon('dialog-warning', Codicon.warning.definition);\n\tpublic static readonly dialogInfo = new Codicon('dialog-info', Codicon.info.definition);\n\tpublic static readonly dialogClose = new Codicon('dialog-close', Codicon.close.definition);\n\n\tpublic static readonly treeItemExpanded = new Codicon('tree-item-expanded', Codicon.chevronDown.definition); // collapsed is done with rotation\n\n\tpublic static readonly treeFilterOnTypeOn = new Codicon('tree-filter-on-type-on', Codicon.listFilter.definition);\n\tpublic static readonly treeFilterOnTypeOff = new Codicon('tree-filter-on-type-off', Codicon.listSelection.definition);\n\tpublic static readonly treeFilterClear = new Codicon('tree-filter-clear', Codicon.close.definition);\n\n\tpublic static readonly treeItemLoading = new Codicon('tree-item-loading', Codicon.loading.definition);\n\n\tpublic static readonly menuSelection = new Codicon('menu-selection', Codicon.check.definition);\n\tpublic static readonly menuSubmenu = new Codicon('menu-submenu', Codicon.chevronRight.definition);\n\n\tpublic static readonly menuBarMore = new Codicon('menubar-more', Codicon.more.definition);\n\n\tpublic static readonly scrollbarButtonLeft = new Codicon('scrollbar-button-left', Codicon.triangleLeft.definition);\n\tpublic static readonly scrollbarButtonRight = new Codicon('scrollbar-button-right', Codicon.triangleRight.definition);\n\n\tpublic static readonly scrollbarButtonUp = new Codicon('scrollbar-button-up', Codicon.triangleUp.definition);\n\tpublic static readonly scrollbarButtonDown = new Codicon('scrollbar-button-down', Codicon.triangleDown.definition);\n\n\tpublic static readonly toolBarMore = new Codicon('toolbar-more', Codicon.more.definition);\n\n\tpublic static readonly quickInputBack = new Codicon('quick-input-back', Codicon.arrowLeft.definition);\n}\n\nexport function getClassNamesArray(id: string, modifier?: string) {\n\tconst classNames = ['codicon', 'codicon-' + id];\n\tif (modifier) {\n\t\tclassNames.push('codicon-modifier-' + modifier);\n\t}\n\treturn classNames;\n}\n\nexport interface CSSIcon {\n\treadonly id: string;\n}\n\n\nexport namespace CSSIcon {\n\texport const iconNameSegment = '[A-Za-z0-9]+';\n\texport const iconNameExpression = '[A-Za-z0-9-]+';\n\texport const iconModifierExpression = '~[A-Za-z]+';\n\texport const iconNameCharacter = '[A-Za-z0-9~-]';\n\n\tconst cssIconIdRegex = new RegExp(`^(${iconNameExpression})(${iconModifierExpression})?$`);\n\n\texport function asClassNameArray(icon: CSSIcon): string[] {\n\t\tif (icon instanceof Codicon) {\n\t\t\treturn ['codicon', 'codicon-' + icon.id];\n\t\t}\n\t\tconst match = cssIconIdRegex.exec(icon.id);\n\t\tif (!match) {\n\t\t\treturn asClassNameArray(Codicon.error);\n\t\t}\n\t\tconst [, id, modifier] = match;\n\t\tconst classNames = ['codicon', 'codicon-' + id];\n\t\tif (modifier) {\n\t\t\tclassNames.push('codicon-modifier-' + modifier.substr(1));\n\t\t}\n\t\treturn classNames;\n\t}\n\n\texport function asClassName(icon: CSSIcon): string {\n\t\treturn asClassNameArray(icon).join(' ');\n\t}\n\n\texport function asCSSSelector(icon: CSSIcon): string {\n\t\treturn '.' + asClassNameArray(icon).join('.');\n\t}\n}\n\n\ninterface IconDefinition {\n\tfontCharacter: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'CodeExpectedError';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'CodeExpectedError';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// eslint-disable-next-line no-debugger\n\t\tdebugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => any = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function findLast<T>(arr: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = lastIndex(arr, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn arr[idx];\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function lastOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\n/**\n * @deprecated Use `[].flat()`\n */\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tconst result = array.splice(index, deleteCount);\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findMinBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findMaxBy(items, (a, b) => -comparator(a, b));\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: readonly T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable<T> {\n\tpublic static readonly empty = new CallbackIterable<never>(_callback => { });\n\n\tconstructor(\n\t\t/**\n\t\t * Calls the callback for every item.\n\t\t * Stops when the callback returns false.\n\t\t*/\n\t\tpublic readonly iterate: (callback: (item: T) => boolean) => void\n\t) {\n\t}\n\n\tforEach(handler: (item: T) => void) {\n\t\tthis.iterate(item => { handler(item); return true; });\n\t}\n\n\ttoArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tthis.iterate(item => { result.push(item); return true; });\n\t\treturn result;\n\t}\n\n\tfilter(predicate: (item: T) => boolean): CallbackIterable<T> {\n\t\treturn new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n\t}\n\n\tmap<TResult>(mapFn: (item: T) => TResult): CallbackIterable<TResult> {\n\t\treturn new CallbackIterable<TResult>(cb => this.iterate(item => cb(mapFn(item))));\n\t}\n\n\tsome(predicate: (item: T) => boolean): boolean {\n\t\tlet result = false;\n\t\tthis.iterate(item => { result = predicate(item); return !result; });\n\t\treturn result;\n\t}\n\n\tfindFirst(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLast(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLastMaxBy(comparator: Comparator<T>): T | undefined {\n\t\tlet result: T | undefined;\n\t\tlet first = true;\n\t\tthis.iterate(item => {\n\t\t\tif (first || CompareResult.isGreaterThan(comparator(item, result!))) {\n\t\t\t\tfirst = false;\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError, onUnexpectedError } from 'vs/base/common/errors';\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n\nexport function assertNever(value: never, message = 'Unreachable'): never {\n\tthrow new Error(message);\n}\n\nexport function assert(condition: boolean): void {\n\tif (!condition) {\n\t\tthrow new BugIndicatingError('Assertion Failed');\n\t}\n}\n\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition: () => boolean): void {\n\tif (!condition()) {\n\t\t// eslint-disable-next-line no-debugger\n\t\tdebugger;\n\t\t// Reevaluate `condition` again to make debugging easier\n\t\tcondition();\n\t\tonUnexpectedError(new BugIndicatingError('Assertion Failed'));\n\t}\n}\n\nexport function checkAdjacentItems<T>(items: readonly T[], predicate: (item1: T, item2: T) => boolean): boolean {\n\tlet i = 0;\n\twhile (i < items.length - 1) {\n\t\tconst a = items[i];\n\t\tconst b = items[i + 1];\n\t\tif (!predicate(a, b)) {\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => unknown): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\texport function forEach<T>(iterable: Iterable<T>, fn: (t: T, index: number) => any): void {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tfn(element, index++);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function collect<T>(iterable: Iterable<T>): T[] {\n\t\treturn consume(iterable)[0];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\tDependsOnKbLayout = -1,\n\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace,\n\tTab,\n\tEnter,\n\tShift,\n\tCtrl,\n\tAlt,\n\tPauseBreak,\n\tCapsLock,\n\tEscape,\n\tSpace,\n\tPageUp,\n\tPageDown,\n\tEnd,\n\tHome,\n\tLeftArrow,\n\tUpArrow,\n\tRightArrow,\n\tDownArrow,\n\tInsert,\n\tDelete,\n\n\tDigit0,\n\tDigit1,\n\tDigit2,\n\tDigit3,\n\tDigit4,\n\tDigit5,\n\tDigit6,\n\tDigit7,\n\tDigit8,\n\tDigit9,\n\n\tKeyA,\n\tKeyB,\n\tKeyC,\n\tKeyD,\n\tKeyE,\n\tKeyF,\n\tKeyG,\n\tKeyH,\n\tKeyI,\n\tKeyJ,\n\tKeyK,\n\tKeyL,\n\tKeyM,\n\tKeyN,\n\tKeyO,\n\tKeyP,\n\tKeyQ,\n\tKeyR,\n\tKeyS,\n\tKeyT,\n\tKeyU,\n\tKeyV,\n\tKeyW,\n\tKeyX,\n\tKeyY,\n\tKeyZ,\n\n\tMeta,\n\tContextMenu,\n\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\n\tNumLock,\n\tScrollLock,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tSemicolon,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tEqual,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tComma,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tMinus,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tPeriod,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tSlash,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tBackquote,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tBracketLeft,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tBackslash,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tBracketRight,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tQuote,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tIntlBackslash,\n\n\tNumpad0, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNumpad1, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNumpad2, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNumpad3, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNumpad4, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNumpad5, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNumpad6, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNumpad7, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNumpad8, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNumpad9, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNumpadMultiply,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNumpadAdd,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNumpadSubtract,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNumpadDecimal,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNumpadDivide,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION,\n\n\tABNT_C1, // Brazilian (ABNT) Keyboard\n\tABNT_C2, // Brazilian (ABNT) Keyboard\n\n\tAudioVolumeMute,\n\tAudioVolumeUp,\n\tAudioVolumeDown,\n\n\tBrowserSearch,\n\tBrowserHome,\n\tBrowserBack,\n\tBrowserForward,\n\n\tMediaTrackNext,\n\tMediaTrackPrevious,\n\tMediaStop,\n\tMediaPlayPause,\n\tLaunchMediaPlayer,\n\tLaunchMail,\n\tLaunchApp2,\n\n\t/**\n\t * VK_CLEAR, 0x0C, CLEAR key\n\t */\n\tClear,\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\n/**\n * keyboardEvent.code\n */\nexport const enum ScanCode {\n\tDependsOnKbLayout = -1,\n\tNone,\n\tHyper,\n\tSuper,\n\tFn,\n\tFnLock,\n\tSuspend,\n\tResume,\n\tTurbo,\n\tSleep,\n\tWakeUp,\n\tKeyA,\n\tKeyB,\n\tKeyC,\n\tKeyD,\n\tKeyE,\n\tKeyF,\n\tKeyG,\n\tKeyH,\n\tKeyI,\n\tKeyJ,\n\tKeyK,\n\tKeyL,\n\tKeyM,\n\tKeyN,\n\tKeyO,\n\tKeyP,\n\tKeyQ,\n\tKeyR,\n\tKeyS,\n\tKeyT,\n\tKeyU,\n\tKeyV,\n\tKeyW,\n\tKeyX,\n\tKeyY,\n\tKeyZ,\n\tDigit1,\n\tDigit2,\n\tDigit3,\n\tDigit4,\n\tDigit5,\n\tDigit6,\n\tDigit7,\n\tDigit8,\n\tDigit9,\n\tDigit0,\n\tEnter,\n\tEscape,\n\tBackspace,\n\tTab,\n\tSpace,\n\tMinus,\n\tEqual,\n\tBracketLeft,\n\tBracketRight,\n\tBackslash,\n\tIntlHash,\n\tSemicolon,\n\tQuote,\n\tBackquote,\n\tComma,\n\tPeriod,\n\tSlash,\n\tCapsLock,\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tPrintScreen,\n\tScrollLock,\n\tPause,\n\tInsert,\n\tHome,\n\tPageUp,\n\tDelete,\n\tEnd,\n\tPageDown,\n\tArrowRight,\n\tArrowLeft,\n\tArrowDown,\n\tArrowUp,\n\tNumLock,\n\tNumpadDivide,\n\tNumpadMultiply,\n\tNumpadSubtract,\n\tNumpadAdd,\n\tNumpadEnter,\n\tNumpad1,\n\tNumpad2,\n\tNumpad3,\n\tNumpad4,\n\tNumpad5,\n\tNumpad6,\n\tNumpad7,\n\tNumpad8,\n\tNumpad9,\n\tNumpad0,\n\tNumpadDecimal,\n\tIntlBackslash,\n\tContextMenu,\n\tPower,\n\tNumpadEqual,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\tF20,\n\tF21,\n\tF22,\n\tF23,\n\tF24,\n\tOpen,\n\tHelp,\n\tSelect,\n\tAgain,\n\tUndo,\n\tCut,\n\tCopy,\n\tPaste,\n\tFind,\n\tAudioVolumeMute,\n\tAudioVolumeUp,\n\tAudioVolumeDown,\n\tNumpadComma,\n\tIntlRo,\n\tKanaMode,\n\tIntlYen,\n\tConvert,\n\tNonConvert,\n\tLang1,\n\tLang2,\n\tLang3,\n\tLang4,\n\tLang5,\n\tAbort,\n\tProps,\n\tNumpadParenLeft,\n\tNumpadParenRight,\n\tNumpadBackspace,\n\tNumpadMemoryStore,\n\tNumpadMemoryRecall,\n\tNumpadMemoryClear,\n\tNumpadMemoryAdd,\n\tNumpadMemorySubtract,\n\tNumpadClear,\n\tNumpadClearEntry,\n\tControlLeft,\n\tShiftLeft,\n\tAltLeft,\n\tMetaLeft,\n\tControlRight,\n\tShiftRight,\n\tAltRight,\n\tMetaRight,\n\tBrightnessUp,\n\tBrightnessDown,\n\tMediaPlay,\n\tMediaRecord,\n\tMediaFastForward,\n\tMediaRewind,\n\tMediaTrackNext,\n\tMediaTrackPrevious,\n\tMediaStop,\n\tEject,\n\tMediaPlayPause,\n\tMediaSelect,\n\tLaunchMail,\n\tLaunchApp2,\n\tLaunchApp1,\n\tSelectTask,\n\tLaunchScreenSaver,\n\tBrowserSearch,\n\tBrowserHome,\n\tBrowserBack,\n\tBrowserForward,\n\tBrowserStop,\n\tBrowserRefresh,\n\tBrowserFavorites,\n\tZoomToggle,\n\tMailReply,\n\tMailForward,\n\tMailSend,\n\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tpublic _keyCodeToStr: string[];\n\tpublic _strToKeyCode: { [str: string]: KeyCode };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP: { [keyCode: number]: KeyCode } = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE: { [nativeKeyCode: string]: KeyCode } = {};\nconst scanCodeIntToStr: string[] = [];\nconst scanCodeStrToInt: { [code: string]: number } = Object.create(null);\nconst scanCodeLowerCaseStrToInt: { [code: string]: number } = Object.create(null);\n\nexport const ScanCodeUtils = {\n\tlowerCaseToEnum: (scanCode: string) => scanCodeLowerCaseStrToInt[scanCode] || ScanCode.None,\n\ttoEnum: (scanCode: string) => scanCodeStrToInt[scanCode] || ScanCode.None,\n\ttoString: (scanCode: ScanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\n\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE: KeyCode[] = [];\n\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE: ScanCode[] = [];\n\nfor (let i = 0; i <= ScanCode.MAX_VALUE; i++) {\n\tIMMUTABLE_CODE_TO_KEY_CODE[i] = KeyCode.DependsOnKbLayout;\n}\n\nfor (let i = 0; i <= KeyCode.MAX_VALUE; i++) {\n\tIMMUTABLE_KEY_CODE_TO_CODE[i] = ScanCode.DependsOnKbLayout;\n}\n\n(function () {\n\n\t// See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n\t// See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n\n\tconst empty = '';\n\ttype IMappingEntry = [number, 0 | 1, ScanCode, string, KeyCode, string, number, string, string, string];\n\tconst mappings: IMappingEntry[] = [\n\t\t// keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n\t\t[0, 1, ScanCode.None, 'None', KeyCode.Unknown, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n\t\t[0, 1, ScanCode.Hyper, 'Hyper', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Super, 'Super', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Fn, 'Fn', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.FnLock, 'FnLock', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Suspend, 'Suspend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Resume, 'Resume', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Turbo, 'Turbo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Sleep, 'Sleep', KeyCode.Unknown, empty, 0, 'VK_SLEEP', empty, empty],\n\t\t[0, 1, ScanCode.WakeUp, 'WakeUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[31, 0, ScanCode.KeyA, 'KeyA', KeyCode.KeyA, 'A', 65, 'VK_A', empty, empty],\n\t\t[32, 0, ScanCode.KeyB, 'KeyB', KeyCode.KeyB, 'B', 66, 'VK_B', empty, empty],\n\t\t[33, 0, ScanCode.KeyC, 'KeyC', KeyCode.KeyC, 'C', 67, 'VK_C', empty, empty],\n\t\t[34, 0, ScanCode.KeyD, 'KeyD', KeyCode.KeyD, 'D', 68, 'VK_D', empty, empty],\n\t\t[35, 0, ScanCode.KeyE, 'KeyE', KeyCode.KeyE, 'E', 69, 'VK_E', empty, empty],\n\t\t[36, 0, ScanCode.KeyF, 'KeyF', KeyCode.KeyF, 'F', 70, 'VK_F', empty, empty],\n\t\t[37, 0, ScanCode.KeyG, 'KeyG', KeyCode.KeyG, 'G', 71, 'VK_G', empty, empty],\n\t\t[38, 0, ScanCode.KeyH, 'KeyH', KeyCode.KeyH, 'H', 72, 'VK_H', empty, empty],\n\t\t[39, 0, ScanCode.KeyI, 'KeyI', KeyCode.KeyI, 'I', 73, 'VK_I', empty, empty],\n\t\t[40, 0, ScanCode.KeyJ, 'KeyJ', KeyCode.KeyJ, 'J', 74, 'VK_J', empty, empty],\n\t\t[41, 0, ScanCode.KeyK, 'KeyK', KeyCode.KeyK, 'K', 75, 'VK_K', empty, empty],\n\t\t[42, 0, ScanCode.KeyL, 'KeyL', KeyCode.KeyL, 'L', 76, 'VK_L', empty, empty],\n\t\t[43, 0, ScanCode.KeyM, 'KeyM', KeyCode.KeyM, 'M', 77, 'VK_M', empty, empty],\n\t\t[44, 0, ScanCode.KeyN, 'KeyN', KeyCode.KeyN, 'N', 78, 'VK_N', empty, empty],\n\t\t[45, 0, ScanCode.KeyO, 'KeyO', KeyCode.KeyO, 'O', 79, 'VK_O', empty, empty],\n\t\t[46, 0, ScanCode.KeyP, 'KeyP', KeyCode.KeyP, 'P', 80, 'VK_P', empty, empty],\n\t\t[47, 0, ScanCode.KeyQ, 'KeyQ', KeyCode.KeyQ, 'Q', 81, 'VK_Q', empty, empty],\n\t\t[48, 0, ScanCode.KeyR, 'KeyR', KeyCode.KeyR, 'R', 82, 'VK_R', empty, empty],\n\t\t[49, 0, ScanCode.KeyS, 'KeyS', KeyCode.KeyS, 'S', 83, 'VK_S', empty, empty],\n\t\t[50, 0, ScanCode.KeyT, 'KeyT', KeyCode.KeyT, 'T', 84, 'VK_T', empty, empty],\n\t\t[51, 0, ScanCode.KeyU, 'KeyU', KeyCode.KeyU, 'U', 85, 'VK_U', empty, empty],\n\t\t[52, 0, ScanCode.KeyV, 'KeyV', KeyCode.KeyV, 'V', 86, 'VK_V', empty, empty],\n\t\t[53, 0, ScanCode.KeyW, 'KeyW', KeyCode.KeyW, 'W', 87, 'VK_W', empty, empty],\n\t\t[54, 0, ScanCode.KeyX, 'KeyX', KeyCode.KeyX, 'X', 88, 'VK_X', empty, empty],\n\t\t[55, 0, ScanCode.KeyY, 'KeyY', KeyCode.KeyY, 'Y', 89, 'VK_Y', empty, empty],\n\t\t[56, 0, ScanCode.KeyZ, 'KeyZ', KeyCode.KeyZ, 'Z', 90, 'VK_Z', empty, empty],\n\t\t[22, 0, ScanCode.Digit1, 'Digit1', KeyCode.Digit1, '1', 49, 'VK_1', empty, empty],\n\t\t[23, 0, ScanCode.Digit2, 'Digit2', KeyCode.Digit2, '2', 50, 'VK_2', empty, empty],\n\t\t[24, 0, ScanCode.Digit3, 'Digit3', KeyCode.Digit3, '3', 51, 'VK_3', empty, empty],\n\t\t[25, 0, ScanCode.Digit4, 'Digit4', KeyCode.Digit4, '4', 52, 'VK_4', empty, empty],\n\t\t[26, 0, ScanCode.Digit5, 'Digit5', KeyCode.Digit5, '5', 53, 'VK_5', empty, empty],\n\t\t[27, 0, ScanCode.Digit6, 'Digit6', KeyCode.Digit6, '6', 54, 'VK_6', empty, empty],\n\t\t[28, 0, ScanCode.Digit7, 'Digit7', KeyCode.Digit7, '7', 55, 'VK_7', empty, empty],\n\t\t[29, 0, ScanCode.Digit8, 'Digit8', KeyCode.Digit8, '8', 56, 'VK_8', empty, empty],\n\t\t[30, 0, ScanCode.Digit9, 'Digit9', KeyCode.Digit9, '9', 57, 'VK_9', empty, empty],\n\t\t[21, 0, ScanCode.Digit0, 'Digit0', KeyCode.Digit0, '0', 48, 'VK_0', empty, empty],\n\t\t[3, 1, ScanCode.Enter, 'Enter', KeyCode.Enter, 'Enter', 13, 'VK_RETURN', empty, empty],\n\t\t[9, 1, ScanCode.Escape, 'Escape', KeyCode.Escape, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n\t\t[1, 1, ScanCode.Backspace, 'Backspace', KeyCode.Backspace, 'Backspace', 8, 'VK_BACK', empty, empty],\n\t\t[2, 1, ScanCode.Tab, 'Tab', KeyCode.Tab, 'Tab', 9, 'VK_TAB', empty, empty],\n\t\t[10, 1, ScanCode.Space, 'Space', KeyCode.Space, 'Space', 32, 'VK_SPACE', empty, empty],\n\t\t[83, 0, ScanCode.Minus, 'Minus', KeyCode.Minus, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n\t\t[81, 0, ScanCode.Equal, 'Equal', KeyCode.Equal, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n\t\t[87, 0, ScanCode.BracketLeft, 'BracketLeft', KeyCode.BracketLeft, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n\t\t[89, 0, ScanCode.BracketRight, 'BracketRight', KeyCode.BracketRight, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n\t\t[88, 0, ScanCode.Backslash, 'Backslash', KeyCode.Backslash, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n\t\t[0, 0, ScanCode.IntlHash, 'IntlHash', KeyCode.Unknown, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n\t\t[80, 0, ScanCode.Semicolon, 'Semicolon', KeyCode.Semicolon, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n\t\t[90, 0, ScanCode.Quote, 'Quote', KeyCode.Quote, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n\t\t[86, 0, ScanCode.Backquote, 'Backquote', KeyCode.Backquote, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n\t\t[82, 0, ScanCode.Comma, 'Comma', KeyCode.Comma, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n\t\t[84, 0, ScanCode.Period, 'Period', KeyCode.Period, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n\t\t[85, 0, ScanCode.Slash, 'Slash', KeyCode.Slash, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n\t\t[8, 1, ScanCode.CapsLock, 'CapsLock', KeyCode.CapsLock, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n\t\t[59, 1, ScanCode.F1, 'F1', KeyCode.F1, 'F1', 112, 'VK_F1', empty, empty],\n\t\t[60, 1, ScanCode.F2, 'F2', KeyCode.F2, 'F2', 113, 'VK_F2', empty, empty],\n\t\t[61, 1, ScanCode.F3, 'F3', KeyCode.F3, 'F3', 114, 'VK_F3', empty, empty],\n\t\t[62, 1, ScanCode.F4, 'F4', KeyCode.F4, 'F4', 115, 'VK_F4', empty, empty],\n\t\t[63, 1, ScanCode.F5, 'F5', KeyCode.F5, 'F5', 116, 'VK_F5', empty, empty],\n\t\t[64, 1, ScanCode.F6, 'F6', KeyCode.F6, 'F6', 117, 'VK_F6', empty, empty],\n\t\t[65, 1, ScanCode.F7, 'F7', KeyCode.F7, 'F7', 118, 'VK_F7', empty, empty],\n\t\t[66, 1, ScanCode.F8, 'F8', KeyCode.F8, 'F8', 119, 'VK_F8', empty, empty],\n\t\t[67, 1, ScanCode.F9, 'F9', KeyCode.F9, 'F9', 120, 'VK_F9', empty, empty],\n\t\t[68, 1, ScanCode.F10, 'F10', KeyCode.F10, 'F10', 121, 'VK_F10', empty, empty],\n\t\t[69, 1, ScanCode.F11, 'F11', KeyCode.F11, 'F11', 122, 'VK_F11', empty, empty],\n\t\t[70, 1, ScanCode.F12, 'F12', KeyCode.F12, 'F12', 123, 'VK_F12', empty, empty],\n\t\t[0, 1, ScanCode.PrintScreen, 'PrintScreen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[79, 1, ScanCode.ScrollLock, 'ScrollLock', KeyCode.ScrollLock, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n\t\t[7, 1, ScanCode.Pause, 'Pause', KeyCode.PauseBreak, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n\t\t[19, 1, ScanCode.Insert, 'Insert', KeyCode.Insert, 'Insert', 45, 'VK_INSERT', empty, empty],\n\t\t[14, 1, ScanCode.Home, 'Home', KeyCode.Home, 'Home', 36, 'VK_HOME', empty, empty],\n\t\t[11, 1, ScanCode.PageUp, 'PageUp', KeyCode.PageUp, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n\t\t[20, 1, ScanCode.Delete, 'Delete', KeyCode.Delete, 'Delete', 46, 'VK_DELETE', empty, empty],\n\t\t[13, 1, ScanCode.End, 'End', KeyCode.End, 'End', 35, 'VK_END', empty, empty],\n\t\t[12, 1, ScanCode.PageDown, 'PageDown', KeyCode.PageDown, 'PageDown', 34, 'VK_NEXT', empty, empty],\n\t\t[17, 1, ScanCode.ArrowRight, 'ArrowRight', KeyCode.RightArrow, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n\t\t[15, 1, ScanCode.ArrowLeft, 'ArrowLeft', KeyCode.LeftArrow, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n\t\t[18, 1, ScanCode.ArrowDown, 'ArrowDown', KeyCode.DownArrow, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n\t\t[16, 1, ScanCode.ArrowUp, 'ArrowUp', KeyCode.UpArrow, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n\t\t[78, 1, ScanCode.NumLock, 'NumLock', KeyCode.NumLock, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n\t\t[108, 1, ScanCode.NumpadDivide, 'NumpadDivide', KeyCode.NumpadDivide, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n\t\t[103, 1, ScanCode.NumpadMultiply, 'NumpadMultiply', KeyCode.NumpadMultiply, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n\t\t[106, 1, ScanCode.NumpadSubtract, 'NumpadSubtract', KeyCode.NumpadSubtract, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n\t\t[104, 1, ScanCode.NumpadAdd, 'NumpadAdd', KeyCode.NumpadAdd, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n\t\t[3, 1, ScanCode.NumpadEnter, 'NumpadEnter', KeyCode.Enter, empty, 0, empty, empty, empty],\n\t\t[94, 1, ScanCode.Numpad1, 'Numpad1', KeyCode.Numpad1, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n\t\t[95, 1, ScanCode.Numpad2, 'Numpad2', KeyCode.Numpad2, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n\t\t[96, 1, ScanCode.Numpad3, 'Numpad3', KeyCode.Numpad3, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n\t\t[97, 1, ScanCode.Numpad4, 'Numpad4', KeyCode.Numpad4, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n\t\t[98, 1, ScanCode.Numpad5, 'Numpad5', KeyCode.Numpad5, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n\t\t[99, 1, ScanCode.Numpad6, 'Numpad6', KeyCode.Numpad6, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n\t\t[100, 1, ScanCode.Numpad7, 'Numpad7', KeyCode.Numpad7, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n\t\t[101, 1, ScanCode.Numpad8, 'Numpad8', KeyCode.Numpad8, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n\t\t[102, 1, ScanCode.Numpad9, 'Numpad9', KeyCode.Numpad9, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n\t\t[93, 1, ScanCode.Numpad0, 'Numpad0', KeyCode.Numpad0, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n\t\t[107, 1, ScanCode.NumpadDecimal, 'NumpadDecimal', KeyCode.NumpadDecimal, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n\t\t[92, 0, ScanCode.IntlBackslash, 'IntlBackslash', KeyCode.IntlBackslash, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n\t\t[58, 1, ScanCode.ContextMenu, 'ContextMenu', KeyCode.ContextMenu, 'ContextMenu', 93, empty, empty, empty],\n\t\t[0, 1, ScanCode.Power, 'Power', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadEqual, 'NumpadEqual', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[71, 1, ScanCode.F13, 'F13', KeyCode.F13, 'F13', 124, 'VK_F13', empty, empty],\n\t\t[72, 1, ScanCode.F14, 'F14', KeyCode.F14, 'F14', 125, 'VK_F14', empty, empty],\n\t\t[73, 1, ScanCode.F15, 'F15', KeyCode.F15, 'F15', 126, 'VK_F15', empty, empty],\n\t\t[74, 1, ScanCode.F16, 'F16', KeyCode.F16, 'F16', 127, 'VK_F16', empty, empty],\n\t\t[75, 1, ScanCode.F17, 'F17', KeyCode.F17, 'F17', 128, 'VK_F17', empty, empty],\n\t\t[76, 1, ScanCode.F18, 'F18', KeyCode.F18, 'F18', 129, 'VK_F18', empty, empty],\n\t\t[77, 1, ScanCode.F19, 'F19', KeyCode.F19, 'F19', 130, 'VK_F19', empty, empty],\n\t\t[0, 1, ScanCode.F20, 'F20', KeyCode.Unknown, empty, 0, 'VK_F20', empty, empty],\n\t\t[0, 1, ScanCode.F21, 'F21', KeyCode.Unknown, empty, 0, 'VK_F21', empty, empty],\n\t\t[0, 1, ScanCode.F22, 'F22', KeyCode.Unknown, empty, 0, 'VK_F22', empty, empty],\n\t\t[0, 1, ScanCode.F23, 'F23', KeyCode.Unknown, empty, 0, 'VK_F23', empty, empty],\n\t\t[0, 1, ScanCode.F24, 'F24', KeyCode.Unknown, empty, 0, 'VK_F24', empty, empty],\n\t\t[0, 1, ScanCode.Open, 'Open', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Help, 'Help', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Select, 'Select', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Again, 'Again', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Undo, 'Undo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Cut, 'Cut', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Copy, 'Copy', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Paste, 'Paste', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Find, 'Find', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.AudioVolumeMute, 'AudioVolumeMute', KeyCode.AudioVolumeMute, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n\t\t[0, 1, ScanCode.AudioVolumeUp, 'AudioVolumeUp', KeyCode.AudioVolumeUp, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n\t\t[0, 1, ScanCode.AudioVolumeDown, 'AudioVolumeDown', KeyCode.AudioVolumeDown, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n\t\t[105, 1, ScanCode.NumpadComma, 'NumpadComma', KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n\t\t[110, 0, ScanCode.IntlRo, 'IntlRo', KeyCode.ABNT_C1, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n\t\t[0, 1, ScanCode.KanaMode, 'KanaMode', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 0, ScanCode.IntlYen, 'IntlYen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Convert, 'Convert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NonConvert, 'NonConvert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang1, 'Lang1', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang2, 'Lang2', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang3, 'Lang3', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang4, 'Lang4', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang5, 'Lang5', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Abort, 'Abort', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Props, 'Props', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadParenLeft, 'NumpadParenLeft', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadParenRight, 'NumpadParenRight', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadBackspace, 'NumpadBackspace', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryStore, 'NumpadMemoryStore', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryRecall, 'NumpadMemoryRecall', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryClear, 'NumpadMemoryClear', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryAdd, 'NumpadMemoryAdd', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemorySubtract, 'NumpadMemorySubtract', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadClear, 'NumpadClear', KeyCode.Clear, 'Clear', 12, 'VK_CLEAR', empty, empty],\n\t\t[0, 1, ScanCode.NumpadClearEntry, 'NumpadClearEntry', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[5, 1, ScanCode.None, empty, KeyCode.Ctrl, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n\t\t[4, 1, ScanCode.None, empty, KeyCode.Shift, 'Shift', 16, 'VK_SHIFT', empty, empty],\n\t\t[6, 1, ScanCode.None, empty, KeyCode.Alt, 'Alt', 18, 'VK_MENU', empty, empty],\n\t\t[57, 1, ScanCode.None, empty, KeyCode.Meta, 'Meta', 0, 'VK_COMMAND', empty, empty],\n\t\t[5, 1, ScanCode.ControlLeft, 'ControlLeft', KeyCode.Ctrl, empty, 0, 'VK_LCONTROL', empty, empty],\n\t\t[4, 1, ScanCode.ShiftLeft, 'ShiftLeft', KeyCode.Shift, empty, 0, 'VK_LSHIFT', empty, empty],\n\t\t[6, 1, ScanCode.AltLeft, 'AltLeft', KeyCode.Alt, empty, 0, 'VK_LMENU', empty, empty],\n\t\t[57, 1, ScanCode.MetaLeft, 'MetaLeft', KeyCode.Meta, empty, 0, 'VK_LWIN', empty, empty],\n\t\t[5, 1, ScanCode.ControlRight, 'ControlRight', KeyCode.Ctrl, empty, 0, 'VK_RCONTROL', empty, empty],\n\t\t[4, 1, ScanCode.ShiftRight, 'ShiftRight', KeyCode.Shift, empty, 0, 'VK_RSHIFT', empty, empty],\n\t\t[6, 1, ScanCode.AltRight, 'AltRight', KeyCode.Alt, empty, 0, 'VK_RMENU', empty, empty],\n\t\t[57, 1, ScanCode.MetaRight, 'MetaRight', KeyCode.Meta, empty, 0, 'VK_RWIN', empty, empty],\n\t\t[0, 1, ScanCode.BrightnessUp, 'BrightnessUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.BrightnessDown, 'BrightnessDown', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaPlay, 'MediaPlay', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaRecord, 'MediaRecord', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaFastForward, 'MediaFastForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaRewind, 'MediaRewind', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[114, 1, ScanCode.MediaTrackNext, 'MediaTrackNext', KeyCode.MediaTrackNext, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n\t\t[115, 1, ScanCode.MediaTrackPrevious, 'MediaTrackPrevious', KeyCode.MediaTrackPrevious, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n\t\t[116, 1, ScanCode.MediaStop, 'MediaStop', KeyCode.MediaStop, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n\t\t[0, 1, ScanCode.Eject, 'Eject', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[117, 1, ScanCode.MediaPlayPause, 'MediaPlayPause', KeyCode.MediaPlayPause, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n\t\t[0, 1, ScanCode.MediaSelect, 'MediaSelect', KeyCode.LaunchMediaPlayer, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n\t\t[0, 1, ScanCode.LaunchMail, 'LaunchMail', KeyCode.LaunchMail, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n\t\t[0, 1, ScanCode.LaunchApp2, 'LaunchApp2', KeyCode.LaunchApp2, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n\t\t[0, 1, ScanCode.LaunchApp1, 'LaunchApp1', KeyCode.Unknown, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n\t\t[0, 1, ScanCode.SelectTask, 'SelectTask', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.LaunchScreenSaver, 'LaunchScreenSaver', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.BrowserSearch, 'BrowserSearch', KeyCode.BrowserSearch, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n\t\t[0, 1, ScanCode.BrowserHome, 'BrowserHome', KeyCode.BrowserHome, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n\t\t[112, 1, ScanCode.BrowserBack, 'BrowserBack', KeyCode.BrowserBack, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n\t\t[113, 1, ScanCode.BrowserForward, 'BrowserForward', KeyCode.BrowserForward, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n\t\t[0, 1, ScanCode.BrowserStop, 'BrowserStop', KeyCode.Unknown, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n\t\t[0, 1, ScanCode.BrowserRefresh, 'BrowserRefresh', KeyCode.Unknown, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n\t\t[0, 1, ScanCode.BrowserFavorites, 'BrowserFavorites', KeyCode.Unknown, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n\t\t[0, 1, ScanCode.ZoomToggle, 'ZoomToggle', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MailReply, 'MailReply', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MailForward, 'MailForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MailSend, 'MailSend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\n\t\t// See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n\t\t// If an Input Method Editor is processing key input and the event is keydown, return 229.\n\t\t[109, 1, ScanCode.None, empty, KeyCode.KEY_IN_COMPOSITION, 'KeyInComposition', 229, empty, empty, empty],\n\t\t[111, 1, ScanCode.None, empty, KeyCode.ABNT_C2, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n\t\t[91, 1, ScanCode.None, empty, KeyCode.OEM_8, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANA', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANGUL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_JUNJA', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_FINAL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANJA', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANJI', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CONVERT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONCONVERT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ACCEPT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_MODECHANGE', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SELECT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PRINT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXECUTE', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SNAPSHOT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HELP', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_APPS', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PROCESSKEY', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PACKET', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ATTN', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CRSEL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXSEL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EREOF', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PLAY', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ZOOM', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONAME', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PA1', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n\t];\n\n\tconst seenKeyCode: boolean[] = [];\n\tconst seenScanCode: boolean[] = [];\n\tfor (const mapping of mappings) {\n\t\tconst [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n\t\tif (!seenScanCode[scanCode]) {\n\t\t\tseenScanCode[scanCode] = true;\n\t\t\tscanCodeIntToStr[scanCode] = scanCodeStr;\n\t\t\tscanCodeStrToInt[scanCodeStr] = scanCode;\n\t\t\tscanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n\t\t\tif (immutable) {\n\t\t\t\tIMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n\t\t\t\tif (\n\t\t\t\t\t(keyCode !== KeyCode.Unknown)\n\t\t\t\t\t&& (keyCode !== KeyCode.Enter)\n\t\t\t\t\t&& (keyCode !== KeyCode.Ctrl)\n\t\t\t\t\t&& (keyCode !== KeyCode.Shift)\n\t\t\t\t\t&& (keyCode !== KeyCode.Alt)\n\t\t\t\t\t&& (keyCode !== KeyCode.Meta)\n\t\t\t\t) {\n\t\t\t\t\tIMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!seenKeyCode[keyCode]) {\n\t\t\tseenKeyCode[keyCode] = true;\n\t\t\tif (!keyCodeStr) {\n\t\t\t\tthrow new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n\t\t\t}\n\t\t\tuiMap.define(keyCode, keyCodeStr);\n\t\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n\t\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n\t\t}\n\t\tif (eventKeyCode) {\n\t\t\tEVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n\t\t}\n\t\tif (vkey) {\n\t\t\tNATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n\t\t}\n\t}\n\t// Manually added due to the exclusion above (due to duplication with NumpadEnter)\n\tIMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Enter] = ScanCode.Enter;\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n\n\texport function toElectronAccelerator(keyCode: KeyCode): string | null {\n\t\tif (keyCode >= KeyCode.Numpad0 && keyCode <= KeyCode.NumpadDivide) {\n\t\t\t// [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n\t\t\t// renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n\t\t\t// numdiv is rendered as \"/\", numsub is rendered as \"-\".\n\t\t\t//\n\t\t\t// This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n\t\t\t// from keybindings based on regular keys.\n\t\t\t//\n\t\t\t// We therefore need to fall back to custom rendering for numpad keys.\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A value that is resolved synchronously when it is first needed.\n */\nexport interface Lazy<T> {\n\n\thasValue(): boolean;\n\n\n\tgetValue(): T;\n\n\n\tmap<R>(f: (x: T) => R): Lazy<R>;\n}\n\nexport class Lazy<T> {\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\thasValue() { return this._didRun; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n\n\t/**\n\t * Create a new lazy value that is the result of applying `f` to the wrapped value.\n\t *\n\t * This does not force the evaluation of the current lazy value.\n\t */\n\tmap<R>(f: (x: T) => R): Lazy<R> {\n\t\treturn new Lazy<R>(() => f(this.getValue()));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nfunction markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new AggregateError(errors, 'Encountered errors while disposing of store');\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\nexport function disposeIfDisposable<T extends IDisposable | object>(disposables: Array<T>): Array<T> {\n\tfor (const d of disposables) {\n\t\tif (isDisposable(d)) {\n\t\t\td.dispose();\n\t\t}\n\t}\n\treturn [];\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: once(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Returns `true` if this object has been disposed\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable implements IDisposable {\n\n\tdispose: () => void = () => { };\n\tunset: () => void = () => { };\n\tisset: () => boolean = () => false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tset(fn: Function) {\n\t\tlet callback: Function | undefined = fn;\n\t\tthis.unset = () => callback = undefined;\n\t\tthis.isset = () => callback !== undefined;\n\t\tthis.dispose = () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = undefined;\n\t\t\t\tmarkAsDisposed(this);\n\t\t\t}\n\t\t};\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isMobile = _userAgent?.indexOf('Mobi') >= 0;\n\t_isWeb = true;\n\n\t_locale = LANGUAGE_DEFAULT;\n\n\t_language = _locale;\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals, INodeProcess, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, DisposableStore, IDisposable, SafeDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IObservable, IObserver } from 'vs/base/common/observable';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\n// _enableSnapshotPotentialLeakWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onListenerDidAdd: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onListenerDidAdd = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> extends IDisposable {\n\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tprivate readonly disposables = new DisposableStore();\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn, this.disposables));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn, this.disposables));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn, this.disposables));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial, this.disposables));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event, undefined, this.disposables));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold, this.disposables));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.disposables.dispose();\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => any): IDisposable {\n\t\thandler(undefined);\n\t\treturn event(e => handler(e));\n\t}\n\n\texport function runAndSubscribeWithStore<T>(event: Event<T>, handler: (e: T | undefined, disposableStore: DisposableStore) => any): IDisposable {\n\t\tlet store: DisposableStore | null = null;\n\n\t\tfunction run(e: T | undefined) {\n\t\t\tstore?.dispose();\n\t\t\tstore = new DisposableStore();\n\t\t\thandler(e, store);\n\t\t}\n\n\t\trun(undefined);\n\t\tconst disposable = event(e => run(e));\n\t\treturn toDisposable(() => {\n\t\t\tdisposable.dispose();\n\t\t\tstore?.dispose();\n\t\t});\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly obs: IObservable<T, any>, store: DisposableStore | undefined) {\n\t\t\tconst options = {\n\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\tobs.addObserver(this);\n\t\t\t\t},\n\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\tobs.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// console.assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservable<T, TChange>, _change: TChange): void {\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\tif (--this._counter === 0) {\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this.obs.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\texport function fromObservable<T>(obs: IObservable<T, any>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n}\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nexport class EventProfiling {\n\n\tstatic readonly all = new Set<EventProfiling>();\n\n\tprivate static _idPool = 0;\n\n\treadonly name: string;\n\tpublic listenerCount: number = 0;\n\tpublic invocationCount = 0;\n\tpublic elapsedOverall = 0;\n\tpublic durations: number[] = [];\n\n\tprivate _stopWatch?: StopWatch;\n\n\tconstructor(name: string) {\n\t\tthis.name = `${name}_${EventProfiling._idPool++}`;\n\t\tEventProfiling.all.add(this);\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis.listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis.durations.push(elapsed);\n\t\t\tthis.elapsedOverall += elapsed;\n\t\t\tthis.invocationCount += 1;\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\treturn new Stacktrace(new Error().stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\nclass Listener<T> {\n\n\treadonly subscription = new SafeDisposable();\n\n\tconstructor(\n\t\treadonly callback: (e: T) => void,\n\t\treadonly callbackThis: any | undefined,\n\t\treadonly stack: Stacktrace | undefined\n\t) { }\n\n\tinvoke(e: T) {\n\t\tthis.callback.call(this.callbackThis, e);\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: EventDeliveryQueue;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = Array.from(this._listeners);\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tfor (const listener of listeners) {\n\t\t\t\t\t\t\tif (listener.subscription.isset()) {\n\t\t\t\t\t\t\t\tlistener.subscription.unset();\n\t\t\t\t\t\t\t\tlistener.stack?.print();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners.clear();\n\t\t\t}\n\t\t\tthis._deliveryQueue?.clear(this);\n\t\t\tthis._options?.onLastListenerRemove?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (callback: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tlet removeMonitor: Function | undefined;\n\t\t\t\tlet stack: Stacktrace | undefined;\n\t\t\t\tif (this._leakageMon && this._listeners.size >= 30) {\n\t\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\t\tstack = Stacktrace.create();\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(stack, this._listeners.size + 1);\n\t\t\t\t}\n\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tstack = stack ?? Stacktrace.create();\n\t\t\t\t}\n\n\t\t\t\tconst listener = new Listener(callback, thisArgs, stack);\n\t\t\t\tconst removeListener = this._listeners.push(listener);\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options?.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, callback, thisArgs);\n\t\t\t\t}\n\n\t\t\t\tconst result = listener.subscription.set(() => {\n\t\t\t\t\tremoveMonitor?.();\n\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new PrivateEventDeliveryQueue();\n\t\t\t}\n\n\t\t\tfor (const listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push(this, listener, event);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\tthis._deliveryQueue.deliver();\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\thasListeners(): boolean {\n\t\tif (!this._listeners) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this._listeners.isEmpty();\n\t}\n}\n\nexport class EventDeliveryQueue {\n\tprotected _queue = new LinkedList<EventDeliveryQueueElement>();\n\n\tget size(): number {\n\t\treturn this._queue.size;\n\t}\n\n\tpush<T>(emitter: Emitter<T>, listener: Listener<T>, event: T): void {\n\t\tthis._queue.push(new EventDeliveryQueueElement(emitter, listener, event));\n\t}\n\n\tclear<T>(emitter: Emitter<T>): void {\n\t\tconst newQueue = new LinkedList<EventDeliveryQueueElement>();\n\t\tfor (const element of this._queue) {\n\t\t\tif (element.emitter !== emitter) {\n\t\t\t\tnewQueue.push(element);\n\t\t\t}\n\t\t}\n\t\tthis._queue = newQueue;\n\t}\n\n\tdeliver(): void {\n\t\twhile (this._queue.size > 0) {\n\t\t\tconst element = this._queue.shift()!;\n\t\t\ttry {\n\t\t\t\telement.listener.invoke(element.event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * An `EventDeliveryQueue` that is guaranteed to be used by a single `Emitter`.\n */\nclass PrivateEventDeliveryQueue extends EventDeliveryQueue {\n\toverride clear<T>(emitter: Emitter<T>): void {\n\t\t// Here we can just clear the entire linked list because\n\t\t// all elements are guaranteed to belong to this emitter\n\t\tthis._queue.clear();\n\t}\n}\n\nclass EventDeliveryQueueElement<T = any> {\n\tconstructor(\n\t\treadonly emitter: Emitter<T>,\n\t\treadonly listener: Listener<T>,\n\t\treadonly event: T\n\t) { }\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener.callback);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener.invoke(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tif (this._eventQueue.size > 0) {\n\t\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\t\tthis._eventQueue.clear();\n\t\t\t\t\tsuper.fire(this._mergeFn(events));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\n\t\tif (!this.hasListeners()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tthis._parentListener?.dispose();\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: string | undefined = undefined;\n\n\tconstructor(private readonly fn: (arg: TArg) => TComputed) {\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = JSON.stringify(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this.fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache (referential equality) to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TValue> {\n\tprivate readonly _map = new Map<TArg, TValue>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TValue> {\n\t\treturn this._map;\n\t}\n\n\tconstructor(private readonly fn: (arg: TArg) => TValue) { }\n\n\tpublic get(arg: TArg): TValue {\n\t\tif (this._map.has(arg)) {\n\t\t\treturn this._map.get(arg)!;\n\t\t}\n\t\tconst value = this.fn(arg);\n\t\tthis._map.set(arg, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from 'vs/base/common/cache';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\nexport function charCount(str: string): number {\n\tconst iterator = new GraphemeIterator(str);\n\tlet length = 0;\n\twhile (!iterator.eol()) {\n\t\tlength++;\n\t\titerator.nextGraphemeLength();\n\t}\n\treturn length;\n}\n\nlet CONTAINS_RTL: RegExp | undefined = undefined;\n\nfunction makeContainsRtl() {\n\t// Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n\treturn /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\tif (!CONTAINS_RTL) {\n\t\tCONTAINS_RTL = makeContainsRtl();\n\t}\n\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>((locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.getValue();\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.getValue();\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = doHash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nexport function toHexString(buffer: ArrayBuffer): string;\nexport function toHexString(value: number, bitsize?: number): string;\nexport function toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\n\tif (bufferOrValue instanceof ArrayBuffer) {\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n\t}\n\n\treturn leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\nimport { stringHash } from 'vs/base/common/hash';\nimport { Constants } from 'vs/base/common/uint';\n\nexport class StringDiffSequence implements ISequence {\n\n\tconstructor(private source: string) { }\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\tconst source = this.source;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t}\n\t\treturn characters;\n\t}\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n\nexport interface ISequence {\n\tgetElements(): Int32Array | number[] | string[];\n\tgetStrictElement?(index: number): string;\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, matchLengthOfLongest: number): boolean;\n}\n\nexport interface IDiffResult {\n\tquitEarly: boolean;\n\tchanges: IDiffChange[];\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n\tpublic static Copy2(sourceArray: Int32Array, sourceIndex: number, destinationArray: Int32Array, destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nconst enum LocalConstants {\n\tMaxDifferencesHistory = 1447\n}\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate readonly ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate readonly _originalSequence: ISequence;\n\tprivate readonly _modifiedSequence: ISequence;\n\tprivate readonly _hasStrings: boolean;\n\tprivate readonly _originalStringElements: string[];\n\tprivate readonly _originalElementsOrHash: Int32Array;\n\tprivate readonly _modifiedStringElements: string[];\n\tprivate readonly _modifiedElementsOrHash: Int32Array;\n\n\tprivate m_forwardHistory: Int32Array[];\n\tprivate m_reverseHistory: Int32Array[];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tthis._originalSequence = originalSequence;\n\t\tthis._modifiedSequence = modifiedSequence;\n\n\t\tconst [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n\t\tconst [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n\n\t\tthis._hasStrings = (originalHasStrings && modifiedHasStrings);\n\t\tthis._originalStringElements = originalStringElements;\n\t\tthis._originalElementsOrHash = originalElementsOrHash;\n\t\tthis._modifiedStringElements = modifiedStringElements;\n\t\tthis._modifiedElementsOrHash = modifiedElementsOrHash;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate static _isStringArray(arr: Int32Array | number[] | string[]): arr is string[] {\n\t\treturn (arr.length > 0 && typeof arr[0] === 'string');\n\t}\n\n\tprivate static _getElements(sequence: ISequence): [string[], Int32Array, boolean] {\n\t\tconst elements = sequence.getElements();\n\n\t\tif (LcsDiff._isStringArray(elements)) {\n\t\t\tconst hashes = new Int32Array(elements.length);\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\thashes[i] = stringHash(elements[i], 0);\n\t\t\t}\n\t\t\treturn [elements, hashes, true];\n\t\t}\n\n\t\tif (elements instanceof Int32Array) {\n\t\t\treturn [[], elements, false];\n\t\t}\n\n\t\treturn [[], new Int32Array(elements), false];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n\t}\n\n\tprivate ElementsAreStrictEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (!this.ElementsAreEqual(originalIndex, newIndex)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n\t\tconst modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n\t\treturn (originalElement === modifiedElement);\n\t}\n\n\tprivate static _getStrictElement(sequence: ISequence, index: number): string | null {\n\t\tif (typeof sequence.getStrictElement === 'function') {\n\t\t\treturn sequence.getStrictElement(index);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffResult {\n\t\treturn this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): IDiffResult {\n\t\tconst quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\tchanges = this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarlyArr[0],\n\t\t\tchanges: changes\n\t\t};\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tconst midOriginalArr = [0];\n\t\tconst midModifiedArr = [0];\n\t\tconst result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tconst midOriginal = midOriginalArr[0];\n\t\tconst midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tconst leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We didn't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: Int32Array, reversePoints: Int32Array,\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]\n\t): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null;\n\t\tlet reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tconst diagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tconst lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tconst diagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tconst maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tconst numDiagonals = maxDifferences + 1;\n\t\tconst forwardPoints = new Int32Array(numDiagonals);\n\t\tconst reversePoints = new Int32Array(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tconst diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tconst diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tconst diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tconst diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tconst delta = diagonalReverseBase - diagonalForwardBase;\n\t\tconst deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tfor (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tconst matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quitting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (\n\t\t\t\tchange.originalStart + change.originalLength < originalStop\n\t\t\t\t&& change.modifiedStart + change.modifiedLength < modifiedStop\n\t\t\t\t&& (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n\t\t\t\t&& (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))\n\t\t\t) {\n\t\t\t\tconst startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n\t\t\t\tconst endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n\t\t\t\tif (endStrictEqual && !startStrictEqual) {\n\t\t\t\t\t// moving the change down would create an equal change, but the elements are not strict equal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tconst mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tconst originalStart = change.originalStart - delta;\n\t\t\t\tconst modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n\t\t\t\tconst score = (\n\t\t\t\t\t(touchingPreviousChange ? 5 : 0)\n\t\t\t\t\t+ this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength)\n\t\t\t\t);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\n\t\t\tconst mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n\t\t\t\tchanges[i - 1] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i, 1);\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// There could be multiple longest common substrings.\n\t\t// Give preference to the ones containing longer lines\n\t\tif (this._hasStrings) {\n\t\t\tfor (let i = 1, len = changes.length; i < len; i++) {\n\t\t\t\tconst aChange = changes[i - 1];\n\t\t\t\tconst bChange = changes[i];\n\t\t\t\tconst matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n\t\t\t\tconst aOriginalStart = aChange.originalStart;\n\t\t\t\tconst bOriginalEnd = bChange.originalStart + bChange.originalLength;\n\t\t\t\tconst abOriginalLength = bOriginalEnd - aOriginalStart;\n\t\t\t\tconst aModifiedStart = aChange.modifiedStart;\n\t\t\t\tconst bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n\t\t\t\tconst abModifiedLength = bModifiedEnd - aModifiedStart;\n\t\t\t\t// Avoid wasting a lot of time with these searches\n\t\t\t\tif (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n\t\t\t\t\tconst t = this._findBetterContiguousSequence(\n\t\t\t\t\t\taOriginalStart, abOriginalLength,\n\t\t\t\t\t\taModifiedStart, abModifiedLength,\n\t\t\t\t\t\tmatchedLength\n\t\t\t\t\t);\n\t\t\t\t\tif (t) {\n\t\t\t\t\t\tconst [originalMatchStart, modifiedMatchStart] = t;\n\t\t\t\t\t\tif (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n\t\t\t\t\t\t\t// switch to another sequence that has a better score\n\t\t\t\t\t\t\taChange.originalLength = originalMatchStart - aChange.originalStart;\n\t\t\t\t\t\t\taChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n\t\t\t\t\t\t\tbChange.originalStart = originalMatchStart + matchedLength;\n\t\t\t\t\t\t\tbChange.modifiedStart = modifiedMatchStart + matchedLength;\n\t\t\t\t\t\t\tbChange.originalLength = bOriginalEnd - bChange.originalStart;\n\t\t\t\t\t\t\tbChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _findBetterContiguousSequence(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number, desiredLength: number): [number, number] | null {\n\t\tif (originalLength < desiredLength || modifiedLength < desiredLength) {\n\t\t\treturn null;\n\t\t}\n\t\tconst originalMax = originalStart + originalLength - desiredLength + 1;\n\t\tconst modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n\t\tlet bestScore = 0;\n\t\tlet bestOriginalStart = 0;\n\t\tlet bestModifiedStart = 0;\n\t\tfor (let i = originalStart; i < originalMax; i++) {\n\t\t\tfor (let j = modifiedStart; j < modifiedMax; j++) {\n\t\t\t\tconst score = this._contiguousSequenceScore(i, j, desiredLength);\n\t\t\t\tif (score > 0 && score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestOriginalStart = i;\n\t\t\t\t\tbestModifiedStart = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bestScore > 0) {\n\t\t\treturn [bestOriginalStart, bestModifiedStart];\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _contiguousSequenceScore(originalStart: number, modifiedStart: number, length: number): number {\n\t\tlet score = 0;\n\t\tfor (let l = 0; l < length; l++) {\n\t\t\tif (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tscore += this._originalStringElements[originalStart + l].length;\n\t\t}\n\t\treturn score;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tconst originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tconst modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tconst originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tconst modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tconst mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tconst originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tconst modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tconst diagonalsBelow = diagonalBaseIndex;\n\t\tconst diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tconst diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tconst lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tconst upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj: unknown): obj is Object {\n\tconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\treturn typeof obj === 'object'\n\t\t&& obj instanceof TypedArray;\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (const key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Given an object with all optional properties, requires at least one to be defined.\n * i.e. AtLeastOne<MyObject>;\n */\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isTypedArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\ntype obj = { [key: string]: any };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport * as paths from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t\t_validateUri(result, true);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { getAllMethodNames } from 'vs/base/common/objects';\nimport { globals, isWeb } from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker extends IDisposable {\n\tgetId(): number;\n\tpostMessage(message: Message, transfer: ArrayBuffer[]): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: Message): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\nconst enum MessageType {\n\tRequest,\n\tReply,\n\tSubscribeEvent,\n\tEvent,\n\tUnsubscribeEvent\n}\nclass RequestMessage {\n\tpublic readonly type = MessageType.Request;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly method: string,\n\t\tpublic readonly args: any[]\n\t) { }\n}\nclass ReplyMessage {\n\tpublic readonly type = MessageType.Reply;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly seq: string,\n\t\tpublic readonly res: any,\n\t\tpublic readonly err: any\n\t) { }\n}\nclass SubscribeEventMessage {\n\tpublic readonly type = MessageType.SubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly eventName: string,\n\t\tpublic readonly arg: any\n\t) { }\n}\nclass EventMessage {\n\tpublic readonly type = MessageType.Event;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly event: any\n\t) { }\n}\nclass UnsubscribeEventMessage {\n\tpublic readonly type = MessageType.UnsubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string\n\t) { }\n}\ntype Message = RequestMessage | ReplyMessage | SubscribeEventMessage | EventMessage | UnsubscribeEventMessage;\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n\thandleEvent(eventName: string, arg: any): Event<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply };\n\tprivate _pendingEmitters: Map<string, Emitter<any>>;\n\tprivate _pendingEvents: Map<string, IDisposable>;\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t\tthis._pendingEmitters = new Map<string, Emitter<any>>();\n\t\tthis._pendingEvents = new Map<string, IDisposable>();\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tconst req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send(new RequestMessage(this._workerId, req, method, args));\n\t\t});\n\t}\n\n\tpublic listen(eventName: string, arg: any): Event<any> {\n\t\tlet req: string | null = null;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\treq = String(++this._lastSentReq);\n\t\t\t\tthis._pendingEmitters.set(req, emitter);\n\t\t\t\tthis._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._pendingEmitters.delete(req!);\n\t\t\t\tthis._send(new UnsubscribeEventMessage(this._workerId, req!));\n\t\t\t\treq = null;\n\t\t\t}\n\t\t});\n\t\treturn emitter.event;\n\t}\n\n\tpublic handleMessage(message: Message): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: Message): void {\n\t\tswitch (msg.type) {\n\t\t\tcase MessageType.Reply:\n\t\t\t\treturn this._handleReplyMessage(msg);\n\t\t\tcase MessageType.Request:\n\t\t\t\treturn this._handleRequestMessage(msg);\n\t\t\tcase MessageType.SubscribeEvent:\n\t\t\t\treturn this._handleSubscribeEventMessage(msg);\n\t\t\tcase MessageType.Event:\n\t\t\t\treturn this._handleEventMessage(msg);\n\t\t\tcase MessageType.UnsubscribeEvent:\n\t\t\t\treturn this._handleUnsubscribeEventMessage(msg);\n\t\t}\n\t}\n\n\tprivate _handleReplyMessage(replyMessage: ReplyMessage): void {\n\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\treturn;\n\t\t}\n\n\t\tconst reply = this._pendingReplies[replyMessage.seq];\n\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\tif (replyMessage.err) {\n\t\t\tlet err = replyMessage.err;\n\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\terr = new Error();\n\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t}\n\t\t\treply.reject(err);\n\t\t\treturn;\n\t\t}\n\n\t\treply.resolve(replyMessage.res);\n\t}\n\n\tprivate _handleRequestMessage(requestMessage: RequestMessage): void {\n\t\tconst req = requestMessage.req;\n\t\tconst result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, r, undefined));\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n\t\t});\n\t}\n\n\tprivate _handleSubscribeEventMessage(msg: SubscribeEventMessage): void {\n\t\tconst req = msg.req;\n\t\tconst disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n\t\t\tthis._send(new EventMessage(this._workerId, req, event));\n\t\t});\n\t\tthis._pendingEvents.set(req, disposable);\n\t}\n\n\tprivate _handleEventMessage(msg: EventMessage): void {\n\t\tif (!this._pendingEmitters.has(msg.req)) {\n\t\t\tconsole.warn('Got event for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEmitters.get(msg.req)!.fire(msg.event);\n\t}\n\n\tprivate _handleUnsubscribeEventMessage(msg: UnsubscribeEventMessage): void {\n\t\tif (!this._pendingEvents.has(msg.req)) {\n\t\t\tconsole.warn('Got unsubscribe for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEvents.get(msg.req)!.dispose();\n\t\tthis._pendingEvents.delete(msg.req);\n\t}\n\n\tprivate _send(msg: Message): void {\n\t\tconst transfer: ArrayBuffer[] = [];\n\t\tif (msg.type === MessageType.Request) {\n\t\t\tfor (let i = 0; i < msg.args.length; i++) {\n\t\t\t\tif (msg.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(msg.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type === MessageType.Reply) {\n\t\t\tif (msg.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(msg.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\nexport interface IWorkerClient<W> {\n\tgetProxyObject(): Promise<W>;\n\tdispose(): void;\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<W extends object, H extends object> extends Disposable implements IWorkerClient<W> {\n\n\tprivate readonly _worker: IWorker;\n\tprivate readonly _onModuleLoaded: Promise<string[]>;\n\tprivate readonly _protocol: SimpleWorkerProtocol;\n\tprivate readonly _lazyProxy: Promise<W>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string, host: H) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: Message) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tlazyProxyReject?.(err);\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\tif (typeof (host as any)[method] !== 'function') {\n\t\t\t\t\treturn Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\treturn Promise.resolve((host as any)[method].apply(host, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleEvent: (eventName: string, arg: any): Event<any> => {\n\t\t\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\t\t\tconst event = (host as any)[eventName].call(host, arg);\n\t\t\t\t\tif (typeof event !== 'function') {\n\t\t\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on main thread host.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tif (propertyIsEvent(eventName)) {\n\t\t\t\t\tconst event = (host as any)[eventName];\n\t\t\t\t\tif (typeof event !== 'function') {\n\t\t\t\t\t\tthrow new Error(`Missing event ${eventName} on main thread host.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof globals.require !== 'undefined' && typeof globals.require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = globals.require.getConfig();\n\t\t} else if (typeof globals.requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = globals.requirejs.s.contexts._.config;\n\t\t}\n\n\t\tconst hostMethods = getAllMethodNames(host);\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\n\t\t\tmoduleId,\n\t\t\thostMethods,\n\t\t]);\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\t\tconst proxyListen = (eventName: string, arg: any): Event<any> => {\n\t\t\treturn this._protocol.listen(eventName, arg);\n\t\t};\n\n\t\tthis._lazyProxy = new Promise<W>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tresolve(createProxyObject<W>(availableMethods, proxyMethodRequest, proxyListen));\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getProxyObject(): Promise<W> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\nfunction propertyIsDynamicEvent(name: string): boolean {\n\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\n\nfunction createProxyObject<T extends object>(\n\tmethodNames: string[],\n\tinvoke: (method: string, args: unknown[]) => unknown,\n\tproxyListen: (eventName: string, arg: any) => Event<any>\n): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\tconst createProxyDynamicEvent = (eventName: string): (arg: any) => Event<any> => {\n\t\treturn function (arg) {\n\t\t\treturn proxyListen(eventName, arg);\n\t\t};\n\t};\n\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\tif (propertyIsDynamicEvent(methodName)) {\n\t\t\t(<any>result)[methodName] = createProxyDynamicEvent(methodName);\n\t\t\tcontinue;\n\t\t}\n\t\tif (propertyIsEvent(methodName)) {\n\t\t\t(<any>result)[methodName] = proxyListen(methodName, undefined);\n\t\t\tcontinue;\n\t\t}\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IRequestHandlerFactory<H> {\n\t(host: H): IRequestHandler;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer<H extends object> {\n\n\tprivate _requestHandlerFactory: IRequestHandlerFactory<H> | null;\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void, requestHandlerFactory: IRequestHandlerFactory<H> | null) {\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\n\t\tthis._requestHandler = null;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args),\n\t\t\thandleEvent: (eventName: string, arg: any): Event<any> => this._handleEvent(eventName, arg)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2], <string[]>args[3]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate _handleEvent(eventName: string, arg: any): Event<any> {\n\t\tif (!this._requestHandler) {\n\t\t\tthrow new Error(`Missing requestHandler`);\n\t\t}\n\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\tconst event = (this._requestHandler as any)[eventName].call(this._requestHandler, arg);\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tif (propertyIsEvent(eventName)) {\n\t\t\tconst event = (this._requestHandler as any)[eventName];\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t}\n\n\tprivate initialize(workerId: number, loaderConfig: any, moduleId: string, hostMethods: string[]): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._protocol.sendMessage(method, args);\n\t\t};\n\t\tconst proxyListen = (eventName: string, arg: any): Event<any> => {\n\t\t\treturn this._protocol.listen(eventName, arg);\n\t\t};\n\n\t\tconst hostProxy = createProxyObject<H>(hostMethods, proxyMethodRequest, proxyListen);\n\n\t\tif (this._requestHandlerFactory) {\n\t\t\t// static request handler\n\t\t\tthis._requestHandler = this._requestHandlerFactory(hostProxy);\n\t\t\treturn Promise.resolve(getAllMethodNames(this._requestHandler));\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n\t\t\t\t// don't use, it has been destroyed during serialize\n\t\t\t\tdelete loaderConfig['trustedTypesPolicy'];\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\tglobals.require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\n\t\t\t// ESM-comment-begin\n\t\t\tconst req = (globals.require || require);\n\t\t\t// ESM-comment-end\n\t\t\t// ESM-uncomment-begin\n\t\t\t// const req = globals.require;\n\t\t\t// ESM-uncomment-end\n\n\t\t\treq([moduleId], (module: { create: IRequestHandlerFactory<H> }) => {\n\t\t\t\tthis._requestHandler = module.create(hostProxy);\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(getAllMethodNames(this._requestHandler));\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void): SimpleWorkerServer<any> {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/base/common/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprotected _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprotected _map: Map<number, number>;\n\n\tprotected _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tconst defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tconst asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tconst value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tconst aLineNumber = a.lineNumber | 0;\n\t\tconst bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tconst aColumn = a.column | 0;\n\t\t\tconst bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return false.\n\t * @internal\n\t */\n\tpublic static strictContainsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tconst otherStartLineNumber = b.startLineNumber;\n\t\tconst otherStartColumn = b.startColumn;\n\t\tconst otherEndLineNumber = b.endLineNumber;\n\t\tconst otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Moves the range by the given amount of lines.\n\t */\n\tpublic delta(lineCount: number): Range {\n\t\treturn new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n\n\tpublic toJSON(): IRange {\n\t\treturn this;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic override toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic override setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Get the position at the start of the selection.\n\t*/\n\tpublic getSelectionStart(): Position {\n\t\treturn new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic override setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static override fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Creates a `Selection` from a range, given a direction.\n\t */\n\tpublic static fromRange(range: Range, direction: SelectionDirection): Selection {\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\t} else {\n\t\t\treturn new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\n\nexport const enum WordCharacterClass {\n\tRegular = 0,\n\tWhitespace = 1,\n\tWordSeparator = 2\n}\n\nexport class WordCharacterClassifier extends CharacterClassifier<WordCharacterClass> {\n\n\tconstructor(wordSeparators: string) {\n\t\tsuper(WordCharacterClass.Regular);\n\n\t\tfor (let i = 0, len = wordSeparators.length; i < len; i++) {\n\t\t\tthis.set(wordSeparators.charCodeAt(i), WordCharacterClass.WordSeparator);\n\t\t}\n\n\t\tthis.set(CharCode.Space, WordCharacterClass.Whitespace);\n\t\tthis.set(CharCode.Tab, WordCharacterClass.Whitespace);\n\t}\n\n}\n\nfunction once<R>(computeFn: (input: string) => R): (input: string) => R {\n\tconst cache: { [key: string]: R } = {}; // TODO@Alex unbounded cache\n\treturn (input: string): R => {\n\t\tif (!cache.hasOwnProperty(input)) {\n\t\t\tcache[input] = computeFn(input);\n\t\t}\n\t\treturn cache[input];\n\t};\n}\n\nexport const getMapForWordSeparators = once<WordCharacterClassifier>(\n\t(input) => new WordCharacterClassifier(input)\n);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterable } from 'vs/base/common/iterator';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\treadonly word: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\n\nexport interface IGetWordAtTextConfig {\n\tmaxLen: number;\n\twindowSize: number;\n\ttimeBudget: number;\n}\n\n\nconst _defaultConfig = new LinkedList<IGetWordAtTextConfig>();\n_defaultConfig.unshift({\n\tmaxLen: 1000,\n\twindowSize: 15,\n\ttimeBudget: 150\n});\n\nexport function setDefaultGetWordAtTextConfig(value: IGetWordAtTextConfig) {\n\tconst rm = _defaultConfig.unshift(value);\n\treturn toDisposable(rm);\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number, config?: IGetWordAtTextConfig): IWordAtPosition | null {\n\n\tif (!config) {\n\t\tconfig = Iterable.first(_defaultConfig)!;\n\t}\n\n\tif (text.length > config.maxLen) {\n\t\t// don't throw strings that long at the regexp\n\t\t// but use a sub-string in which a word must occur\n\t\tlet start = column - config.maxLen / 2;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t} else {\n\t\t\ttextOffset += start;\n\t\t}\n\t\ttext = text.substring(start, column + config.maxLen / 2);\n\t\treturn getWordAtText(column, wordDefinition, text, textOffset, config);\n\t}\n\n\tconst t1 = Date.now();\n\tconst pos = column - 1 - textOffset;\n\n\tlet prevRegexIndex = -1;\n\tlet match: RegExpExecArray | null = null;\n\n\tfor (let i = 1; ; i++) {\n\t\t// check time budget\n\t\tif (Date.now() - t1 >= config.timeBudget) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// reset the index at which the regexp should start matching, also know where it\n\t\t// should stop so that subsequent search don't repeat previous searches\n\t\tconst regexIndex = pos - config.windowSize * i;\n\t\twordDefinition.lastIndex = Math.max(0, regexIndex);\n\t\tconst thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n\n\t\tif (!thisMatch && match) {\n\t\t\t// stop: we have something\n\t\t\tbreak;\n\t\t}\n\n\t\tmatch = thisMatch;\n\n\t\t// stop: searched at start\n\t\tif (regexIndex <= 0) {\n\t\t\tbreak;\n\t\t}\n\t\tprevRegexIndex = regexIndex;\n\t}\n\n\tif (match) {\n\t\tconst result = {\n\t\t\tword: match[0],\n\t\t\tstartColumn: textOffset + 1 + match.index!,\n\t\t\tendColumn: textOffset + 1 + match.index! + match[0].length\n\t\t};\n\t\twordDefinition.lastIndex = 0;\n\t\treturn result;\n\t}\n\n\treturn null;\n}\n\nfunction _findRegexMatchEnclosingPosition(wordDefinition: RegExp, text: string, pos: number, stopPos: number): RegExpExecArray | null {\n\tlet match: RegExpExecArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn match;\n\t\t} else if (stopPos > 0 && matchIndex > stopPos) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a synchronous diff algorithm. Should be executed in a worker.\n*/\nexport interface IDiffAlgorithm {\n\tcompute(sequence1: ISequence, sequence2: ISequence): SequenceDiff[];\n}\n\nexport class SequenceDiff {\n\tconstructor(\n\t\tpublic readonly seq1Range: OffsetRange,\n\t\tpublic readonly seq2Range: OffsetRange\n\t) { }\n}\n\n/**\n * Todo move this class to some top level utils.\n*/\nexport class OffsetRange {\n\tconstructor(public readonly start: number, public readonly endExclusive: number) { }\n\n\tget isEmpty(): boolean {\n\t\treturn this.start === this.endExclusive;\n\t}\n\n\tpublic delta(offset: number): OffsetRange {\n\t\treturn new OffsetRange(this.start + offset, this.endExclusive + offset);\n\t}\n\n\tpublic get length(): number {\n\t\treturn this.endExclusive - this.start;\n\t}\n}\n\nexport interface ISequence {\n\tgetElement(offset: number): number;\n\tget length(): number;\n}\n\nexport class SequenceFromIntArray implements ISequence {\n\tconstructor(private readonly arr: number[]) { }\n\n\tgetElement(offset: number): number {\n\t\treturn this.arr[offset];\n\t}\n\n\tget length(): number {\n\t\treturn this.arr.length;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffAlgorithm, ISequence, SequenceDiff, OffsetRange } from 'vs/editor/common/diff/algorithms/diffAlgorithm';\n\n/**\n * An O(ND) diff algorithm that has a quadratic space worst-case complexity.\n*/\nexport class MyersDiffAlgorithm implements IDiffAlgorithm {\n\tcompute(seq1: ISequence, seq2: ISequence): SequenceDiff[] {\n\t\tfunction getXAfterSnake(x: number, y: number): number {\n\t\t\twhile (x < seq1.length && y < seq2.length && seq1.getElement(x) === seq2.getElement(y)) {\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t}\n\t\t\treturn x;\n\t\t}\n\n\t\tlet d = 0;\n\t\t// V[k]: X value of longest d-line that ends in diagonal k.\n\t\t// d-line: path from (0,0) to (x,y) that uses exactly d non-diagonals.\n\t\t// diagonal k: Set of points (x,y) with x-y = k.\n\t\tconst V = new FastInt32Array();\n\t\tV.set(0, getXAfterSnake(0, 0));\n\n\t\tconst paths = new FastArrayNegativeIndices<SnakePath | null>();\n\t\tpaths.set(0, V.get(0) === 0 ? null : new SnakePath(null, 0, 0, V.get(0)));\n\n\t\tlet k = 0;\n\n\t\tloop: while (true) {\n\t\t\td++;\n\t\t\tfor (k = -d; k <= d; k += 2) {\n\t\t\t\tconst maxXofDLineTop = k === d ? -1 : V.get(k + 1); // We take a vertical non-diagonal\n\t\t\t\tconst maxXofDLineLeft = k === -d ? -1 : V.get(k - 1) + 1; // We take a horizontal non-diagonal (+1 x)\n\t\t\t\tconst x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seq1.length);\n\t\t\t\tconst y = x - k;\n\t\t\t\tconst newMaxX = getXAfterSnake(x, y);\n\t\t\t\tV.set(k, newMaxX);\n\t\t\t\tconst lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n\t\t\t\tpaths.set(k, newMaxX !== x ? new SnakePath(lastPath, x, y, newMaxX - x) : lastPath);\n\n\t\t\t\tif (V.get(k) === seq1.length && V.get(k) - k === seq2.length) {\n\t\t\t\t\tbreak loop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet path = paths.get(k);\n\t\tconst result: SequenceDiff[] = [];\n\t\tlet lastAligningPosS1: number = seq1.length;\n\t\tlet lastAligningPosS2: number = seq2.length;\n\n\t\twhile (true) {\n\t\t\tconst endX = path ? path.x + path.length : 0;\n\t\t\tconst endY = path ? path.y + path.length : 0;\n\n\t\t\tif (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n\t\t\t\tresult.push(new SequenceDiff(\n\t\t\t\t\tnew OffsetRange(endX, lastAligningPosS1),\n\t\t\t\t\tnew OffsetRange(endY, lastAligningPosS2),\n\t\t\t\t));\n\t\t\t}\n\t\t\tif (!path) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastAligningPosS1 = path.x;\n\t\t\tlastAligningPosS2 = path.y;\n\n\t\t\tpath = path.prev;\n\t\t}\n\n\t\tresult.reverse();\n\t\treturn result;\n\t}\n}\n\nclass SnakePath {\n\tconstructor(\n\t\tpublic readonly prev: SnakePath | null,\n\t\tpublic readonly x: number,\n\t\tpublic readonly y: number,\n\t\tpublic readonly length: number\n\t) {\n\t}\n}\n\n/**\n * An array that supports fast negative indices.\n*/\nclass FastInt32Array {\n\tprivate positiveArr: Int32Array = new Int32Array(10);\n\tprivate negativeArr: Int32Array = new Int32Array(10);\n\n\tget(idx: number): number {\n\t\tif (idx < 0) {\n\t\t\tidx = -idx - 1;\n\t\t\treturn this.negativeArr[idx];\n\t\t} else {\n\t\t\treturn this.positiveArr[idx];\n\t\t}\n\t}\n\n\tset(idx: number, value: number): void {\n\t\tif (idx < 0) {\n\t\t\tidx = -idx - 1;\n\t\t\tif (idx >= this.negativeArr.length) {\n\t\t\t\tconst arr = this.negativeArr;\n\t\t\t\tthis.negativeArr = new Int32Array(arr.length * 2);\n\t\t\t\tthis.negativeArr.set(arr);\n\t\t\t}\n\t\t\tthis.negativeArr[idx] = value;\n\t\t} else {\n\t\t\tif (idx >= this.positiveArr.length) {\n\t\t\t\tconst arr = this.positiveArr;\n\t\t\t\tthis.positiveArr = new Int32Array(arr.length * 2);\n\t\t\t\tthis.positiveArr.set(arr);\n\t\t\t}\n\t\t\tthis.positiveArr[idx] = value;\n\t\t}\n\t}\n}\n\n/**\n * An array that supports fast negative indices.\n*/\nclass FastArrayNegativeIndices<T> {\n\tprivate readonly positiveArr: T[] = [];\n\tprivate readonly negativeArr: T[] = [];\n\n\tget(idx: number): T {\n\t\tif (idx < 0) {\n\t\t\tidx = -idx - 1;\n\t\t\treturn this.negativeArr[idx];\n\t\t} else {\n\t\t\treturn this.positiveArr[idx];\n\t\t}\n\t}\n\n\tset(idx: number, value: T): void {\n\t\tif (idx < 0) {\n\t\t\tidx = -idx - 1;\n\t\t\tthis.negativeArr[idx] = value;\n\t\t} else {\n\t\t\tthis.positiveArr[idx] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Array2D<T> {\n\tprivate readonly array: T[] = [];\n\n\tconstructor(public readonly width: number, public readonly height: number) {\n\t\tthis.array = new Array<T>(width * height);\n\t}\n\n\tget(x: number, y: number): T {\n\t\treturn this.array[x + y * this.width];\n\t}\n\n\tset(x: number, y: number, value: T): void {\n\t\tthis.array[x + y * this.width] = value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffAlgorithm, SequenceDiff, OffsetRange, ISequence } from 'vs/editor/common/diff/algorithms/diffAlgorithm';\nimport { Array2D } from 'vs/editor/common/diff/algorithms/utils';\n\n/**\n * A O(MN) diffing algorithm that supports a score function.\n * The algorithm can be improved by processing the 2d array diagonally.\n*/\nexport class DynamicProgrammingDiffing implements IDiffAlgorithm {\n\tcompute(sequence1: ISequence, sequence2: ISequence, equalityScore?: (offset1: number, offset2: number) => number): SequenceDiff[] {\n\t\t/**\n\t\t * lcsLengths.get(i, j): Length of the longest common subsequence of sequence1.substring(0, i + 1) and sequence2.substring(0, j + 1).\n\t\t */\n\t\tconst lcsLengths = new Array2D<number>(sequence1.length, sequence2.length);\n\t\tconst directions = new Array2D<number>(sequence1.length, sequence2.length);\n\t\tconst lengths = new Array2D<number>(sequence1.length, sequence2.length);\n\n\t\t// ==== Initializing lcsLengths ====\n\t\tfor (let s1 = 0; s1 < sequence1.length; s1++) {\n\t\t\tfor (let s2 = 0; s2 < sequence2.length; s2++) {\n\t\t\t\tconst horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n\t\t\t\tconst verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n\n\t\t\t\tlet extendedSeqScore: number;\n\t\t\t\tif (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n\t\t\t\t\tif (s1 === 0 || s2 === 0) {\n\t\t\t\t\t\textendedSeqScore = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\textendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n\t\t\t\t\t}\n\t\t\t\t\textendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n\t\t\t\t} else {\n\t\t\t\t\textendedSeqScore = -1;\n\t\t\t\t}\n\n\t\t\t\tconst newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n\n\t\t\t\tif (newValue === horizontalLen) {\n\t\t\t\t\tlengths.set(s1, s2, 0);\n\t\t\t\t\tdirections.set(s1, s2, 1);\n\t\t\t\t} else if (newValue === verticalLen) {\n\t\t\t\t\tlengths.set(s1, s2, 0);\n\t\t\t\t\tdirections.set(s1, s2, 2);\n\t\t\t\t} else {\n\t\t\t\t\tconst prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n\t\t\t\t\tlengths.set(s1, s2, prevLen + 1);\n\t\t\t\t\tdirections.set(s1, s2, 3);\n\t\t\t\t}\n\n\t\t\t\tlcsLengths.set(s1, s2, newValue);\n\t\t\t}\n\t\t}\n\n\t\t// ==== Backtracking ====\n\t\tconst result: SequenceDiff[] = [];\n\t\tlet lastAligningPosS1: number = sequence1.length;\n\t\tlet lastAligningPosS2: number = sequence2.length;\n\n\t\tfunction reportDecreasingAligningPositions(s1: number, s2: number): void {\n\t\t\tif (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n\t\t\t\tresult.push(new SequenceDiff(\n\t\t\t\t\tnew OffsetRange(s1 + 1, lastAligningPosS1),\n\t\t\t\t\tnew OffsetRange(s2 + 1, lastAligningPosS2),\n\t\t\t\t));\n\t\t\t}\n\t\t\tlastAligningPosS1 = s1;\n\t\t\tlastAligningPosS2 = s2;\n\t\t}\n\n\t\tlet s1 = sequence1.length - 1;\n\t\tlet s2 = sequence2.length - 1;\n\t\twhile (s1 >= 0 && s2 >= 0) {\n\t\t\tif (directions.get(s1, s2) === 3) {\n\t\t\t\treportDecreasingAligningPositions(s1, s2);\n\t\t\t\ts1--;\n\t\t\t\ts2--;\n\t\t\t} else {\n\t\t\t\tif (directions.get(s1, s2) === 1) {\n\t\t\t\t\ts1--;\n\t\t\t\t} else {\n\t\t\t\t\ts2--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treportDecreasingAligningPositions(-1, -1);\n\t\tresult.reverse();\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from 'vs/editor/common/core/range';\n\nexport interface ILinesDiffComputer {\n\tcomputeDiff(originalLines: string[], modifiedLines: string[], options: ILinesDiffComputerOptions): ILinesDiff;\n}\n\nexport interface ILinesDiffComputerOptions {\n\tignoreTrimWhitespace: boolean;\n\tmaxComputationTime: number;\n}\n\nexport interface ILinesDiff {\n\treadonly quitEarly: boolean;\n\treadonly changes: LineRangeMapping[];\n}\n\nexport class LineRangeMapping {\n\tconstructor(\n\t\treadonly originalRange: LineRange,\n\t\treadonly modifiedRange: LineRange,\n\t\t/**\n\t\t * Meaning of `undefined` unclear.\n\t\t*/\n\t\treadonly innerChanges: RangeMapping[] | undefined,\n\t) { }\n\n\ttoString(): string {\n\t\treturn `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n\t}\n}\n\nexport class RangeMapping {\n\tconstructor(\n\t\treadonly originalRange: Range,\n\t\treadonly modifiedRange: Range,\n\t) { }\n\n\ttoString(): string {\n\t\treturn `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n\t}\n}\n\n/**\n * 1-based.\n*/\nexport class LineRange {\n\tconstructor(public readonly startLineNumber: number, public readonly endLineNumberExclusive: number) { }\n\n\tget isEmpty(): boolean {\n\t\treturn this.startLineNumber === this.endLineNumberExclusive;\n\t}\n\n\tpublic delta(offset: number): LineRange {\n\t\treturn new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n\t}\n\n\tpublic get length(): number {\n\t\treturn this.endLineNumberExclusive - this.startLineNumber;\n\t}\n\n\ttoString(): string {\n\t\treturn `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n\t}\n\n\tpublic join(other: LineRange): LineRange {\n\t\treturn new LineRange(\n\t\t\tMath.min(this.startLineNumber, other.startLineNumber),\n\t\t\tMath.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { IDiffChange, ISequence, LcsDiff, IDiffResult } from 'vs/base/common/diff/diff';\nimport { ILinesDiffComputer, ILinesDiff, ILinesDiffComputerOptions, LineRange, RangeMapping, LineRangeMapping } from 'vs/editor/common/diff/linesDiffComputer';\nimport * as strings from 'vs/base/common/strings';\nimport { Range } from 'vs/editor/common/core/range';\nimport { assertFn, checkAdjacentItems } from 'vs/base/common/assert';\n\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nexport class SmartLinesDiffComputer implements ILinesDiffComputer {\n\tcomputeDiff(originalLines: string[], modifiedLines: string[], options: ILinesDiffComputerOptions): ILinesDiff {\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tmaxComputationTime: options.maxComputationTime,\n\t\t\tshouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n\t\t\tshouldComputeCharChanges: true,\n\t\t\tshouldMakePrettyDiff: true,\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t});\n\t\tconst result = diffComputer.computeDiff();\n\t\tconst changes: LineRangeMapping[] = [];\n\t\tlet lastChange: LineRangeMapping | null = null;\n\n\n\t\tfor (const c of result.changes) {\n\t\t\tlet originalRange: LineRange;\n\t\t\tif (c.originalEndLineNumber === 0) {\n\t\t\t\t// Insertion\n\t\t\t\toriginalRange = new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1);\n\t\t\t} else {\n\t\t\t\toriginalRange = new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1);\n\t\t\t}\n\n\t\t\tlet modifiedRange: LineRange;\n\t\t\tif (c.modifiedEndLineNumber === 0) {\n\t\t\t\t// Deletion\n\t\t\t\tmodifiedRange = new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1);\n\t\t\t} else {\n\t\t\t\tmodifiedRange = new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1);\n\t\t\t}\n\n\t\t\tlet change = new LineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => new RangeMapping(\n\t\t\t\tnew Range(c.originalStartLineNumber, c.originalStartColumn, c.originalEndLineNumber, c.originalEndColumn),\n\t\t\t\tnew Range(c.modifiedStartLineNumber, c.modifiedStartColumn, c.modifiedEndLineNumber, c.modifiedEndColumn),\n\t\t\t)));\n\t\t\tif (lastChange) {\n\t\t\t\tif (lastChange.modifiedRange.endLineNumberExclusive === change.modifiedRange.startLineNumber\n\t\t\t\t\t|| lastChange.originalRange.endLineNumberExclusive === change.originalRange.startLineNumber) {\n\t\t\t\t\t// join touching diffs. Probably moving diffs up/down in the algorithm causes touching diffs.\n\t\t\t\t\tchange = new LineRangeMapping(\n\t\t\t\t\t\tlastChange.originalRange.join(change.originalRange),\n\t\t\t\t\t\tlastChange.modifiedRange.join(change.modifiedRange),\n\t\t\t\t\t\tlastChange.innerChanges && change.innerChanges ?\n\t\t\t\t\t\t\tlastChange.innerChanges.concat(change.innerChanges) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tchanges.pop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchanges.push(change);\n\t\t\tlastChange = change;\n\t\t}\n\n\t\tassertFn(() => {\n\t\t\treturn checkAdjacentItems(changes,\n\t\t\t\t(m1, m2) => m2.originalRange.startLineNumber - m1.originalRange.endLineNumberExclusive === m2.modifiedRange.startLineNumber - m1.modifiedRange.endLineNumberExclusive &&\n\t\t\t\t\t// There has to be an unchanged line in between (otherwise both diffs should have been joined)\n\t\t\t\t\tm1.originalRange.endLineNumberExclusive < m2.originalRange.startLineNumber &&\n\t\t\t\t\tm1.modifiedRange.endLineNumberExclusive < m2.modifiedRange.startLineNumber,\n\t\t\t);\n\t\t});\n\n\t\treturn {\n\t\t\tquitEarly: result.quitEarly,\n\t\t\tchanges,\n\t\t};\n\t}\n}\n\nexport interface IDiffComputationResult {\n\tquitEarly: boolean;\n\tidentical: boolean;\n\tchanges: ILineChange[];\n}\n\n/**\n * A change\n */\nexport interface IChange {\n\treadonly originalStartLineNumber: number;\n\treadonly originalEndLineNumber: number;\n\treadonly modifiedStartLineNumber: number;\n\treadonly modifiedEndLineNumber: number;\n}\n\n/**\n * A character level change.\n */\nexport interface ICharChange extends IChange {\n\treadonly originalStartColumn: number;\n\treadonly originalEndColumn: number;\n\treadonly modifiedStartColumn: number;\n\treadonly modifiedEndColumn: number;\n}\n\n/**\n * A line change\n */\nexport interface ILineChange extends IChange {\n\treadonly charChanges: ICharChange[] | undefined;\n}\n\nexport interface IDiffComputerResult {\n\tquitEarly: boolean;\n\tchanges: ILineChange[];\n}\n\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffResult {\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineSequence implements ISequence {\n\n\tpublic readonly lines: string[];\n\tprivate readonly _startColumns: number[];\n\tprivate readonly _endColumns: number[];\n\n\tconstructor(lines: string[]) {\n\t\tconst startColumns: number[] = [];\n\t\tconst endColumns: number[] = [];\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\n\t\t\tstartColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n\t\t\tendColumns[i] = getLastNonBlankColumn(lines[i], 1);\n\t\t}\n\t\tthis.lines = lines;\n\t\tthis._startColumns = startColumns;\n\t\tthis._endColumns = endColumns;\n\t}\n\n\tpublic getElements(): Int32Array | number[] | string[] {\n\t\tconst elements: string[] = [];\n\t\tfor (let i = 0, len = this.lines.length; i < len; i++) {\n\t\t\telements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n\t\t}\n\t\treturn elements;\n\t}\n\n\tpublic getStrictElement(index: number): string {\n\t\treturn this.lines[index];\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic createCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\n\t\tconst charCodes: number[] = [];\n\t\tconst lineNumbers: number[] = [];\n\t\tconst columns: number[] = [];\n\t\tlet len = 0;\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\n\t\t\tconst lineContent = this.lines[index];\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = col;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t\tif (!shouldIgnoreTrimWhitespace && index < endIndex) {\n\t\t\t\t// Add \\n if trim whitespace is not ignored\n\t\t\t\tcharCodes[len] = CharCode.LineFeed;\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = lineContent.length + 1;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t}\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\n\t}\n}\n\nclass CharSequence implements ISequence {\n\n\tprivate readonly _charCodes: number[];\n\tprivate readonly _lineNumbers: number[];\n\tprivate readonly _columns: number[];\n\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\n\t\tthis._charCodes = charCodes;\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._columns = columns;\n\t}\n\n\tpublic toString() {\n\t\treturn (\n\t\t\t'[' + this._charCodes.map((s, idx) => (s === CharCode.LineFeed ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`).join(', ') + ']'\n\t\t);\n\t}\n\n\tprivate _assertIndex(index: number, arr: number[]): void {\n\t\tif (index < 0 || index >= arr.length) {\n\t\t\tthrow new Error(`Illegal index`);\n\t\t}\n\t}\n\n\tpublic getElements(): Int32Array | number[] | string[] {\n\t\treturn this._charCodes;\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\tif (i > 0 && i === this._lineNumbers.length) {\n\t\t\t// the start line number of the element after the last element\n\t\t\t// is the end line number of the last element\n\t\t\treturn this.getEndLineNumber(i - 1);\n\t\t}\n\t\tthis._assertIndex(i, this._lineNumbers);\n\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\tif (i === -1) {\n\t\t\t// the end line number of the element before the first element\n\t\t\t// is the start line number of the first element\n\t\t\treturn this.getStartLineNumber(i + 1);\n\t\t}\n\t\tthis._assertIndex(i, this._lineNumbers);\n\n\t\tif (this._charCodes[i] === CharCode.LineFeed) {\n\t\t\treturn this._lineNumbers[i] + 1;\n\t\t}\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\tif (i > 0 && i === this._columns.length) {\n\t\t\t// the start column of the element after the last element\n\t\t\t// is the end column of the last element\n\t\t\treturn this.getEndColumn(i - 1);\n\t\t}\n\t\tthis._assertIndex(i, this._columns);\n\t\treturn this._columns[i];\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\tif (i === -1) {\n\t\t\t// the end column of the element before the first element\n\t\t\t// is the start column of the first element\n\t\t\treturn this.getStartColumn(i + 1);\n\t\t}\n\t\tthis._assertIndex(i, this._columns);\n\n\t\tif (this._charCodes[i] === CharCode.LineFeed) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn this._columns[i] + 1;\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber: number;\n\tpublic originalStartColumn: number;\n\tpublic originalEndLineNumber: number;\n\tpublic originalEndColumn: number;\n\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedStartColumn: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic modifiedEndColumn: number;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalStartColumn: number,\n\t\toriginalEndLineNumber: number,\n\t\toriginalEndColumn: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedStartColumn: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tmodifiedEndColumn: number\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalStartColumn = originalStartColumn;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.originalEndColumn = originalEndColumn;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\n\t}\n\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\n\t\tconst originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\tconst originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\tconst originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\tconst originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\n\t\tconst modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\tconst modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\tconst modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\tconst modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\treturn new CharChange(\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\n\t\t);\n\t}\n}\n\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\n\tconst result = [rawChanges[0]];\n\tlet prevChange = result[0];\n\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\n\t\tconst currChange = rawChanges[i];\n\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber: number;\n\tpublic originalEndLineNumber: number;\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic charChanges: CharChange[] | undefined;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalEndLineNumber: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tcharChanges: CharChange[] | undefined\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.charChanges = charChanges;\n\t}\n\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineSequence, modifiedLineSequence: LineSequence, continueCharDiff: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n\t\t\t// Compute character changes for diff chunks of at most 20 lines...\n\t\t\tconst originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tif (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n\t\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n\n\t\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t\t}\n\n\t\t\t\tcharChanges = [];\n\t\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n\t}\n}\n\nexport interface IDiffComputerOpts {\n\tshouldComputeCharChanges: boolean;\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldMakePrettyDiff: boolean;\n\tmaxComputationTime: number;\n}\n\nexport class DiffComputer {\n\n\tprivate readonly shouldComputeCharChanges: boolean;\n\tprivate readonly shouldPostProcessCharChanges: boolean;\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\n\tprivate readonly shouldMakePrettyDiff: boolean;\n\tprivate readonly originalLines: string[];\n\tprivate readonly modifiedLines: string[];\n\tprivate readonly original: LineSequence;\n\tprivate readonly modified: LineSequence;\n\tprivate readonly continueLineDiff: () => boolean;\n\tprivate readonly continueCharDiff: () => boolean;\n\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n\t\tthis.originalLines = originalLines;\n\t\tthis.modifiedLines = modifiedLines;\n\t\tthis.original = new LineSequence(originalLines);\n\t\tthis.modified = new LineSequence(modifiedLines);\n\n\t\tthis.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n\t\tthis.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n\t}\n\n\tpublic computeDiff(): IDiffComputerResult {\n\n\t\tif (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n\t\t\t// empty original => fast path\n\t\t\tif (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n\t\t\t\treturn {\n\t\t\t\t\tquitEarly: false,\n\t\t\t\t\tchanges: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tquitEarly: false,\n\t\t\t\tchanges: [{\n\t\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\t\toriginalEndLineNumber: 1,\n\t\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\t\tmodifiedEndLineNumber: this.modified.lines.length,\n\t\t\t\t\tcharChanges: undefined\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\n\t\tif (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n\t\t\t// empty modified => fast path\n\t\t\treturn {\n\t\t\t\tquitEarly: false,\n\t\t\t\tchanges: [{\n\t\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\t\toriginalEndLineNumber: this.original.lines.length,\n\t\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\t\tmodifiedEndLineNumber: 1,\n\t\t\t\t\tcharChanges: undefined\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\n\t\tconst diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n\t\tconst rawChanges = diffResult.changes;\n\t\tconst quitEarly = diffResult.quitEarly;\n\n\t\t// The diff is always computed with ignoring trim whitespace\n\t\t// This ensures we get the prettiest diff\n\n\t\tif (this.shouldIgnoreTrimWhitespace) {\n\t\t\tconst lineChanges: LineChange[] = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tquitEarly: quitEarly,\n\t\t\t\tchanges: lineChanges\n\t\t\t};\n\t\t}\n\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\n\t\tconst result: LineChange[] = [];\n\n\t\tlet originalLineIndex = 0;\n\t\tlet modifiedLineIndex = 0;\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n\t\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\t\t// These lines differ only in trim whitespace\n\n\t\t\t\t\t// Check the leading whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalStartColumn--;\n\t\t\t\t\t\t\tmodifiedStartColumn--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the trailing whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalEndColumn++;\n\t\t\t\t\t\t\tmodifiedEndColumn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalLineIndex++;\n\t\t\t\tmodifiedLineIndex++;\n\t\t\t}\n\n\t\t\tif (nextChange) {\n\t\t\t\t// Emit the actual change\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarly,\n\t\t\tchanges: result\n\t\t};\n\t}\n\n\tprivate _pushTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): void {\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n\t\t\t// Merged into previous\n\t\t\treturn;\n\t\t}\n\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\t\tif (this.shouldComputeCharChanges) {\n\t\t\tcharChanges = [new CharChange(\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t)];\n\t\t}\n\t\tresult.push(new LineChange(\n\t\t\toriginalLineNumber, originalLineNumber,\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\n\t\t\tcharChanges\n\t\t));\n\t}\n\n\tprivate _mergeTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): boolean {\n\t\tconst len = result.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevChange = result[len - 1];\n\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n\t\t\t// Don't merge with inserts/deletes\n\t\t\treturn false;\n\t\t}\n\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\n\t\t\tif (this.shouldComputeCharChanges && prevChange.charChanges) {\n\t\t\t\tprevChange.charChanges.push(new CharChange(\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nfunction getFirstNonBlankColumn(txt: string, defaultValue: number): number {\n\tconst r = strings.firstNonWhitespaceIndex(txt);\n\tif (r === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn r + 1;\n}\n\nfunction getLastNonBlankColumn(txt: string, defaultValue: number): number {\n\tconst r = strings.lastNonWhitespaceIndex(txt);\n\tif (r === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn r + 2;\n}\n\nfunction createContinueProcessingPredicate(maximumRuntime: number): () => boolean {\n\tif (maximumRuntime === 0) {\n\t\treturn () => true;\n\t}\n\n\tconst startTime = Date.now();\n\treturn () => {\n\t\treturn Date.now() - startTime < maximumRuntime;\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertFn, checkAdjacentItems } from 'vs/base/common/assert';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { SequenceFromIntArray, OffsetRange, SequenceDiff, ISequence } from 'vs/editor/common/diff/algorithms/diffAlgorithm';\nimport { DynamicProgrammingDiffing } from 'vs/editor/common/diff/algorithms/dynamicProgrammingDiffing';\nimport { MyersDiffAlgorithm } from 'vs/editor/common/diff/algorithms/myersDiffAlgorithm';\nimport { ILinesDiff, ILinesDiffComputer, ILinesDiffComputerOptions, LineRange, LineRangeMapping, RangeMapping } from 'vs/editor/common/diff/linesDiffComputer';\n\nexport class StandardLinesDiffComputer implements ILinesDiffComputer {\n\tprivate readonly dynamicProgrammingDiffing = new DynamicProgrammingDiffing();\n\tprivate readonly myersDiffingAlgorithm = new MyersDiffAlgorithm();\n\n\tconstructor(\n\t) { }\n\n\tcomputeDiff(originalLines: string[], modifiedLines: string[], options: ILinesDiffComputerOptions): ILinesDiff {\n\t\tconst perfectHashes = new Map<string, number>();\n\t\tfunction getOrCreateHash(text: string): number {\n\t\t\tlet hash = perfectHashes.get(text);\n\t\t\tif (hash === undefined) {\n\t\t\t\thash = perfectHashes.size;\n\t\t\t\tperfectHashes.set(text, hash);\n\t\t\t}\n\t\t\treturn hash;\n\t\t}\n\n\t\tconst srcDocLines = originalLines.map((l) => getOrCreateHash(l.trim()));\n\t\tconst tgtDocLines = modifiedLines.map((l) => getOrCreateHash(l.trim()));\n\n\t\tconst sequence1 = new SequenceFromIntArray(srcDocLines);\n\t\tconst sequence2 = new SequenceFromIntArray(tgtDocLines);\n\n\t\tconst lineAlignments = (() => {\n\t\t\tif (sequence1.length + sequence2.length < 1500) {\n\t\t\t\t// Use the improved algorithm for small files\n\t\t\t\treturn this.dynamicProgrammingDiffing.compute(\n\t\t\t\t\tsequence1,\n\t\t\t\t\tsequence2,\n\t\t\t\t\t(offset1, offset2) =>\n\t\t\t\t\t\toriginalLines[offset1] === modifiedLines[offset2]\n\t\t\t\t\t\t\t? modifiedLines[offset2].length === 0\n\t\t\t\t\t\t\t\t? 0.1\n\t\t\t\t\t\t\t\t: 1 + Math.log(1 + modifiedLines[offset2].length)\n\t\t\t\t\t\t\t: 0.99\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.myersDiffingAlgorithm.compute(\n\t\t\t\tsequence1,\n\t\t\t\tsequence2\n\t\t\t);\n\t\t})();\n\n\t\tconst alignments: RangeMapping[] = [];\n\t\tfor (const diff of lineAlignments) {\n\t\t\tconst characterDiffs = this.refineDiff(originalLines, modifiedLines, diff);\n\t\t\tfor (const a of characterDiffs) {\n\t\t\t\talignments.push(a);\n\t\t\t}\n\t\t}\n\n\t\tconst changes: LineRangeMapping[] = lineRangeMappingFromRangeMappings(alignments);\n\n\t\treturn {\n\t\t\tquitEarly: false,\n\t\t\tchanges: changes,\n\t\t};\n\t}\n\n\tprivate refineDiff(originalLines: string[], modifiedLines: string[], diff: SequenceDiff): RangeMapping[] {\n\t\tconst sourceSlice = new Slice(originalLines, diff.seq1Range);\n\t\tconst targetSlice = new Slice(modifiedLines, diff.seq2Range);\n\n\t\tconst diffs = this.myersDiffingAlgorithm.compute(sourceSlice, targetSlice);\n\t\tconst result = diffs.map(\n\t\t\t(d) =>\n\t\t\t\tnew RangeMapping(\n\t\t\t\t\tsourceSlice.translateRange(d.seq1Range).delta(diff.seq1Range.start),\n\t\t\t\t\ttargetSlice.translateRange(d.seq2Range).delta(diff.seq2Range.start)\n\t\t\t\t)\n\t\t);\n\t\treturn result;\n\t}\n}\n\nexport function lineRangeMappingFromRangeMappings(alignments: RangeMapping[]): LineRangeMapping[] {\n\tconst changes: LineRangeMapping[] = [];\n\tfor (const g of group(\n\t\talignments,\n\t\t(a1, a2) =>\n\t\t\t(a2.originalRange.startLineNumber - (a1.originalRange.endLineNumber - (a1.originalRange.endColumn > 1 ? 0 : 1)) <= 1)\n\t\t\t|| (a2.modifiedRange.startLineNumber - (a1.modifiedRange.endLineNumber - (a1.modifiedRange.endColumn > 1 ? 0 : 1)) <= 1)\n\t)) {\n\t\tconst first = g[0];\n\t\tconst last = g[g.length - 1];\n\n\t\tchanges.push(new LineRangeMapping(\n\t\t\tnew LineRange(\n\t\t\t\tfirst.originalRange.startLineNumber,\n\t\t\t\tlast.originalRange.endLineNumber + (last.originalRange.endColumn > 1 || last.modifiedRange.endColumn > 1 ? 1 : 0)\n\t\t\t),\n\t\t\tnew LineRange(\n\t\t\t\tfirst.modifiedRange.startLineNumber,\n\t\t\t\tlast.modifiedRange.endLineNumber + (last.originalRange.endColumn > 1 || last.modifiedRange.endColumn > 1 ? 1 : 0)\n\t\t\t),\n\t\t\tg\n\t\t));\n\t}\n\n\tassertFn(() => {\n\t\treturn checkAdjacentItems(changes,\n\t\t\t(m1, m2) => m2.originalRange.startLineNumber - m1.originalRange.endLineNumberExclusive === m2.modifiedRange.startLineNumber - m1.modifiedRange.endLineNumberExclusive &&\n\t\t\t\t// There has to be an unchanged line in between (otherwise both diffs should have been joined)\n\t\t\t\tm1.originalRange.endLineNumberExclusive < m2.originalRange.startLineNumber &&\n\t\t\t\tm1.modifiedRange.endLineNumberExclusive < m2.modifiedRange.startLineNumber,\n\t\t);\n\t});\n\n\n\treturn changes;\n}\n\nfunction* group<T>(items: Iterable<T>, shouldBeGrouped: (item1: T, item2: T) => boolean): Iterable<T[]> {\n\tlet currentGroup: T[] | undefined;\n\tlet last: T | undefined;\n\tfor (const item of items) {\n\t\tif (last !== undefined && shouldBeGrouped(last, item)) {\n\t\t\tcurrentGroup!.push(item);\n\t\t} else {\n\t\t\tif (currentGroup) {\n\t\t\t\tyield currentGroup;\n\t\t\t}\n\t\t\tcurrentGroup = [item];\n\t\t}\n\t\tlast = item;\n\t}\n\tif (currentGroup) {\n\t\tyield currentGroup;\n\t}\n}\n\nclass Slice implements ISequence {\n\tprivate readonly elements: Int32Array;\n\tprivate readonly firstCharOnLineOffsets: Int32Array;\n\n\tconstructor(public readonly lines: string[], public readonly lineRange: OffsetRange) {\n\t\tlet chars = 0;\n\t\tthis.firstCharOnLineOffsets = new Int32Array(lineRange.length);\n\n\t\tfor (let i = lineRange.start; i < lineRange.endExclusive; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tchars += line.length;\n\t\t\tthis.firstCharOnLineOffsets[i - lineRange.start] = chars + 1;\n\t\t\tchars++;\n\t\t}\n\n\t\tthis.elements = new Int32Array(chars);\n\t\tlet offset = 0;\n\t\tfor (let i = lineRange.start; i < lineRange.endExclusive; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\tthis.elements[offset + i] = line.charCodeAt(i);\n\t\t\t}\n\t\t\toffset += line.length;\n\t\t\tif (i < lines.length - 1) {\n\t\t\t\tthis.elements[offset] = '\\n'.charCodeAt(0);\n\t\t\t\toffset += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetElement(offset: number): number {\n\t\treturn this.elements[offset];\n\t}\n\n\tget length(): number {\n\t\treturn this.elements.length;\n\t}\n\n\tpublic translateOffset(offset: number): Position {\n\t\t// find smallest i, so that lineBreakOffsets[i] > offset using binary search\n\n\t\tlet i = 0;\n\t\tlet j = this.firstCharOnLineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst k = Math.floor((i + j) / 2);\n\t\t\tif (this.firstCharOnLineOffsets[k] > offset) {\n\t\t\t\tj = k;\n\t\t\t} else {\n\t\t\t\ti = k + 1;\n\t\t\t}\n\t\t}\n\n\t\tconst offsetOfPrevLineBreak = i === 0 ? 0 : this.firstCharOnLineOffsets[i - 1];\n\t\treturn new Position(i + 1, offset - offsetOfPrevLineBreak + 1);\n\t}\n\n\tpublic translateRange(range: OffsetRange): Range {\n\t\treturn Range.fromPositions(this.translateOffset(range.start), this.translateOffset(range.endExclusive));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SmartLinesDiffComputer } from 'vs/editor/common/diff/smartLinesDiffComputer';\nimport { StandardLinesDiffComputer } from 'vs/editor/common/diff/standardLinesDiffComputer';\n\nexport const linesDiffComputers = {\n\tsmart: new SmartLinesDiffComputer(),\n\texperimental: new StandardLinesDiffComputer(),\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { ILink } from 'vs/editor/common/languages';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tconst data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tconst [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tconst states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tconst [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\t// allow-any-unicode-next-line\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;:';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tconst result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet inSquareBrackets = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\tinSquareBrackets = true;\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tinSquareBrackets = false;\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link didn't begin with them */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote ? CharacterClass.ForceTermination : CharacterClass.None);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote ? CharacterClass.ForceTermination : CharacterClass.None);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.BackTick ? CharacterClass.ForceTermination : CharacterClass.None);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Asterisk:\n\t\t\t\t\t\t\t// `*` terminates a link if the link began with `*`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\t\t\t// `|` terminates a link if the link began with `|`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Space:\n\t\t\t\t\t\t\t// ` ` allow space in between [ and ]\n\t\t\t\t\t\t\tchClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/languages';\n\nexport class BasicInplaceReplace {\n\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\n\n\t\tif (range1 && text1) {\n\t\t\tconst result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tconst result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tconst numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tconst precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n\t\tlet n1 = Number(value);\n\t\tconst n2 = parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate readonly _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { equals } from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TextChange } from 'vs/editor/common/core/textChange';\nimport { WordCharacterClassifier } from 'vs/editor/common/core/wordCharacterClassifier';\nimport { IWordAtPosition } from 'vs/editor/common/core/wordHelper';\nimport { FormattingOptions } from 'vs/editor/common/languages';\nimport { IBracketPairsTextModelPart } from 'vs/editor/common/textModelBracketPairs';\nimport { IModelContentChange, IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelLanguageChangedEvent, IModelLanguageConfigurationChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent, InternalModelContentChangeEvent, ModelInjectedTextChangedEvent } from 'vs/editor/common/textModelEvents';\nimport { IGuidesTextModelPart } from 'vs/editor/common/textModelGuides';\nimport { ITokenizationTextModelPart } from 'vs/editor/common/tokenizationTextModelPart';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\nexport interface IDecorationOptions {\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tcolor: string | ThemeColor | undefined;\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tdarkColor?: string | ThemeColor;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationMinimapOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: MinimapPosition;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * A debug description that can be used for inspecting model decorations.\n\t * @internal\n\t */\n\tdescription: string;\n\t/**\n\t * Customize the growing behavior of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?: TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?: string | null;\n\tblockClassName?: string | null;\n\t/**\n\t * Indicates if this block should be rendered after the last line.\n\t * In this case, the range must be empty and set to the last line.\n\t */\n\tblockIsAfterEnd?: boolean | null;\n\t/**\n\t * Message to be rendered when hovering over the glyph margin decoration.\n\t */\n\tglyphMarginHoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Array of MarkdownString to render as the decoration message.\n\t */\n\thoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?: boolean;\n\t/**\n\t * Always render the decoration (even when the range it encompasses is collapsed).\n\t */\n\tshowIfCollapsed?: boolean;\n\t/**\n\t * Collapse the decoration if its entire range is being replaced via an edit.\n\t * @internal\n\t */\n\tcollapseOnReplaceEdit?: boolean;\n\t/**\n\t * Specifies the stack order of a decoration.\n\t * A decoration with greater stack order is always in front of a decoration with\n\t * a lower stack order when the decorations are on the same line.\n\t */\n\tzIndex?: number;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?: IModelDecorationOverviewRulerOptions | null;\n\t/**\n\t * If set, render this decoration in the minimap.\n\t */\n\tminimap?: IModelDecorationMinimapOptions | null;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name, but only for the first line in case of line wrapping.\n\t */\n\tfirstLineDecorationClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name.\n\t */\n\tmarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?: string | null;\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\tinlineClassNameAffectsLetterSpacing?: boolean;\n\t/**\n\t * If set, the decoration will be rendered before the text with this CSS class name.\n\t */\n\tbeforeContentClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered after the text with this CSS class name.\n\t */\n\tafterContentClassName?: string | null;\n\t/**\n\t * If set, text will be injected in the view after the range.\n\t */\n\tafter?: InjectedTextOptions | null;\n\n\t/**\n\t * If set, text will be injected in the view before the range.\n\t */\n\tbefore?: InjectedTextOptions | null;\n\n\t/**\n\t * If set, this decoration will not be rendered for comment tokens.\n\t * @internal\n\t*/\n\thideInCommentTokens?: boolean | null;\n\n\t/**\n\t * If set, this decoration will not be rendered for string tokens.\n\t * @internal\n\t*/\n\thideInStringTokens?: boolean | null;\n}\n\n/**\n * Configures text that is injected into the view without changing the underlying document.\n*/\nexport interface InjectedTextOptions {\n\t/**\n\t * Sets the text to inject. Must be a single line.\n\t */\n\treadonly content: string;\n\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t */\n\treadonly inlineClassName?: string | null;\n\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\treadonly inlineClassNameAffectsLetterSpacing?: boolean;\n\n\t/**\n\t * This field allows to attach data to this injected text.\n\t * The data can be read when injected texts at a given position are queried.\n\t */\n\treadonly attachedData?: unknown;\n\n\t/**\n\t * Configures cursor stops around injected text.\n\t * Defaults to {@link InjectedTextCursorStops.Both}.\n\t*/\n\treadonly cursorStops?: InjectedTextCursorStops | null;\n}\n\nexport enum InjectedTextCursorStops {\n\tBoth,\n\tRight,\n\tLeft,\n\tNone\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\treadonly id: string;\n\t/**\n\t * Identifier for a decoration's owner.\n\t */\n\treadonly ownerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\treadonly range: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\treadonly options: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range: IRange, options: IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id: string, newRange: IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions: IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id: string): void;\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport const enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * An identifier for a single edit operation.\n * @internal\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor: number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor: number;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation extends ISingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier?: ISingleEditOperationIdentifier | null;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t * @internal\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n\t/**\n\t * This indicates that this operation is in a set of operations that are tracked and should not be \"simplified\".\n\t * @internal\n\t */\n\t_isTracked?: boolean;\n}\n\nexport interface IValidEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be empty to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * @internal\n\t */\n\ttextChange: TextChange;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations: IValidEditOperation[]): Selection[] | null;\n}\n\nexport class TextModelResolvedOptions {\n\t_textModelResolvedOptionsBrand: void = undefined;\n\n\treadonly tabSize: number;\n\treadonly indentSize: number;\n\treadonly insertSpaces: boolean;\n\treadonly defaultEOL: DefaultEndOfLine;\n\treadonly trimAutoWhitespace: boolean;\n\treadonly bracketPairColorizationOptions: BracketPairColorizationOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(src: {\n\t\ttabSize: number;\n\t\tindentSize: number;\n\t\tinsertSpaces: boolean;\n\t\tdefaultEOL: DefaultEndOfLine;\n\t\ttrimAutoWhitespace: boolean;\n\t\tbracketPairColorizationOptions: BracketPairColorizationOptions;\n\t}) {\n\t\tthis.tabSize = Math.max(1, src.tabSize | 0);\n\t\tthis.indentSize = src.tabSize | 0;\n\t\tthis.insertSpaces = Boolean(src.insertSpaces);\n\t\tthis.defaultEOL = src.defaultEOL | 0;\n\t\tthis.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n\t\tthis.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: TextModelResolvedOptions): boolean {\n\t\treturn (\n\t\t\tthis.tabSize === other.tabSize\n\t\t\t&& this.indentSize === other.indentSize\n\t\t\t&& this.insertSpaces === other.insertSpaces\n\t\t\t&& this.defaultEOL === other.defaultEOL\n\t\t\t&& this.trimAutoWhitespace === other.trimAutoWhitespace\n\t\t\t&& equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: TextModelResolvedOptions): IModelOptionsChangedEvent {\n\t\treturn {\n\t\t\ttabSize: this.tabSize !== newOpts.tabSize,\n\t\t\tindentSize: this.indentSize !== newOpts.indentSize,\n\t\t\tinsertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n\t\t\ttrimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\tisForSimpleWidget: boolean;\n\tlargeFileOptimizations: boolean;\n\tbracketPairColorizationOptions: BracketPairColorizationOptions;\n}\n\nexport interface BracketPairColorizationOptions {\n\tenabled: boolean;\n\tindependentColorPoolPerBracketType: boolean;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tindentSize?: number;\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n\tbracketColorizationOptions?: BracketPairColorizationOptions;\n}\n\nexport class FindMatch {\n\t_findMatchBrand: void = undefined;\n\n\tpublic readonly range: Range;\n\tpublic readonly matches: string[] | null;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(range: Range, matches: string[] | null) {\n\t\tthis.range = range;\n\t\tthis.matches = matches;\n\t}\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport const enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\n/**\n * @internal\n */\nexport function isITextSnapshot(obj: any): obj is ITextSnapshot {\n\treturn (obj && typeof obj.read === 'function');\n}\n\n/**\n * A model.\n */\nexport interface ITextModel {\n\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * This model is constructed for a simple widget code editor.\n\t * @internal\n\t */\n\treadonly isForSimpleWidget: boolean;\n\n\t/**\n\t * If true, the text model might contain RTL.\n\t * If false, the text model **contains only** contain LTR.\n\t * @internal\n\t */\n\tmightContainRTL(): boolean;\n\n\t/**\n\t * If true, the text model might contain LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\n\t * If false, the text model definitely does not contain these.\n\t * @internal\n\t */\n\tmightContainUnusualLineTerminators(): boolean;\n\n\t/**\n\t * @internal\n\t */\n\tremoveUnusualLineTerminators(selections?: Selection[]): void;\n\n\t/**\n\t * If true, the text model might contain non basic ASCII.\n\t * If false, the text model **contains only** basic ASCII.\n\t * @internal\n\t */\n\tmightContainNonBasicASCII(): boolean;\n\n\t/**\n\t * Get the resolved options for this model.\n\t */\n\tgetOptions(): TextModelResolvedOptions;\n\n\t/**\n\t * Get the formatting options for this model.\n\t * @internal\n\t */\n\tgetFormattingOptions(): FormattingOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue: string | ITextSnapshot): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?: EndOfLinePreference, preserveBOM?: boolean): string;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text snapshot (it is safe to consume it asynchronously).\n\t */\n\tcreateSnapshot(preserveBOM?: boolean): ITextSnapshot;\n\n\t/**\n\t * Get the length of the text stored in this model.\n\t */\n\tgetValueLength(eol?: EndOfLinePreference, preserveBOM?: boolean): number;\n\n\t/**\n\t * Check if the raw text stored in this model equals another raw text.\n\t * @internal\n\t */\n\tequalsTextBuffer(other: ITextBuffer): boolean;\n\n\t/**\n\t * Get the underling text buffer.\n\t * @internal\n\t */\n\tgetTextBuffer(): ITextBuffer;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range: IRange, eol?: EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range: IRange): number;\n\n\t/**\n\t * Get the character count of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t */\n\tgetCharacterCountInRange(range: IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber: number): string;\n\n\t/**\n\t * Get the text length for a certain line.\n\t */\n\tgetLineLength(lineNumber: number): number;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t */\n\tgetEndOfLineSequence(): EndOfLineSequence;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber: number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Create a valid position.\n\t */\n\tvalidatePosition(position: IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offset (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the offset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range: IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model.\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns if the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * This model is so large that it would not be a good idea to sync it over\n\t * to web workers or other places.\n\t * @internal\n\t */\n\tisTooLargeForSyncing(): boolean;\n\n\t/**\n\t * The file is so large, that even tokenization is disabled.\n\t * @internal\n\t */\n\tisTooLargeForTokenization(): boolean;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString: string, searchOnlyEditableRange: boolean, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside these ranges.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString: string, searchScope: IRange | IRange[], isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\n\n\t/**\n\t * Get the language associated with this model.\n\t */\n\tgetLanguageId(): string;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t * @param languageId The new language.\n\t * @param source The source of the call that set the language.\n\t * @internal\n\t */\n\tsetMode(languageId: string, source?: string): void;\n\n\t/**\n\t * Returns the real (inner-most) language mode at a given position.\n\t * The result might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLanguageIdAtPosition(lineNumber: number, column: number): string;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position: IPosition): IWordAtPosition | null;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position: IPosition): IWordAtPosition;\n\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T, ownerId?: number): T | null;\n\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[], ownerId?: number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId: number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id: string): IModelDecorationOptions | null;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id: string): Range | null;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber: number, endLineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range: IRange, ownerId?: number, filterOutValidation?: boolean, onlyMinimapDecorations?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that should be rendered in the overview ruler as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetOverviewRulerDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that contain injected text.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t */\n\tgetInjectedTextDecorations(ownerId?: number): IModelDecoration[];\n\n\t/**\n\t * @internal\n\t */\n\t_getTrackedRange(id: string): Range | null;\n\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: TrackedRangeStickiness): null;\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: TrackedRangeStickiness): string;\n\n\t/**\n\t * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).\n\t */\n\tnormalizeIndentation(str: string): string;\n\n\t/**\n\t * Change the options of this model.\n\t */\n\tupdateOptions(newOpts: ITextModelUpdateOptions): void;\n\n\t/**\n\t * Detect the indentation options for this model from its content.\n\t */\n\tdetectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void;\n\n\t/**\n\t * Close the current undo-redo element.\n\t * This offers a way to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Open the current undo-redo element.\n\t * This offers a way to remove the current undo/redo stop point.\n\t */\n\tpopStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState: Selection[] | null, editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): Selection[] | null;\n\n\t/**\n\t * Change the end of line sequence. This is the preferred way of\n\t * changing the eol sequence. This will land on the undo stack.\n\t */\n\tpushEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return If desired, the inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[]): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: false): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: true): IValidEditOperation[];\n\n\t/**\n\t * Change the end of line sequence without recording in the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEOL for the preferred way.\n\t */\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyUndo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyRedo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * Undo edit operations until the previous undo/redo point.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): void | Promise<void>;\n\n\t/**\n\t * Is there anything in the undo stack?\n\t * @internal\n\t */\n\tcanUndo(): boolean;\n\n\t/**\n\t * Redo edit operations until the next undo/redo point.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): void | Promise<void>;\n\n\t/**\n\t * Is there anything in the redo stack?\n\t * @internal\n\t */\n\tcanRedo(): boolean;\n\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\treadonly onDidChangeContentOrInjectedText: Event<InternalModelContentChangeEvent | ModelInjectedTextChangedEvent>;\n\t/**\n\t * An event emitted when the contents of the model have changed.\n\t * @event\n\t */\n\tonDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when decorations of the model have changed.\n\t * @event\n\t */\n\treadonly onDidChangeDecorations: Event<IModelDecorationsChangedEvent>;\n\t/**\n\t * An event emitted when the model options have changed.\n\t * @event\n\t */\n\treadonly onDidChangeOptions: Event<IModelOptionsChangedEvent>;\n\t/**\n\t * An event emitted when the language associated with the model has changed.\n\t * @event\n\t */\n\treadonly onDidChangeLanguage: Event<IModelLanguageChangedEvent>;\n\t/**\n\t * An event emitted when the language configuration associated with the model has changed.\n\t * @event\n\t */\n\treadonly onDidChangeLanguageConfiguration: Event<IModelLanguageConfigurationChangedEvent>;\n\t/**\n\t * An event emitted when the tokens associated with the model have changed.\n\t * @event\n\t * @internal\n\t */\n\treadonly onDidChangeTokens: Event<IModelTokensChangedEvent>;\n\t/**\n\t * An event emitted when the model has been attached to the first editor or detached from the last editor.\n\t * @event\n\t */\n\treadonly onDidChangeAttached: Event<void>;\n\t/**\n\t * An event emitted right before disposing the model.\n\t * @event\n\t */\n\treadonly onWillDispose: Event<void>;\n\n\t/**\n\t * Destroy this model.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(): void;\n\n\t/**\n\t * Returns if this model is attached to an editor or not.\n\t */\n\tisAttachedToEditor(): boolean;\n\n\t/**\n\t * Returns the count of editors this model is attached to.\n\t * @internal\n\t */\n\tgetAttachedEditorCount(): number;\n\n\t/**\n\t * Among all positions that are projected to the same position in the underlying text model as\n\t * the given position, select a unique position as indicated by the affinity.\n\t *\n\t * PositionAffinity.Left:\n\t * The normalized position must be equal or left to the requested position.\n\t *\n\t * PositionAffinity.Right:\n\t * The normalized position must be equal or right to the requested position.\n\t *\n\t * @internal\n\t */\n\tnormalizePosition(position: Position, affinity: PositionAffinity): Position;\n\n\t/**\n\t * Gets the column at which indentation stops at a given line.\n\t * @internal\n\t*/\n\tgetLineIndentColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns an object that can be used to query brackets.\n\t * @internal\n\t*/\n\treadonly bracketPairs: IBracketPairsTextModelPart;\n\n\t/**\n\t * Returns an object that can be used to query indent guides.\n\t * @internal\n\t*/\n\treadonly guides: IGuidesTextModelPart;\n\n\t/**\n\t * @internal\n\t */\n\treadonly tokenization: ITokenizationTextModelPart;\n}\n\nexport const enum PositionAffinity {\n\t/**\n\t * Prefers the left most position.\n\t*/\n\tLeft = 0,\n\n\t/**\n\t * Prefers the right most position.\n\t*/\n\tRight = 1,\n\n\t/**\n\t * No preference.\n\t*/\n\tNone = 2,\n\n\t/**\n\t * If the given position is on injected text, prefers the position left of it.\n\t*/\n\tLeftOfInjectedText = 3,\n\n\t/**\n\t * If the given position is on injected text, prefers the position right of it.\n\t*/\n\tRightOfInjectedText = 4,\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferBuilder {\n\tacceptChunk(chunk: string): void;\n\tfinish(): ITextBufferFactory;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferFactory {\n\tcreate(defaultEOL: DefaultEndOfLine): { textBuffer: ITextBuffer; disposable: IDisposable };\n\tgetFirstLineText(lengthLimit: number): string;\n}\n\n/**\n * @internal\n */\nexport const enum ModelConstants {\n\tFIRST_LINE_DETECTION_LENGTH_LIMIT = 1000\n}\n\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation implements IIdentifiedSingleEditOperation {\n\tconstructor(\n\t\tpublic readonly identifier: ISingleEditOperationIdentifier | null,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly text: string | null,\n\t\tpublic readonly forceMoveMarkers: boolean,\n\t\tpublic readonly isAutoWhitespaceEdit: boolean,\n\t\tpublic readonly _isTracked: boolean,\n\t) { }\n}\n\n/**\n * @internal\n *\n * `lineNumber` is 1 based.\n */\nexport interface IReadonlyTextBuffer {\n\tonDidChangeContent: Event<void>;\n\tequals(other: ITextBuffer): boolean;\n\tmightContainRTL(): boolean;\n\tmightContainUnusualLineTerminators(): boolean;\n\tresetMightContainUnusualLineTerminators(): void;\n\tmightContainNonBasicASCII(): boolean;\n\tgetBOM(): string;\n\tgetEOL(): string;\n\n\tgetOffsetAt(lineNumber: number, column: number): number;\n\tgetPositionAt(offset: number): Position;\n\tgetRangeAt(offset: number, length: number): Range;\n\n\tgetValueInRange(range: Range, eol: EndOfLinePreference): string;\n\tcreateSnapshot(preserveBOM: boolean): ITextSnapshot;\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetCharacterCountInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetLength(): number;\n\tgetLineCount(): number;\n\tgetLinesContent(): string[];\n\tgetLineContent(lineNumber: number): string;\n\tgetLineCharCode(lineNumber: number, index: number): number;\n\tgetCharCode(offset: number): number;\n\tgetLineLength(lineNumber: number): number;\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[];\n}\n\n/**\n * @internal\n */\nexport class SearchData {\n\n\t/**\n\t * The regex to search for. Always defined.\n\t */\n\tpublic readonly regex: RegExp;\n\t/**\n\t * The word separator classifier.\n\t */\n\tpublic readonly wordSeparators: WordCharacterClassifier | null;\n\t/**\n\t * The simple string to search for (if possible).\n\t */\n\tpublic readonly simpleSearch: string | null;\n\n\tconstructor(regex: RegExp, wordSeparators: WordCharacterClassifier | null, simpleSearch: string | null) {\n\t\tthis.regex = regex;\n\t\tthis.wordSeparators = wordSeparators;\n\t\tthis.simpleSearch = simpleSearch;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextBuffer extends IReadonlyTextBuffer {\n\tsetEOL(newEOL: '\\r\\n' | '\\n'): void;\n\tapplyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult;\n}\n\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n\n\tconstructor(\n\t\tpublic readonly reverseEdits: IValidEditOperation[] | null,\n\t\tpublic readonly changes: IInternalModelContentChange[],\n\t\tpublic readonly trimAutoWhitespaceLineNumbers: number[] | null\n\t) { }\n\n}\n\n/**\n * @internal\n */\nexport interface IInternalModelContentChange extends IModelContentChange {\n\trange: Range;\n\tforceMoveMarkers: boolean;\n}\n\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model: ITextModel): boolean {\n\treturn (\n\t\t!model.isTooLargeForSyncing() && !model.isForSimpleWidget\n\t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { arrayInsert } from 'vs/base/common/arrays';\nimport { toUint32 } from 'vs/base/common/uint';\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic setValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, count: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcount = toUint32(count);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxCount = oldValues.length - startIndex;\n\t\tif (count >= maxCount) {\n\t\t\tcount = maxCount;\n\t\t}\n\n\t\tif (count === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - count);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + count), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalSum(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getPrefixSum(this.values.length - 1);\n\t}\n\n\t/**\n\t * Returns the sum of the first `index + 1` many items.\n\t * @returns `SUM(0 <= j <= index, values[j])`.\n\t */\n\tpublic getPrefixSum(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getPrefixSum(index);\n\t}\n\n\tprivate _getPrefixSum(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(sum: number): PrefixSumIndexOfResult {\n\t\tsum = Math.floor(sum);\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalSum();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (sum < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (sum >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, sum - midStart);\n\t}\n}\n\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n\tprivate _values: number[];\n\tprivate _isValid: boolean;\n\tprivate _validEndIndex: number;\n\n\t/**\n\t * _prefixSum[i] = SUM(values[j]), 0 <= j <= i\n\t */\n\tprivate _prefixSum: number[];\n\n\t/**\n\t * _indexBySum[sum] = idx => _prefixSum[idx - 1] <= sum < _prefixSum[idx]\n\t*/\n\tprivate _indexBySum: number[];\n\n\tconstructor(values: number[]) {\n\t\tthis._values = values;\n\t\tthis._isValid = false;\n\t\tthis._validEndIndex = -1;\n\t\tthis._prefixSum = [];\n\t\tthis._indexBySum = [];\n\t}\n\n\t/**\n\t * @returns SUM(0 <= j < values.length, values[j])\n\t */\n\tpublic getTotalSum(): number {\n\t\tthis._ensureValid();\n\t\treturn this._indexBySum.length;\n\t}\n\n\t/**\n\t * Returns the sum of the first `count` many items.\n\t * @returns `SUM(0 <= j < count, values[j])`.\n\t */\n\tpublic getPrefixSum(count: number): number {\n\t\tthis._ensureValid();\n\t\tif (count === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._prefixSum[count - 1];\n\t}\n\n\t/**\n\t * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n\t */\n\tpublic getIndexOf(sum: number): PrefixSumIndexOfResult {\n\t\tthis._ensureValid();\n\t\tconst idx = this._indexBySum[sum];\n\t\tconst viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n\t\treturn new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n\t}\n\n\tpublic removeValues(start: number, deleteCount: number): void {\n\t\tthis._values.splice(start, deleteCount);\n\t\tthis._invalidate(start);\n\t}\n\n\tpublic insertValues(insertIndex: number, insertArr: number[]): void {\n\t\tthis._values = arrayInsert(this._values, insertIndex, insertArr);\n\t\tthis._invalidate(insertIndex);\n\t}\n\n\tprivate _invalidate(index: number): void {\n\t\tthis._isValid = false;\n\t\tthis._validEndIndex = Math.min(this._validEndIndex, index - 1);\n\t}\n\n\tprivate _ensureValid(): void {\n\t\tif (this._isValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n\t\t\tconst value = this._values[i];\n\t\t\tconst sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n\n\t\t\tthis._prefixSum[i] = sumAbove + value;\n\t\t\tfor (let j = 0; j < value; j++) {\n\t\t\t\tthis._indexBySum[sumAbove + j] = i;\n\t\t\t}\n\t\t}\n\n\t\t// trim things\n\t\tthis._prefixSum.length = this._values.length;\n\t\tthis._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n\n\t\t// mark as valid\n\t\tthis._isValid = true;\n\t\tthis._validEndIndex = this._values.length - 1;\n\t}\n\n\tpublic setValue(index: number, value: number): void {\n\t\tif (this._values[index] === value) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._values[index] = value;\n\t\tthis._invalidate(index);\n\t}\n}\n\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly index: number,\n\t\tpublic readonly remainder: number\n\t) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { splitLines } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/model/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\treadonly isUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\treadonly isRedoing: boolean;\n}\n\nexport interface IMirrorTextModel {\n\treadonly version: number;\n}\n\nexport class MirrorTextModel implements IMirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\tprivate _cachedTextValue: string | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\tif (this._cachedTextValue === null) {\n\t\t\tthis._cachedTextValue = this._lines.join(this._eol);\n\t\t}\n\t\treturn this._cachedTextValue;\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tconst insertLines = splitLines(insertText);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tconst newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as strings from 'vs/base/common/strings';\nimport { WordCharacterClass, WordCharacterClassifier, getMapForWordSeparators } from 'vs/editor/common/core/wordCharacterClassifier';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EndOfLinePreference, FindMatch, SearchData } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\n\nconst LIMIT_FIND_COUNT = 999;\n\nexport class SearchParams {\n\tpublic readonly searchString: string;\n\tpublic readonly isRegex: boolean;\n\tpublic readonly matchCase: boolean;\n\tpublic readonly wordSeparators: string | null;\n\n\tconstructor(searchString: string, isRegex: boolean, matchCase: boolean, wordSeparators: string | null) {\n\t\tthis.searchString = searchString;\n\t\tthis.isRegex = isRegex;\n\t\tthis.matchCase = matchCase;\n\t\tthis.wordSeparators = wordSeparators;\n\t}\n\n\tpublic parseSearchRequest(): SearchData | null {\n\t\tif (this.searchString === '') {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Try to create a RegExp out of the params\n\t\tlet multiline: boolean;\n\t\tif (this.isRegex) {\n\t\t\tmultiline = isMultilineRegexSource(this.searchString);\n\t\t} else {\n\t\t\tmultiline = (this.searchString.indexOf('\\n') >= 0);\n\t\t}\n\n\t\tlet regex: RegExp | null = null;\n\t\ttry {\n\t\t\tregex = strings.createRegExp(this.searchString, this.isRegex, {\n\t\t\t\tmatchCase: this.matchCase,\n\t\t\t\twholeWord: false,\n\t\t\t\tmultiline: multiline,\n\t\t\t\tglobal: true,\n\t\t\t\tunicode: true\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!regex) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet canUseSimpleSearch = (!this.isRegex && !multiline);\n\t\tif (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n\t\t\t// casing might make a difference\n\t\t\tcanUseSimpleSearch = this.matchCase;\n\t\t}\n\n\t\treturn new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators) : null, canUseSimpleSearch ? this.searchString : null);\n\t}\n}\n\nexport function isMultilineRegexSource(searchString: string): boolean {\n\tif (!searchString || searchString.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = searchString.length; i < len; i++) {\n\t\tconst chCode = searchString.charCodeAt(i);\n\n\t\tif (chCode === CharCode.LineFeed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (chCode === CharCode.Backslash) {\n\n\t\t\t// move to next char\n\t\t\ti++;\n\n\t\t\tif (i >= len) {\n\t\t\t\t// string ends with a \\\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst nextChCode = searchString.charCodeAt(i);\n\t\t\tif (nextChCode === CharCode.n || nextChCode === CharCode.r || nextChCode === CharCode.W) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function createFindMatch(range: Range, rawMatches: RegExpExecArray, captureMatches: boolean): FindMatch {\n\tif (!captureMatches) {\n\t\treturn new FindMatch(range, null);\n\t}\n\tconst matches: string[] = [];\n\tfor (let i = 0, len = rawMatches.length; i < len; i++) {\n\t\tmatches[i] = rawMatches[i];\n\t}\n\treturn new FindMatch(range, matches);\n}\n\nclass LineFeedCounter {\n\n\tprivate readonly _lineFeedsOffsets: number[];\n\n\tconstructor(text: string) {\n\t\tconst lineFeedsOffsets: number[] = [];\n\t\tlet lineFeedsOffsetsLen = 0;\n\t\tfor (let i = 0, textLen = text.length; i < textLen; i++) {\n\t\t\tif (text.charCodeAt(i) === CharCode.LineFeed) {\n\t\t\t\tlineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n\t\t\t}\n\t\t}\n\t\tthis._lineFeedsOffsets = lineFeedsOffsets;\n\t}\n\n\tpublic findLineFeedCountBeforeOffset(offset: number): number {\n\t\tconst lineFeedsOffsets = this._lineFeedsOffsets;\n\t\tlet min = 0;\n\t\tlet max = lineFeedsOffsets.length - 1;\n\n\t\tif (max === -1) {\n\t\t\t// no line feeds\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (offset <= lineFeedsOffsets[0]) {\n\t\t\t// before first line feed\n\t\t\treturn 0;\n\t\t}\n\n\t\twhile (min < max) {\n\t\t\tconst mid = min + ((max - min) / 2 >> 0);\n\n\t\t\tif (lineFeedsOffsets[mid] >= offset) {\n\t\t\t\tmax = mid - 1;\n\t\t\t} else {\n\t\t\t\tif (lineFeedsOffsets[mid + 1] >= offset) {\n\t\t\t\t\t// bingo!\n\t\t\t\t\tmin = mid;\n\t\t\t\t\tmax = mid;\n\t\t\t\t} else {\n\t\t\t\t\tmin = mid + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn min + 1;\n\t}\n}\n\nexport class TextModelSearch {\n\n\tpublic static findMatches(model: TextModel, searchParams: SearchParams, searchRange: Range, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n\t\t}\n\t\treturn this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t/**\n\t * Multiline search always executes on the lines concatenated with \\n.\n\t * We must therefore compensate for the count of \\n in case the model is CRLF\n\t */\n\tprivate static _getMultilineMatchRange(model: TextModel, deltaOffset: number, text: string, lfCounter: LineFeedCounter | null, matchIndex: number, match0: string): Range {\n\t\tlet startOffset: number;\n\t\tlet lineFeedCountBeforeMatch = 0;\n\t\tif (lfCounter) {\n\t\t\tlineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n\t\t\tstartOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n\t\t} else {\n\t\t\tstartOffset = deltaOffset + matchIndex;\n\t\t}\n\n\t\tlet endOffset: number;\n\t\tif (lfCounter) {\n\t\t\tconst lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n\t\t\tconst lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n\t\t\tendOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n\t\t} else {\n\t\t\tendOffset = startOffset + match0.length;\n\t\t}\n\n\t\tconst startPosition = model.getPositionAt(startOffset);\n\t\tconst endPosition = model.getPositionAt(endOffset);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tprivate static _doFindMatchesMultiline(model: TextModel, searchRange: Range, searcher: Searcher, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n\t\t// We always execute multiline search over the lines joined with \\n\n\t\t// This makes it that \\n will match the EOL for both CRLF and LF models\n\t\t// We compensate for offset errors in `_getMultilineMatchRange`\n\t\tconst text = model.getValueInRange(searchRange, EndOfLinePreference.LF);\n\t\tconst lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n\n\t\tconst result: FindMatch[] = [];\n\t\tlet counter = 0;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tsearcher.reset(0);\n\t\twhile ((m = searcher.next(text))) {\n\t\t\tresult[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n\t\t\tif (counter >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _doFindMatchesLineByLine(model: TextModel, searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\n\t\t// Early case for a search range that starts & stops on the same line number\n\t\tif (searchRange.startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\t// Collect results from first line\n\t\tconst text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n\n\t\t// Collect results from middle lines\n\t\tfor (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n\t\t\tresultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n\t\t}\n\n\t\t// Collect results from last line\n\t\tif (resultLen < limitResultCount) {\n\t\t\tconst text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _findMatchesInLine(searchData: SearchData, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\tpublic static findNextMatch(model: TextModel, searchParams: SearchParams, searchStart: Position, captureMatches: boolean): FindMatch | null {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n\t\t}\n\t\treturn this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n\t}\n\n\tprivate static _doFindNextMatchMultiline(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst searchTextStart = new Position(searchStart.lineNumber, 1);\n\t\tconst deltaOffset = model.getOffsetAt(searchTextStart);\n\t\tconst lineCount = model.getLineCount();\n\t\t// We always execute multiline search over the lines joined with \\n\n\t\t// This makes it that \\n will match the EOL for both CRLF and LF models\n\t\t// We compensate for offset errors in `_getMultilineMatchRange`\n\t\tconst text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), EndOfLinePreference.LF);\n\t\tconst lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n\t\tsearcher.reset(searchStart.column - 1);\n\t\tconst m = searcher.next(text);\n\t\tif (m) {\n\t\t\treturn createFindMatch(\n\t\t\t\tthis._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]),\n\t\t\t\tm,\n\t\t\t\tcaptureMatches\n\t\t\t);\n\t\t}\n\n\t\tif (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n\t\t\t// Try again from the top\n\t\t\treturn this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _doFindNextMatchLineByLine(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst lineCount = model.getLineCount();\n\t\tconst startLineNumber = searchStart.lineNumber;\n\n\t\t// Look in first line\n\t\tconst text = model.getLineContent(startLineNumber);\n\t\tconst r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tconst lineIndex = (startLineNumber + i - 1) % lineCount;\n\t\t\tconst text = model.getLineContent(lineIndex + 1);\n\t\t\tconst r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findFirstMatchInLine(searcher: Searcher, text: string, lineNumber: number, fromColumn: number, captureMatches: boolean): FindMatch | null {\n\t\t// Set regex to search from column\n\t\tsearcher.reset(fromColumn - 1);\n\t\tconst m: RegExpExecArray | null = searcher.next(text);\n\t\tif (m) {\n\t\t\treturn createFindMatch(\n\t\t\t\tnew Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length),\n\t\t\t\tm,\n\t\t\t\tcaptureMatches\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static findPreviousMatch(model: TextModel, searchParams: SearchParams, searchStart: Position, captureMatches: boolean): FindMatch | null {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n\t\t}\n\t\treturn this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n\t}\n\n\tprivate static _doFindPreviousMatchMultiline(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n\t\tif (matches.length > 0) {\n\t\t\treturn matches[matches.length - 1];\n\t\t}\n\n\t\tconst lineCount = model.getLineCount();\n\t\tif (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n\t\t\t// Try again with all content\n\t\t\treturn this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _doFindPreviousMatchLineByLine(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst lineCount = model.getLineCount();\n\t\tconst startLineNumber = searchStart.lineNumber;\n\n\t\t// Look in first line\n\t\tconst text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n\t\tconst r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tconst lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n\t\t\tconst text = model.getLineContent(lineIndex + 1);\n\t\t\tconst r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findLastMatchInLine(searcher: Searcher, text: string, lineNumber: number, captureMatches: boolean): FindMatch | null {\n\t\tlet bestResult: FindMatch | null = null;\n\t\tlet m: RegExpExecArray | null;\n\t\tsearcher.reset(0);\n\t\twhile ((m = searcher.next(text))) {\n\t\t\tbestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n\t\t}\n\t\treturn bestResult;\n\t}\n}\n\nfunction leftIsWordBounday(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\tif (matchStartIndex === 0) {\n\t\t// Match starts at start of string\n\t\treturn true;\n\t}\n\n\tconst charBefore = text.charCodeAt(matchStartIndex - 1);\n\tif (wordSeparators.get(charBefore) !== WordCharacterClass.Regular) {\n\t\t// The character before the match is a word separator\n\t\treturn true;\n\t}\n\n\tif (charBefore === CharCode.CarriageReturn || charBefore === CharCode.LineFeed) {\n\t\t// The character before the match is line break or carriage return.\n\t\treturn true;\n\t}\n\n\tif (matchLength > 0) {\n\t\tconst firstCharInMatch = text.charCodeAt(matchStartIndex);\n\t\tif (wordSeparators.get(firstCharInMatch) !== WordCharacterClass.Regular) {\n\t\t\t// The first character inside the match is a word separator\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction rightIsWordBounday(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\tif (matchStartIndex + matchLength === textLength) {\n\t\t// Match ends at end of string\n\t\treturn true;\n\t}\n\n\tconst charAfter = text.charCodeAt(matchStartIndex + matchLength);\n\tif (wordSeparators.get(charAfter) !== WordCharacterClass.Regular) {\n\t\t// The character after the match is a word separator\n\t\treturn true;\n\t}\n\n\tif (charAfter === CharCode.CarriageReturn || charAfter === CharCode.LineFeed) {\n\t\t// The character after the match is line break or carriage return.\n\t\treturn true;\n\t}\n\n\tif (matchLength > 0) {\n\t\tconst lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n\t\tif (wordSeparators.get(lastCharInMatch) !== WordCharacterClass.Regular) {\n\t\t\t// The last character in the match is a word separator\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function isValidMatch(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\treturn (\n\t\tleftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n\t\t&& rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n\t);\n}\n\nexport class Searcher {\n\tpublic readonly _wordSeparators: WordCharacterClassifier | null;\n\tprivate readonly _searchRegex: RegExp;\n\tprivate _prevMatchStartIndex: number;\n\tprivate _prevMatchLength: number;\n\n\tconstructor(wordSeparators: WordCharacterClassifier | null, searchRegex: RegExp,) {\n\t\tthis._wordSeparators = wordSeparators;\n\t\tthis._searchRegex = searchRegex;\n\t\tthis._prevMatchStartIndex = -1;\n\t\tthis._prevMatchLength = 0;\n\t}\n\n\tpublic reset(lastIndex: number): void {\n\t\tthis._searchRegex.lastIndex = lastIndex;\n\t\tthis._prevMatchStartIndex = -1;\n\t\tthis._prevMatchLength = 0;\n\t}\n\n\tpublic next(text: string): RegExpExecArray | null {\n\t\tconst textLength = text.length;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tdo {\n\t\t\tif (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n\t\t\t\t// Reached the end of the line\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tm = this._searchRegex.exec(text);\n\t\t\tif (!m) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst matchStartIndex = m.index;\n\t\t\tconst matchLength = m[0].length;\n\t\t\tif (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n\t\t\t\tif (matchLength === 0) {\n\t\t\t\t\t// the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n\t\t\t\t\t// we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n\t\t\t\t\tif (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n\t\t\t\t\t\tthis._searchRegex.lastIndex += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._searchRegex.lastIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Exit early if the regex matches the same range twice\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._prevMatchStartIndex = matchStartIndex;\n\t\t\tthis._prevMatchLength = matchLength;\n\n\t\t\tif (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n\t\t\t\treturn m;\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Searcher } from 'vs/editor/common/model/textModelSearch';\nimport * as strings from 'vs/base/common/strings';\nimport { IUnicodeHighlightsResult } from 'vs/editor/common/services/editorWorker';\nimport { assertNever } from 'vs/base/common/assert';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from 'vs/editor/common/core/wordHelper';\n\nexport class UnicodeTextModelHighlighter {\n\tpublic static computeUnicodeHighlights(model: IUnicodeCharacterSearcherTarget, options: UnicodeHighlighterOptions, range?: IRange): IUnicodeHighlightsResult {\n\t\tconst startLine = range ? range.startLineNumber : 1;\n\t\tconst endLine = range ? range.endLineNumber : model.getLineCount();\n\n\t\tconst codePointHighlighter = new CodePointHighlighter(options);\n\n\t\tconst candidates = codePointHighlighter.getCandidateCodePoints();\n\t\tlet regex: RegExp;\n\t\tif (candidates === 'allNonBasicAscii') {\n\t\t\tregex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n\t\t} else {\n\t\t\tregex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n\t\t}\n\n\t\tconst searcher = new Searcher(null, regex);\n\t\tconst ranges: Range[] = [];\n\t\tlet hasMore = false;\n\t\tlet m: RegExpExecArray | null;\n\n\t\tlet ambiguousCharacterCount = 0;\n\t\tlet invisibleCharacterCount = 0;\n\t\tlet nonBasicAsciiCharacterCount = 0;\n\n\t\tforLoop:\n\t\tfor (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\t\tconst lineLength = lineContent.length;\n\n\t\t\t// Reset regex to search from the beginning\n\t\t\tsearcher.reset(0);\n\t\t\tdo {\n\t\t\t\tm = searcher.next(lineContent);\n\t\t\t\tif (m) {\n\t\t\t\t\tlet startIndex = m.index;\n\t\t\t\t\tlet endIndex = m.index + m[0].length;\n\n\t\t\t\t\t// Extend range to entire code point\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tconst charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n\t\t\t\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (endIndex + 1 < lineLength) {\n\t\t\t\t\t\tconst charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n\t\t\t\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst str = lineContent.substring(startIndex, endIndex);\n\t\t\t\t\tconst word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n\t\t\t\t\tconst highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n\n\t\t\t\t\tif (highlightReason !== SimpleHighlightReason.None) {\n\t\t\t\t\t\tif (highlightReason === SimpleHighlightReason.Ambiguous) {\n\t\t\t\t\t\t\tambiguousCharacterCount++;\n\t\t\t\t\t\t} else if (highlightReason === SimpleHighlightReason.Invisible) {\n\t\t\t\t\t\t\tinvisibleCharacterCount++;\n\t\t\t\t\t\t} else if (highlightReason === SimpleHighlightReason.NonBasicASCII) {\n\t\t\t\t\t\t\tnonBasicAsciiCharacterCount++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassertNever(highlightReason);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst MAX_RESULT_LENGTH = 1000;\n\t\t\t\t\t\tif (ranges.length >= MAX_RESULT_LENGTH) {\n\t\t\t\t\t\t\thasMore = true;\n\t\t\t\t\t\t\tbreak forLoop;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (m);\n\t\t}\n\t\treturn {\n\t\t\tranges,\n\t\t\thasMore,\n\t\t\tambiguousCharacterCount,\n\t\t\tinvisibleCharacterCount,\n\t\t\tnonBasicAsciiCharacterCount\n\t\t};\n\t}\n\n\tpublic static computeUnicodeHighlightReason(char: string, options: UnicodeHighlighterOptions): UnicodeHighlighterReason | null {\n\t\tconst codePointHighlighter = new CodePointHighlighter(options);\n\n\t\tconst reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n\t\tswitch (reason) {\n\t\t\tcase SimpleHighlightReason.None:\n\t\t\t\treturn null;\n\t\t\tcase SimpleHighlightReason.Invisible:\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.Invisible };\n\n\t\t\tcase SimpleHighlightReason.Ambiguous: {\n\t\t\t\tconst codePoint = char.codePointAt(0)!;\n\t\t\t\tconst primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint)!;\n\t\t\t\tconst notAmbiguousInLocales =\n\t\t\t\t\tstrings.AmbiguousCharacters.getLocales().filter(\n\t\t\t\t\t\t(l) =>\n\t\t\t\t\t\t\t!strings.AmbiguousCharacters.getInstance(\n\t\t\t\t\t\t\t\tnew Set([...options.allowedLocales, l])\n\t\t\t\t\t\t\t).isAmbiguous(codePoint)\n\t\t\t\t\t);\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.Ambiguous, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n\t\t\t}\n\t\t\tcase SimpleHighlightReason.NonBasicASCII:\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.NonBasicAscii };\n\t\t}\n\t}\n}\n\nfunction buildRegExpCharClassExpr(codePoints: number[], flags?: string): string {\n\tconst src = `[${strings.escapeRegExpCharacters(\n\t\tcodePoints.map((i) => String.fromCodePoint(i)).join('')\n\t)}]`;\n\treturn src;\n}\n\nexport const enum UnicodeHighlighterReasonKind {\n\tAmbiguous, Invisible, NonBasicAscii\n}\n\nexport type UnicodeHighlighterReason = {\n\tkind: UnicodeHighlighterReasonKind.Ambiguous;\n\tconfusableWith: string;\n\tnotAmbiguousInLocales: string[];\n} | {\n\tkind: UnicodeHighlighterReasonKind.Invisible;\n} | {\n\tkind: UnicodeHighlighterReasonKind.NonBasicAscii;\n};\n\nclass CodePointHighlighter {\n\tprivate readonly allowedCodePoints: Set<number>;\n\tpublic readonly ambiguousCharacters: strings.AmbiguousCharacters;\n\tconstructor(private readonly options: UnicodeHighlighterOptions) {\n\t\tthis.allowedCodePoints = new Set(options.allowedCodePoints);\n\t\tthis.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n\t}\n\n\tpublic getCandidateCodePoints(): Set<number> | 'allNonBasicAscii' {\n\t\tif (this.options.nonBasicASCII) {\n\t\t\treturn 'allNonBasicAscii';\n\t\t}\n\n\t\tconst set = new Set<number>();\n\n\t\tif (this.options.invisibleCharacters) {\n\t\t\tfor (const cp of strings.InvisibleCharacters.codePoints) {\n\t\t\t\tif (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n\t\t\t\t\tset.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.ambiguousCharacters) {\n\t\t\tfor (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n\t\t\t\tset.add(cp);\n\t\t\t}\n\t\t}\n\n\t\tfor (const cp of this.allowedCodePoints) {\n\t\t\tset.delete(cp);\n\t\t}\n\n\t\treturn set;\n\t}\n\n\tpublic shouldHighlightNonBasicASCII(character: string, wordContext: string | null): SimpleHighlightReason {\n\t\tconst codePoint = character.codePointAt(0)!;\n\n\t\tif (this.allowedCodePoints.has(codePoint)) {\n\t\t\treturn SimpleHighlightReason.None;\n\t\t}\n\n\t\tif (this.options.nonBasicASCII) {\n\t\t\treturn SimpleHighlightReason.NonBasicASCII;\n\t\t}\n\n\t\tlet hasBasicASCIICharacters = false;\n\t\tlet hasNonConfusableNonBasicAsciiCharacter = false;\n\t\tif (wordContext) {\n\t\t\tfor (const char of wordContext) {\n\t\t\t\tconst codePoint = char.codePointAt(0)!;\n\t\t\t\tconst isBasicASCII = strings.isBasicASCII(char);\n\t\t\t\thasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n\n\t\t\t\tif (\n\t\t\t\t\t!isBasicASCII &&\n\t\t\t\t\t!this.ambiguousCharacters.isAmbiguous(codePoint) &&\n\t\t\t\t\t!strings.InvisibleCharacters.isInvisibleCharacter(codePoint)\n\t\t\t\t) {\n\t\t\t\t\thasNonConfusableNonBasicAsciiCharacter = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t/* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n\t\t\t/* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter\n\t\t) {\n\t\t\treturn SimpleHighlightReason.None;\n\t\t}\n\n\t\tif (this.options.invisibleCharacters) {\n\t\t\t// TODO check for emojis\n\t\t\tif (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n\t\t\t\treturn SimpleHighlightReason.Invisible;\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.ambiguousCharacters) {\n\t\t\tif (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n\t\t\t\treturn SimpleHighlightReason.Ambiguous;\n\t\t\t}\n\t\t}\n\n\t\treturn SimpleHighlightReason.None;\n\t}\n}\n\nfunction isAllowedInvisibleCharacter(character: string): boolean {\n\treturn character === ' ' || character === '\\n' || character === '\\t';\n}\n\nconst enum SimpleHighlightReason {\n\tNone,\n\tNonBasicASCII,\n\tInvisible,\n\tAmbiguous\n}\n\nexport interface IUnicodeCharacterSearcherTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport interface UnicodeHighlighterOptions {\n\tnonBasicASCII: boolean;\n\tambiguousCharacters: boolean;\n\tinvisibleCharacters: boolean;\n\tincludeComments: boolean;\n\tincludeStrings: boolean;\n\tallowedCodePoints: number[];\n\tallowedLocales: string[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n\n\nexport enum AccessibilitySupport {\n\t/**\n\t * This should be the browser case where it is not known if a screen reader is attached or no.\n\t */\n\tUnknown = 0,\n\tDisabled = 1,\n\tEnabled = 2\n}\n\nexport enum CodeActionTriggerType {\n\tInvoke = 1,\n\tAuto = 2\n}\n\nexport enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 1,\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 4\n}\n\nexport enum CompletionItemKind {\n\tMethod = 0,\n\tFunction = 1,\n\tConstructor = 2,\n\tField = 3,\n\tVariable = 4,\n\tClass = 5,\n\tStruct = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tEvent = 10,\n\tOperator = 11,\n\tUnit = 12,\n\tValue = 13,\n\tConstant = 14,\n\tEnum = 15,\n\tEnumMember = 16,\n\tKeyword = 17,\n\tText = 18,\n\tColor = 19,\n\tFile = 20,\n\tReference = 21,\n\tCustomcolor = 22,\n\tFolder = 23,\n\tTypeParameter = 24,\n\tUser = 25,\n\tIssue = 26,\n\tSnippet = 27\n}\n\nexport enum CompletionItemTag {\n\tDeprecated = 1\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\n/**\n * A positioning preference for rendering content widgets.\n */\nexport enum ContentWidgetPositionPreference {\n\t/**\n\t * Place the content widget exactly at a position\n\t */\n\tEXACT = 0,\n\t/**\n\t * Place the content widget above a position\n\t */\n\tABOVE = 1,\n\t/**\n\t * Place the content widget below a position\n\t */\n\tBELOW = 2\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText = 0,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead = 1,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite = 2\n}\n\n/**\n * Configuration options for auto indentation in the editor\n */\nexport enum EditorAutoIndentStrategy {\n\tNone = 0,\n\tKeep = 1,\n\tBrackets = 2,\n\tAdvanced = 3,\n\tFull = 4\n}\n\nexport enum EditorOption {\n\tacceptSuggestionOnCommitCharacter = 0,\n\tacceptSuggestionOnEnter = 1,\n\taccessibilitySupport = 2,\n\taccessibilityPageSize = 3,\n\tariaLabel = 4,\n\tautoClosingBrackets = 5,\n\tautoClosingDelete = 6,\n\tautoClosingOvertype = 7,\n\tautoClosingQuotes = 8,\n\tautoIndent = 9,\n\tautomaticLayout = 10,\n\tautoSurround = 11,\n\tbracketPairColorization = 12,\n\tguides = 13,\n\tcodeLens = 14,\n\tcodeLensFontFamily = 15,\n\tcodeLensFontSize = 16,\n\tcolorDecorators = 17,\n\tcolumnSelection = 18,\n\tcomments = 19,\n\tcontextmenu = 20,\n\tcopyWithSyntaxHighlighting = 21,\n\tcursorBlinking = 22,\n\tcursorSmoothCaretAnimation = 23,\n\tcursorStyle = 24,\n\tcursorSurroundingLines = 25,\n\tcursorSurroundingLinesStyle = 26,\n\tcursorWidth = 27,\n\tdisableLayerHinting = 28,\n\tdisableMonospaceOptimizations = 29,\n\tdomReadOnly = 30,\n\tdragAndDrop = 31,\n\tdropIntoEditor = 32,\n\temptySelectionClipboard = 33,\n\textraEditorClassName = 34,\n\tfastScrollSensitivity = 35,\n\tfind = 36,\n\tfixedOverflowWidgets = 37,\n\tfolding = 38,\n\tfoldingStrategy = 39,\n\tfoldingHighlight = 40,\n\tfoldingImportsByDefault = 41,\n\tfoldingMaximumRegions = 42,\n\tunfoldOnClickAfterEndOfLine = 43,\n\tfontFamily = 44,\n\tfontInfo = 45,\n\tfontLigatures = 46,\n\tfontSize = 47,\n\tfontWeight = 48,\n\tformatOnPaste = 49,\n\tformatOnType = 50,\n\tglyphMargin = 51,\n\tgotoLocation = 52,\n\thideCursorInOverviewRuler = 53,\n\thover = 54,\n\tinDiffEditor = 55,\n\tinlineSuggest = 56,\n\tletterSpacing = 57,\n\tlightbulb = 58,\n\tlineDecorationsWidth = 59,\n\tlineHeight = 60,\n\tlineNumbers = 61,\n\tlineNumbersMinChars = 62,\n\tlinkedEditing = 63,\n\tlinks = 64,\n\tmatchBrackets = 65,\n\tminimap = 66,\n\tmouseStyle = 67,\n\tmouseWheelScrollSensitivity = 68,\n\tmouseWheelZoom = 69,\n\tmultiCursorMergeOverlapping = 70,\n\tmultiCursorModifier = 71,\n\tmultiCursorPaste = 72,\n\toccurrencesHighlight = 73,\n\toverviewRulerBorder = 74,\n\toverviewRulerLanes = 75,\n\tpadding = 76,\n\tparameterHints = 77,\n\tpeekWidgetDefaultFocus = 78,\n\tdefinitionLinkOpensInPeek = 79,\n\tquickSuggestions = 80,\n\tquickSuggestionsDelay = 81,\n\treadOnly = 82,\n\trenameOnType = 83,\n\trenderControlCharacters = 84,\n\trenderFinalNewline = 85,\n\trenderLineHighlight = 86,\n\trenderLineHighlightOnlyWhenFocus = 87,\n\trenderValidationDecorations = 88,\n\trenderWhitespace = 89,\n\trevealHorizontalRightPadding = 90,\n\troundedSelection = 91,\n\trulers = 92,\n\tscrollbar = 93,\n\tscrollBeyondLastColumn = 94,\n\tscrollBeyondLastLine = 95,\n\tscrollPredominantAxis = 96,\n\tselectionClipboard = 97,\n\tselectionHighlight = 98,\n\tselectOnLineNumbers = 99,\n\tshowFoldingControls = 100,\n\tshowUnused = 101,\n\tsnippetSuggestions = 102,\n\tsmartSelect = 103,\n\tsmoothScrolling = 104,\n\tstickyScroll = 105,\n\tstickyTabStops = 106,\n\tstopRenderingLineAfter = 107,\n\tsuggest = 108,\n\tsuggestFontSize = 109,\n\tsuggestLineHeight = 110,\n\tsuggestOnTriggerCharacters = 111,\n\tsuggestSelection = 112,\n\ttabCompletion = 113,\n\ttabIndex = 114,\n\tunicodeHighlighting = 115,\n\tunusualLineTerminators = 116,\n\tuseShadowDOM = 117,\n\tuseTabStops = 118,\n\twordSeparators = 119,\n\twordWrap = 120,\n\twordWrapBreakAfterCharacters = 121,\n\twordWrapBreakBeforeCharacters = 122,\n\twordWrapColumn = 123,\n\twordWrapOverride1 = 124,\n\twordWrapOverride2 = 125,\n\twrappingIndent = 126,\n\twrappingStrategy = 127,\n\tshowDeprecated = 128,\n\tinlayHints = 129,\n\teditorClassName = 130,\n\tpixelRatio = 131,\n\ttabFocusMode = 132,\n\tlayoutInfo = 133,\n\twrappingInfo = 134\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\nexport enum InjectedTextCursorStops {\n\tBoth = 0,\n\tRight = 1,\n\tLeft = 2,\n\tNone = 3\n}\n\nexport enum InlayHintKind {\n\tType = 1,\n\tParameter = 2\n}\n\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport enum InlineCompletionTriggerKind {\n\t/**\n\t * Completion was triggered automatically while editing.\n\t * It is sufficient to return a single completion item in this case.\n\t */\n\tAutomatic = 0,\n\t/**\n\t * Completion was triggered explicitly by a user gesture.\n\t * Return multiple completion items to enable cycling through them.\n\t */\n\tExplicit = 1\n}\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\tDependsOnKbLayout = -1,\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\tDigit0 = 21,\n\tDigit1 = 22,\n\tDigit2 = 23,\n\tDigit3 = 24,\n\tDigit4 = 25,\n\tDigit5 = 26,\n\tDigit6 = 27,\n\tDigit7 = 28,\n\tDigit8 = 29,\n\tDigit9 = 30,\n\tKeyA = 31,\n\tKeyB = 32,\n\tKeyC = 33,\n\tKeyD = 34,\n\tKeyE = 35,\n\tKeyF = 36,\n\tKeyG = 37,\n\tKeyH = 38,\n\tKeyI = 39,\n\tKeyJ = 40,\n\tKeyK = 41,\n\tKeyL = 42,\n\tKeyM = 43,\n\tKeyN = 44,\n\tKeyO = 45,\n\tKeyP = 46,\n\tKeyQ = 47,\n\tKeyR = 48,\n\tKeyS = 49,\n\tKeyT = 50,\n\tKeyU = 51,\n\tKeyV = 52,\n\tKeyW = 53,\n\tKeyX = 54,\n\tKeyY = 55,\n\tKeyZ = 56,\n\tMeta = 57,\n\tContextMenu = 58,\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\tNumLock = 78,\n\tScrollLock = 79,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tSemicolon = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tEqual = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tComma = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tMinus = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tPeriod = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tSlash = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tBackquote = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tBracketLeft = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tBackslash = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tBracketRight = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tQuote = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tIntlBackslash = 92,\n\tNumpad0 = 93,\n\tNumpad1 = 94,\n\tNumpad2 = 95,\n\tNumpad3 = 96,\n\tNumpad4 = 97,\n\tNumpad5 = 98,\n\tNumpad6 = 99,\n\tNumpad7 = 100,\n\tNumpad8 = 101,\n\tNumpad9 = 102,\n\tNumpadMultiply = 103,\n\tNumpadAdd = 104,\n\tNUMPAD_SEPARATOR = 105,\n\tNumpadSubtract = 106,\n\tNumpadDecimal = 107,\n\tNumpadDivide = 108,\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\tABNT_C1 = 110,\n\tABNT_C2 = 111,\n\tAudioVolumeMute = 112,\n\tAudioVolumeUp = 113,\n\tAudioVolumeDown = 114,\n\tBrowserSearch = 115,\n\tBrowserHome = 116,\n\tBrowserBack = 117,\n\tBrowserForward = 118,\n\tMediaTrackNext = 119,\n\tMediaTrackPrevious = 120,\n\tMediaStop = 121,\n\tMediaPlayPause = 122,\n\tLaunchMediaPlayer = 123,\n\tLaunchMail = 124,\n\tLaunchApp2 = 125,\n\t/**\n\t * VK_CLEAR, 0x0C, CLEAR key\n\t */\n\tClear = 126,\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE = 127\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8\n}\n\nexport enum MarkerTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA = 1,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN = 2,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS = 3,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS = 4,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE = 5,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT = 6,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY = 7,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE = 8,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET = 9,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER = 10,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR = 11,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET = 12,\n\t/**\n\t * Mouse is outside of the editor.\n\t */\n\tOUTSIDE_EDITOR = 13\n}\n\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport enum OverlayWidgetPositionPreference {\n\t/**\n\t * Position the overlay widget in the top right corner\n\t */\n\tTOP_RIGHT_CORNER = 0,\n\t/**\n\t * Position the overlay widget in the bottom right corner\n\t */\n\tBOTTOM_RIGHT_CORNER = 1,\n\t/**\n\t * Position the overlay widget in the top center\n\t */\n\tTOP_CENTER = 2\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\nexport enum PositionAffinity {\n\t/**\n\t * Prefers the left most position.\n\t*/\n\tLeft = 0,\n\t/**\n\t * Prefers the right most position.\n\t*/\n\tRight = 1,\n\t/**\n\t * No preference.\n\t*/\n\tNone = 2,\n\t/**\n\t * If the given position is on injected text, prefers the position left of it.\n\t*/\n\tLeftOfInjectedText = 3,\n\t/**\n\t * If the given position is on injected text, prefers the position right of it.\n\t*/\n\tRightOfInjectedText = 4\n}\n\nexport enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport enum RenderMinimap {\n\tNone = 0,\n\tText = 1,\n\tBlocks = 2\n}\n\nexport enum ScrollType {\n\tSmooth = 0,\n\tImmediate = 1\n}\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR = 0,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL = 1\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3\n}\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport enum SymbolTag {\n\tDeprecated = 1\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ITokenizationRegistry, ITokenizationSupport, ITokenizationSupportChangedEvent, ITokenizationSupportFactory } from 'vs/editor/common/languages';\nimport { ColorId } from 'vs/editor/common/encodedTokenAttributes';\n\nexport class TokenizationRegistry implements ITokenizationRegistry {\n\n\tprivate readonly _map = new Map<string, ITokenizationSupport>();\n\tprivate readonly _factories = new Map<string, TokenizationSupportFactoryData>();\n\n\tprivate readonly _onDidChange = new Emitter<ITokenizationSupportChangedEvent>();\n\tpublic readonly onDidChange: Event<ITokenizationSupportChangedEvent> = this._onDidChange.event;\n\n\tprivate _colorMap: Color[] | null;\n\n\tconstructor() {\n\t\tthis._colorMap = null;\n\t}\n\n\tpublic fire(languages: string[]): void {\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: languages,\n\t\t\tchangedColorMap: false\n\t\t});\n\t}\n\n\tpublic register(language: string, support: ITokenizationSupport) {\n\t\tthis._map.set(language, support);\n\t\tthis.fire([language]);\n\t\treturn toDisposable(() => {\n\t\t\tif (this._map.get(language) !== support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._map.delete(language);\n\t\t\tthis.fire([language]);\n\t\t});\n\t}\n\n\tpublic registerFactory(languageId: string, factory: ITokenizationSupportFactory): IDisposable {\n\t\tthis._factories.get(languageId)?.dispose();\n\t\tconst myData = new TokenizationSupportFactoryData(this, languageId, factory);\n\t\tthis._factories.set(languageId, myData);\n\t\treturn toDisposable(() => {\n\t\t\tconst v = this._factories.get(languageId);\n\t\t\tif (!v || v !== myData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._factories.delete(languageId);\n\t\t\tv.dispose();\n\t\t});\n\t}\n\n\tpublic async getOrCreate(languageId: string): Promise<ITokenizationSupport | null> {\n\t\t// check first if the support is already set\n\t\tconst tokenizationSupport = this.get(languageId);\n\t\tif (tokenizationSupport) {\n\t\t\treturn tokenizationSupport;\n\t\t}\n\n\t\tconst factory = this._factories.get(languageId);\n\t\tif (!factory || factory.isResolved) {\n\t\t\t// no factory or factory.resolve already finished\n\t\t\treturn null;\n\t\t}\n\n\t\tawait factory.resolve();\n\n\t\treturn this.get(languageId);\n\t}\n\n\tpublic get(language: string): ITokenizationSupport | null {\n\t\treturn (this._map.get(language) || null);\n\t}\n\n\tpublic isResolved(languageId: string): boolean {\n\t\tconst tokenizationSupport = this.get(languageId);\n\t\tif (tokenizationSupport) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst factory = this._factories.get(languageId);\n\t\tif (!factory || factory.isResolved) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic setColorMap(colorMap: Color[]): void {\n\t\tthis._colorMap = colorMap;\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: Array.from(this._map.keys()),\n\t\t\tchangedColorMap: true\n\t\t});\n\t}\n\n\tpublic getColorMap(): Color[] | null {\n\t\treturn this._colorMap;\n\t}\n\n\tpublic getDefaultBackground(): Color | null {\n\t\tif (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n\t\t\treturn this._colorMap[ColorId.DefaultBackground];\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass TokenizationSupportFactoryData extends Disposable {\n\n\tprivate _isDisposed: boolean = false;\n\tprivate _resolvePromise: Promise<void> | null = null;\n\tprivate _isResolved: boolean = false;\n\n\tpublic get isResolved(): boolean {\n\t\treturn this._isResolved;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _registry: TokenizationRegistry,\n\t\tprivate readonly _languageId: string,\n\t\tprivate readonly _factory: ITokenizationSupportFactory,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tpublic async resolve(): Promise<void> {\n\t\tif (!this._resolvePromise) {\n\t\t\tthis._resolvePromise = this._create();\n\t\t}\n\t\treturn this._resolvePromise;\n\t}\n\n\tprivate async _create(): Promise<void> {\n\t\tconst value = await Promise.resolve(this._factory.createTokenizationSupport());\n\t\tthis._isResolved = true;\n\t\tif (value && !this._isDisposed) {\n\t\t\tthis._register(this._registry.register(this._languageId, value));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Codicon, CSSIcon } from 'vs/base/common/codicons';\nimport { Color } from 'vs/base/common/color';\nimport { VSDataTransfer } from 'vs/base/common/dataTransfer';\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { LanguageId } from 'vs/editor/common/encodedTokenAttributes';\nimport * as model from 'vs/editor/common/model';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from 'vs/editor/common/tokenizationRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\n/**\n * @internal\n */\nexport interface ILanguageIdCodec {\n\tencodeLanguageId(languageId: string): LanguageId;\n\tdecodeLanguageId(languageId: LanguageId): string;\n}\n\nexport class Token {\n\t_tokenBrand: void = undefined;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset;\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\n/**\n * @internal\n */\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void = undefined;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n\t_encodedTokenizationResultBrand: void = undefined;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\n\tgetInitialState(): IState;\n\n\ttokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult;\n\n\ttokenizeEncoded(line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult;\n}\n\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState {\n\tclone(): IState;\n\tequals(other: IState): boolean;\n}\n\n/**\n * A provider result represents the values a provider, like the {@link HoverProvider},\n * may return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\n * to that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\n * thenable.\n */\nexport type ProviderResult<T> = T | undefined | null | Thenable<T | undefined | null>;\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: IMarkdownString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange?: IRange;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface HoverProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Hover>;\n}\n\n/**\n * An evaluatable expression represents additional information for an expression in a document. Evaluatable expressions are\n * evaluated by a debugger or runtime and their result is rendered in a tooltip-like widget.\n * @internal\n */\nexport interface EvaluatableExpression {\n\t/**\n\t * The range to which this expression applies.\n\t */\n\trange: IRange;\n\t/**\n\t * This expression overrides the expression extracted from the range.\n\t */\n\texpression?: string;\n}\n\n\n/**\n * The evaluatable expression provider interface defines the contract between extensions and\n * the debug hover.\n * @internal\n */\nexport interface EvaluatableExpressionProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideEvaluatableExpression(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<EvaluatableExpression>;\n}\n\n/**\n * A value-object that contains contextual information when requesting inline values from a InlineValuesProvider.\n * @internal\n */\nexport interface InlineValueContext {\n\tframeId: number;\n\tstoppedLocation: Range;\n}\n\n/**\n * Provide inline value as text.\n * @internal\n */\nexport interface InlineValueText {\n\ttype: 'text';\n\trange: IRange;\n\ttext: string;\n}\n\n/**\n * Provide inline value through a variable lookup.\n * @internal\n */\nexport interface InlineValueVariableLookup {\n\ttype: 'variable';\n\trange: IRange;\n\tvariableName?: string;\n\tcaseSensitiveLookup: boolean;\n}\n\n/**\n * Provide inline value through an expression evaluation.\n * @internal\n */\nexport interface InlineValueExpression {\n\ttype: 'expression';\n\trange: IRange;\n\texpression?: string;\n}\n\n/**\n * Inline value information can be provided by different means:\n * - directly as a text value (class InlineValueText).\n * - as a name to use for a variable lookup (class InlineValueVariableLookup)\n * - as an evaluatable expression (class InlineValueEvaluatableExpression)\n * The InlineValue types combines all inline value types into one type.\n * @internal\n */\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueExpression;\n\n/**\n * The inline values provider interface defines the contract between extensions and\n * the debugger's inline values feature.\n * @internal\n */\nexport interface InlineValuesProvider {\n\t/**\n\t */\n\tonDidChangeInlineValues?: Event<void> | undefined;\n\t/**\n\t * Provide the \"inline values\" for the given range and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideInlineValues(model: model.ITextModel, viewPort: Range, context: InlineValueContext, token: CancellationToken): ProviderResult<InlineValue[]>;\n}\n\nexport const enum CompletionItemKind {\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tStruct,\n\tInterface,\n\tModule,\n\tProperty,\n\tEvent,\n\tOperator,\n\tUnit,\n\tValue,\n\tConstant,\n\tEnum,\n\tEnumMember,\n\tKeyword,\n\tText,\n\tColor,\n\tFile,\n\tReference,\n\tCustomcolor,\n\tFolder,\n\tTypeParameter,\n\tUser,\n\tIssue,\n\tSnippet, // <- highest value (used for compare!)\n}\n\n/**\n * @internal\n */\nexport namespace CompletionItemKinds {\n\n\tconst byKind = new Map<CompletionItemKind, CSSIcon>();\n\tbyKind.set(CompletionItemKind.Method, Codicon.symbolMethod);\n\tbyKind.set(CompletionItemKind.Function, Codicon.symbolFunction);\n\tbyKind.set(CompletionItemKind.Constructor, Codicon.symbolConstructor);\n\tbyKind.set(CompletionItemKind.Field, Codicon.symbolField);\n\tbyKind.set(CompletionItemKind.Variable, Codicon.symbolVariable);\n\tbyKind.set(CompletionItemKind.Class, Codicon.symbolClass);\n\tbyKind.set(CompletionItemKind.Struct, Codicon.symbolStruct);\n\tbyKind.set(CompletionItemKind.Interface, Codicon.symbolInterface);\n\tbyKind.set(CompletionItemKind.Module, Codicon.symbolModule);\n\tbyKind.set(CompletionItemKind.Property, Codicon.symbolProperty);\n\tbyKind.set(CompletionItemKind.Event, Codicon.symbolEvent);\n\tbyKind.set(CompletionItemKind.Operator, Codicon.symbolOperator);\n\tbyKind.set(CompletionItemKind.Unit, Codicon.symbolUnit);\n\tbyKind.set(CompletionItemKind.Value, Codicon.symbolValue);\n\tbyKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(CompletionItemKind.Constant, Codicon.symbolConstant);\n\tbyKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(CompletionItemKind.EnumMember, Codicon.symbolEnumMember);\n\tbyKind.set(CompletionItemKind.Keyword, Codicon.symbolKeyword);\n\tbyKind.set(CompletionItemKind.Snippet, Codicon.symbolSnippet);\n\tbyKind.set(CompletionItemKind.Text, Codicon.symbolText);\n\tbyKind.set(CompletionItemKind.Color, Codicon.symbolColor);\n\tbyKind.set(CompletionItemKind.File, Codicon.symbolFile);\n\tbyKind.set(CompletionItemKind.Reference, Codicon.symbolReference);\n\tbyKind.set(CompletionItemKind.Customcolor, Codicon.symbolCustomColor);\n\tbyKind.set(CompletionItemKind.Folder, Codicon.symbolFolder);\n\tbyKind.set(CompletionItemKind.TypeParameter, Codicon.symbolTypeParameter);\n\tbyKind.set(CompletionItemKind.User, Codicon.account);\n\tbyKind.set(CompletionItemKind.Issue, Codicon.issues);\n\n\t/**\n\t * @internal\n\t */\n\texport function toIcon(kind: CompletionItemKind): CSSIcon {\n\t\tlet codicon = byKind.get(kind);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for CompletionItemKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn codicon;\n\t}\n\n\tconst data = new Map<string, CompletionItemKind>();\n\tdata.set('method', CompletionItemKind.Method);\n\tdata.set('function', CompletionItemKind.Function);\n\tdata.set('constructor', <any>CompletionItemKind.Constructor);\n\tdata.set('field', CompletionItemKind.Field);\n\tdata.set('variable', CompletionItemKind.Variable);\n\tdata.set('class', CompletionItemKind.Class);\n\tdata.set('struct', CompletionItemKind.Struct);\n\tdata.set('interface', CompletionItemKind.Interface);\n\tdata.set('module', CompletionItemKind.Module);\n\tdata.set('property', CompletionItemKind.Property);\n\tdata.set('event', CompletionItemKind.Event);\n\tdata.set('operator', CompletionItemKind.Operator);\n\tdata.set('unit', CompletionItemKind.Unit);\n\tdata.set('value', CompletionItemKind.Value);\n\tdata.set('constant', CompletionItemKind.Constant);\n\tdata.set('enum', CompletionItemKind.Enum);\n\tdata.set('enum-member', CompletionItemKind.EnumMember);\n\tdata.set('enumMember', CompletionItemKind.EnumMember);\n\tdata.set('keyword', CompletionItemKind.Keyword);\n\tdata.set('snippet', CompletionItemKind.Snippet);\n\tdata.set('text', CompletionItemKind.Text);\n\tdata.set('color', CompletionItemKind.Color);\n\tdata.set('file', CompletionItemKind.File);\n\tdata.set('reference', CompletionItemKind.Reference);\n\tdata.set('customcolor', CompletionItemKind.Customcolor);\n\tdata.set('folder', CompletionItemKind.Folder);\n\tdata.set('type-parameter', CompletionItemKind.TypeParameter);\n\tdata.set('typeParameter', CompletionItemKind.TypeParameter);\n\tdata.set('account', CompletionItemKind.User);\n\tdata.set('issue', CompletionItemKind.Issue);\n\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string): CompletionItemKind;\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string, strict: true): CompletionItemKind | undefined;\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string, strict?: boolean): CompletionItemKind | undefined {\n\t\tlet res = data.get(value);\n\t\tif (typeof res === 'undefined' && !strict) {\n\t\t\tres = CompletionItemKind.Property;\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport interface CompletionItemLabel {\n\tlabel: string;\n\tdetail?: string;\n\tdescription?: string;\n}\n\nexport const enum CompletionItemTag {\n\tDeprecated = 1\n}\n\nexport const enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 0b001,\n\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 0b100,\n}\n\nexport interface CompletionItemRanges {\n\tinsert: IRange;\n\treplace: IRange;\n}\n\n/**\n * A completion item represents a text snippet that is\n * proposed to complete text that is being typed.\n */\nexport interface CompletionItem {\n\t/**\n\t * The label of this completion item. By default\n\t * this is also the text that is inserted when selecting\n\t * this completion.\n\t */\n\tlabel: string | CompletionItemLabel;\n\t/**\n\t * The kind of this completion item. Based on the kind\n\t * an icon is chosen by the editor.\n\t */\n\tkind: CompletionItemKind;\n\t/**\n\t * A modifier to the `kind` which affect how the item\n\t * is rendered, e.g. Deprecated is rendered with a strikeout\n\t */\n\ttags?: ReadonlyArray<CompletionItemTag>;\n\t/**\n\t * A human-readable string with additional information\n\t * about this item, like type or symbol information.\n\t */\n\tdetail?: string;\n\t/**\n\t * A human-readable string that represents a doc-comment.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * A string that should be used when comparing this item\n\t * with other items. When `falsy` the {@link CompletionItem.label label}\n\t * is used.\n\t */\n\tsortText?: string;\n\t/**\n\t * A string that should be used when filtering a set of\n\t * completion items. When `falsy` the {@link CompletionItem.label label}\n\t * is used.\n\t */\n\tfilterText?: string;\n\t/**\n\t * Select this item when showing. *Note* that only one completion item can be selected and\n\t * that the editor decides which item that is. The rule is that the *first* item of those\n\t * that match best is selected.\n\t */\n\tpreselect?: boolean;\n\t/**\n\t * A string or snippet that should be inserted in a document when selecting\n\t * this completion.\n\t */\n\tinsertText: string;\n\t/**\n\t * Additional rules (as bitmask) that should be applied when inserting\n\t * this completion.\n\t */\n\tinsertTextRules?: CompletionItemInsertTextRule;\n\t/**\n\t * A range of text that should be replaced by this completion item.\n\t *\n\t * Defaults to a range from the start of the {@link TextDocument.getWordRangeAtPosition current word} to the\n\t * current position.\n\t *\n\t * *Note:* The range must be a {@link Range.isSingleLine single line} and it must\n\t * {@link Range.contains contain} the position at which completion has been {@link CompletionItemProvider.provideCompletionItems requested}.\n\t */\n\trange: IRange | CompletionItemRanges;\n\t/**\n\t * An optional set of characters that when pressed while this completion is active will accept it first and\n\t * then type that character. *Note* that all commit characters should have `length=1` and that superfluous\n\t * characters will be ignored.\n\t */\n\tcommitCharacters?: string[];\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\tadditionalTextEdits?: ISingleEditOperation[];\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\tcommand?: Command;\n\t/**\n\t * @internal\n\t */\n\textensionId?: ExtensionIdentifier;\n\n\t/**\n\t * @internal\n\t */\n\t_id?: [number, number];\n}\n\nexport interface CompletionList {\n\tsuggestions: CompletionItem[];\n\tincomplete?: boolean;\n\tdispose?(): void;\n\n\t/**\n\t * @internal\n\t */\n\tduration?: number;\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport const enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n/**\n * Contains additional information about the context in which\n * {@link CompletionItemProvider.provideCompletionItems completion provider} is triggered.\n */\nexport interface CompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\ttriggerKind: CompletionTriggerKind;\n\t/**\n\t * Character that triggered the completion item provider.\n\t *\n\t * `undefined` if provider was not triggered by a character.\n\t */\n\ttriggerCharacter?: string;\n}\n/**\n * The completion item provider interface defines the contract between extensions and\n * the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).\n *\n * When computing *complete* completion items is expensive, providers can optionally implement\n * the `resolveCompletionItem`-function. In that case it is enough to return completion\n * items with a {@link CompletionItem.label label} from the\n * {@link CompletionItemProvider.provideCompletionItems provideCompletionItems}-function. Subsequently,\n * when a completion item is shown in the UI and gains focus this provider is asked to resolve\n * the item, like adding {@link CompletionItem.documentation doc-comment} or {@link CompletionItem.detail details}.\n */\nexport interface CompletionItemProvider {\n\n\t/**\n\t * @internal\n\t */\n\t_debugDisplayName?: string;\n\n\ttriggerCharacters?: string[];\n\t/**\n\t * Provide completion items for the given position and document.\n\t */\n\tprovideCompletionItems(model: model.ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList>;\n\n\t/**\n\t * Given a completion item fill in more data, like {@link CompletionItem.documentation doc-comment}\n\t * or {@link CompletionItem.detail details}.\n\t *\n\t * The editor will only resolve a completion item once.\n\t */\n\tresolveCompletionItem?(item: CompletionItem, token: CancellationToken): ProviderResult<CompletionItem>;\n}\n\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport enum InlineCompletionTriggerKind {\n\t/**\n\t * Completion was triggered automatically while editing.\n\t * It is sufficient to return a single completion item in this case.\n\t */\n\tAutomatic = 0,\n\n\t/**\n\t * Completion was triggered explicitly by a user gesture.\n\t * Return multiple completion items to enable cycling through them.\n\t */\n\tExplicit = 1,\n}\n\nexport interface InlineCompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\treadonly triggerKind: InlineCompletionTriggerKind;\n\n\treadonly selectedSuggestionInfo: SelectedSuggestionInfo | undefined;\n}\n\nexport interface SelectedSuggestionInfo {\n\trange: IRange;\n\ttext: string;\n\tisSnippetText: boolean;\n\tcompletionKind: CompletionItemKind;\n}\n\nexport interface InlineCompletion {\n\t/**\n\t * The text to insert.\n\t * If the text contains a line break, the range must end at the end of a line.\n\t * If existing text should be replaced, the existing text must be a prefix of the text to insert.\n\t *\n\t * The text can also be a snippet. In that case, a preview with default parameters is shown.\n\t * When accepting the suggestion, the full snippet is inserted.\n\t*/\n\treadonly insertText: string | { snippet: string };\n\n\t/**\n\t * A text that is used to decide if this inline completion should be shown.\n\t * An inline completion is shown if the text to replace is a subword of the filter text.\n\t */\n\treadonly filterText?: string;\n\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\treadonly additionalTextEdits?: ISingleEditOperation[];\n\n\t/**\n\t * The range to replace.\n\t * Must begin and end on the same line.\n\t*/\n\treadonly range?: IRange;\n\n\treadonly command?: Command;\n\n\t/**\n\t * If set to `true`, unopened closing brackets are removed and unclosed opening brackets are closed.\n\t * Defaults to `false`.\n\t*/\n\treadonly completeBracketPairs?: boolean;\n}\n\nexport interface InlineCompletions<TItem extends InlineCompletion = InlineCompletion> {\n\treadonly items: readonly TItem[];\n\t/**\n\t * A list of commands associated with the inline completions of this list.\n\t */\n\treadonly commands?: Command[];\n}\n\nexport interface InlineCompletionsProvider<T extends InlineCompletions = InlineCompletions> {\n\tprovideInlineCompletions(model: model.ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken): ProviderResult<T>;\n\n\t/**\n\t * Will be called when an item is shown.\n\t*/\n\thandleItemDidShow?(completions: T, item: T['items'][number]): void;\n\n\t/**\n\t * Will be called when a completions list is no longer in use and can be garbage-collected.\n\t*/\n\tfreeInlineCompletions(completions: T): void;\n}\n\nexport interface CodeAction {\n\ttitle: string;\n\tcommand?: Command;\n\tedit?: WorkspaceEdit;\n\tdiagnostics?: IMarkerData[];\n\tkind?: string;\n\tisPreferred?: boolean;\n\tdisabled?: string;\n}\n\nexport const enum CodeActionTriggerType {\n\tInvoke = 1,\n\tAuto = 2,\n}\n\n/**\n * @internal\n */\nexport interface CodeActionContext {\n\tonly?: string;\n\ttrigger: CodeActionTriggerType;\n}\n\nexport interface CodeActionList extends IDisposable {\n\treadonly actions: ReadonlyArray<CodeAction>;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range | Selection, context: CodeActionContext, token: CancellationToken): ProviderResult<CodeActionList>;\n\n\t/**\n\t * Given a code action fill in the edit. Will only invoked when missing.\n\t */\n\tresolveCodeAction?(codeAction: CodeAction, token: CancellationToken): ProviderResult<CodeAction>;\n\n\t/**\n\t * Optional list of CodeActionKinds that this provider returns.\n\t */\n\treadonly providedCodeActionKinds?: ReadonlyArray<string>;\n\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string; readonly command: Command }>;\n\n\t/**\n\t * @internal\n\t */\n\t_getAdditionalMenuItems?(context: CodeActionContext, actions: readonly CodeAction[]): Command[];\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEdit {\n\tinsertText: string | { snippet: string };\n\tadditionalEdit?: WorkspaceEdit;\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEditProvider {\n\n\treadonly pasteMimeTypes: readonly string[];\n\n\tprepareDocumentPaste?(model: model.ITextModel, ranges: readonly IRange[], dataTransfer: VSDataTransfer, token: CancellationToken): Promise<undefined | VSDataTransfer>;\n\n\tprovideDocumentPasteEdits(model: model.ITextModel, ranges: readonly IRange[], dataTransfer: VSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined>;\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string | [number, number];\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n\t/**\n\t * Index of the active parameter.\n\t *\n\t * If provided, this is used in place of `SignatureHelp.activeSignature`.\n\t */\n\tactiveParameter?: number;\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n\nexport interface SignatureHelpResult extends IDisposable {\n\tvalue: SignatureHelp;\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport interface SignatureHelpContext {\n\treadonly triggerKind: SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: SignatureHelp;\n}\n\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\treadonly signatureHelpTriggerCharacters?: ReadonlyArray<string>;\n\treadonly signatureHelpRetriggerCharacters?: ReadonlyArray<string>;\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: model.ITextModel, position: Position, token: CancellationToken, context: SignatureHelpContext): ProviderResult<SignatureHelpResult>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: IRange;\n\t/**\n\t * The highlight kind, default is {@link DocumentHighlightKind.Text text}.\n\t */\n\tkind?: DocumentHighlightKind;\n}\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]>;\n}\n\n/**\n * The linked editing range provider interface defines the contract between extensions and\n * the linked editing feature.\n */\nexport interface LinkedEditingRangeProvider {\n\n\t/**\n\t * Provide a list of ranges that can be edited together.\n\t */\n\tprovideLinkedEditingRanges(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<LinkedEditingRanges>;\n}\n\n/**\n * Represents a list of ranges that can be edited together along with a word pattern to describe valid contents.\n */\nexport interface LinkedEditingRanges {\n\t/**\n\t * A list of ranges that can be edited together. The ranges must have\n\t * identical length and text content. The ranges cannot overlap\n\t */\n\tranges: IRange[];\n\n\t/**\n\t * An optional word pattern that describes valid contents for the given ranges.\n\t * If no pattern is provided, the language configuration's word pattern will be used.\n\t */\n\twordPattern?: RegExp;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model: model.ITextModel, position: Position, context: ReferenceContext, token: CancellationToken): ProviderResult<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: IRange;\n}\n\nexport interface LocationLink {\n\t/**\n\t * A range to select where this link originates from.\n\t */\n\toriginSelectionRange?: IRange;\n\n\t/**\n\t * The target uri this link points to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The full range this link points to.\n\t */\n\trange: IRange;\n\n\t/**\n\t * A range to select this link points to. Must be contained\n\t * in `LocationLink.range`.\n\t */\n\ttargetSelectionRange?: IRange;\n}\n\n/**\n * @internal\n */\nexport function isLocationLink(thing: any): thing is LocationLink {\n\treturn thing\n\t\t&& URI.isUri((thing as LocationLink).uri)\n\t\t&& Range.isIRange((thing as LocationLink).range)\n\t\t&& (Range.isIRange((thing as LocationLink).originSelectionRange) || Range.isIRange((thing as LocationLink).targetSelectionRange));\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DeclarationProvider {\n\t/**\n\t * Provide the declaration of the symbol at the given position and document.\n\t */\n\tprovideDeclaration(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The implementation provider interface defines the contract between extensions and\n * the go to implementation feature.\n */\nexport interface ImplementationProvider {\n\t/**\n\t * Provide the implementation of the symbol at the given position and document.\n\t */\n\tprovideImplementation(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The type definition provider interface defines the contract between extensions and\n * the go to type definition feature.\n */\nexport interface TypeDefinitionProvider {\n\t/**\n\t * Provide the type definition of the symbol at the given position and document.\n\t */\n\tprovideTypeDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * A symbol kind.\n */\nexport const enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport const enum SymbolTag {\n\tDeprecated = 1,\n}\n\n/**\n * @internal\n */\nexport namespace SymbolKinds {\n\n\tconst byKind = new Map<SymbolKind, CSSIcon>();\n\tbyKind.set(SymbolKind.File, Codicon.symbolFile);\n\tbyKind.set(SymbolKind.Module, Codicon.symbolModule);\n\tbyKind.set(SymbolKind.Namespace, Codicon.symbolNamespace);\n\tbyKind.set(SymbolKind.Package, Codicon.symbolPackage);\n\tbyKind.set(SymbolKind.Class, Codicon.symbolClass);\n\tbyKind.set(SymbolKind.Method, Codicon.symbolMethod);\n\tbyKind.set(SymbolKind.Property, Codicon.symbolProperty);\n\tbyKind.set(SymbolKind.Field, Codicon.symbolField);\n\tbyKind.set(SymbolKind.Constructor, Codicon.symbolConstructor);\n\tbyKind.set(SymbolKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(SymbolKind.Interface, Codicon.symbolInterface);\n\tbyKind.set(SymbolKind.Function, Codicon.symbolFunction);\n\tbyKind.set(SymbolKind.Variable, Codicon.symbolVariable);\n\tbyKind.set(SymbolKind.Constant, Codicon.symbolConstant);\n\tbyKind.set(SymbolKind.String, Codicon.symbolString);\n\tbyKind.set(SymbolKind.Number, Codicon.symbolNumber);\n\tbyKind.set(SymbolKind.Boolean, Codicon.symbolBoolean);\n\tbyKind.set(SymbolKind.Array, Codicon.symbolArray);\n\tbyKind.set(SymbolKind.Object, Codicon.symbolObject);\n\tbyKind.set(SymbolKind.Key, Codicon.symbolKey);\n\tbyKind.set(SymbolKind.Null, Codicon.symbolNull);\n\tbyKind.set(SymbolKind.EnumMember, Codicon.symbolEnumMember);\n\tbyKind.set(SymbolKind.Struct, Codicon.symbolStruct);\n\tbyKind.set(SymbolKind.Event, Codicon.symbolEvent);\n\tbyKind.set(SymbolKind.Operator, Codicon.symbolOperator);\n\tbyKind.set(SymbolKind.TypeParameter, Codicon.symbolTypeParameter);\n\t/**\n\t * @internal\n\t */\n\texport function toIcon(kind: SymbolKind): CSSIcon {\n\t\tlet icon = byKind.get(kind);\n\t\tif (!icon) {\n\t\t\tconsole.info('No codicon found for SymbolKind ' + kind);\n\t\t\ticon = Codicon.symbolProperty;\n\t\t}\n\t\treturn icon;\n\t}\n}\n\nexport interface DocumentSymbol {\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags: ReadonlyArray<SymbolTag>;\n\tcontainerName?: string;\n\trange: IRange;\n\tselectionRange: IRange;\n\tchildren?: DocumentSymbol[];\n}\n\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model: model.ITextModel, token: CancellationToken): ProviderResult<DocumentSymbol[]>;\n}\n\nexport interface TextEdit {\n\trange: IRange;\n\ttext: string;\n\teol?: model.EndOfLineSequence;\n}\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize: number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces: boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: model.ITextModel, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: model.ITextModel, range: Range, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\tautoFormatTriggerCharacters: string[];\n\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: model.ITextModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange: IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: IRange;\n\turl?: URI | string;\n\ttooltip?: string;\n}\n\nexport interface ILinksList {\n\tlinks: ILink[];\n\tdispose?(): void;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: model.ITextModel, token: CancellationToken): ProviderResult<ILinksList>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ProviderResult<ILink>;\n}\n\n/**\n * A color in RGBA format.\n */\nexport interface IColor {\n\n\t/**\n\t * The red component in the range [0-1].\n\t */\n\treadonly red: number;\n\n\t/**\n\t * The green component in the range [0-1].\n\t */\n\treadonly green: number;\n\n\t/**\n\t * The blue component in the range [0-1].\n\t */\n\treadonly blue: number;\n\n\t/**\n\t * The alpha component in the range [0-1].\n\t */\n\treadonly alpha: number;\n}\n\n/**\n * String representations for a color\n */\nexport interface IColorPresentation {\n\t/**\n\t * The label of this color presentation. It will be shown on the color\n\t * picker header. By default this is also the text that is inserted when selecting\n\t * this color presentation.\n\t */\n\tlabel: string;\n\t/**\n\t * An {@link TextEdit edit} which is applied to a document when selecting\n\t * this presentation for the color.\n\t */\n\ttextEdit?: TextEdit;\n\t/**\n\t * An optional array of additional {@link TextEdit text edits} that are applied when\n\t * selecting this color presentation.\n\t */\n\tadditionalTextEdits?: TextEdit[];\n}\n\n/**\n * A color range is a range in a text model which represents a color.\n */\nexport interface IColorInformation {\n\n\t/**\n\t * The range within the model.\n\t */\n\trange: IRange;\n\n\t/**\n\t * The color represented in this range.\n\t */\n\tcolor: IColor;\n}\n\n/**\n * A provider of colors for editor models.\n */\nexport interface DocumentColorProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideDocumentColors(model: model.ITextModel, token: CancellationToken): ProviderResult<IColorInformation[]>;\n\t/**\n\t * Provide the string representations for a color.\n\t */\n\tprovideColorPresentations(model: model.ITextModel, colorInfo: IColorInformation, token: CancellationToken): ProviderResult<IColorPresentation[]>;\n}\n\nexport interface SelectionRange {\n\trange: IRange;\n}\n\nexport interface SelectionRangeProvider {\n\t/**\n\t * Provide ranges that should be selected from the given position.\n\t */\n\tprovideSelectionRanges(model: model.ITextModel, positions: Position[], token: CancellationToken): ProviderResult<SelectionRange[][]>;\n}\n\nexport interface FoldingContext {\n}\n/**\n * A provider of folding ranges for editor models.\n */\nexport interface FoldingRangeProvider {\n\n\t/**\n\t * An optional event to signal that the folding ranges from this provider have changed.\n\t */\n\tonDidChange?: Event<this>;\n\n\t/**\n\t * Provides the folding ranges for a specific model.\n\t */\n\tprovideFoldingRanges(model: model.ITextModel, context: FoldingContext, token: CancellationToken): ProviderResult<FoldingRange[]>;\n}\n\nexport interface FoldingRange {\n\n\t/**\n\t * The one-based start line of the range to fold. The folded area starts after the line's last character.\n\t */\n\tstart: number;\n\n\t/**\n\t * The one-based end line of the range to fold. The folded area ends with the line's last character.\n\t */\n\tend: number;\n\n\t/**\n\t * Describes the {@link FoldingRangeKind Kind} of the folding range such as {@link FoldingRangeKind.Comment Comment} or\n\t * {@link FoldingRangeKind.Region Region}. The kind is used to categorize folding ranges and used by commands\n\t * like 'Fold all comments'. See\n\t * {@link FoldingRangeKind} for an enumeration of standardized kinds.\n\t */\n\tkind?: FoldingRangeKind;\n}\nexport class FoldingRangeKind {\n\t/**\n\t * Kind for folding range representing a comment. The value of the kind is 'comment'.\n\t */\n\tstatic readonly Comment = new FoldingRangeKind('comment');\n\t/**\n\t * Kind for folding range representing a import. The value of the kind is 'imports'.\n\t */\n\tstatic readonly Imports = new FoldingRangeKind('imports');\n\t/**\n\t * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n\t * The value of the kind is 'region'.\n\t */\n\tstatic readonly Region = new FoldingRangeKind('region');\n\n\t/**\n\t * Creates a new {@link FoldingRangeKind}.\n\t *\n\t * @param value of the kind.\n\t */\n\tpublic constructor(public value: string) {\n\t}\n}\n\n\nexport interface WorkspaceEditMetadata {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\t/**\n\t * @internal\n\t */\n\ticonPath?: ThemeIcon | URI | { light: URI; dark: URI };\n}\n\nexport interface WorkspaceFileEditOptions {\n\toverwrite?: boolean;\n\tignoreIfNotExists?: boolean;\n\tignoreIfExists?: boolean;\n\trecursive?: boolean;\n\tcopy?: boolean;\n\tfolder?: boolean;\n\tskipTrashBin?: boolean;\n\tmaxSize?: number;\n\tcontentsBase64?: string;\n}\n\nexport interface IWorkspaceFileEdit {\n\toldResource?: URI;\n\tnewResource?: URI;\n\toptions?: WorkspaceFileEditOptions;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface IWorkspaceTextEdit {\n\tresource: URI;\n\ttextEdit: TextEdit & { insertAsSnippet?: boolean };\n\tversionId: number | undefined;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n\tedits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit>;\n}\n\nexport interface Rejection {\n\trejectReason?: string;\n}\nexport interface RenameLocation {\n\trange: IRange;\n\ttext: string;\n}\n\nexport interface RenameProvider {\n\tprovideRenameEdits(model: model.ITextModel, position: Position, newName: string, token: CancellationToken): ProviderResult<WorkspaceEdit & Rejection>;\n\tresolveRenameLocation?(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<RenameLocation & Rejection>;\n}\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\ttooltip?: string;\n\targuments?: any[];\n}\n\n/**\n * @internal\n */\nexport namespace Command {\n\n\t/**\n\t * @internal\n\t */\n\texport function is(obj: any): obj is Command {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<Command>obj).id === 'string' &&\n\t\t\ttypeof (<Command>obj).title === 'string';\n\t}\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadTemplate {\n\tcontrollerHandle: number;\n\tlabel: string;\n\tacceptInputCommand?: Command;\n\tadditionalCommands?: Command[];\n\tdeleteCommand?: Command;\n}\n\n/**\n * @internal\n */\nexport interface CommentInfo {\n\textensionId?: string;\n\tthreads: CommentThread[];\n\tcommentingRanges: CommentingRanges;\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadState {\n\tUnresolved = 0,\n\tResolved = 1\n}\n\n/**\n * @internal\n */\nexport interface CommentWidget {\n\tcommentThread: CommentThread;\n\tcomment?: Comment;\n\tinput: string;\n\tonDidChangeInput: Event<string>;\n}\n\n/**\n * @internal\n */\nexport interface CommentInput {\n\tvalue: string;\n\turi: URI;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread<T = IRange> {\n\tisDocumentCommentThread(): this is CommentThread<IRange>;\n\tcommentThreadHandle: number;\n\tcontrollerHandle: number;\n\textensionId?: string;\n\tthreadId: string;\n\tresource: string | null;\n\trange: T;\n\tlabel: string | undefined;\n\tcontextValue: string | undefined;\n\tcomments: Comment[] | undefined;\n\tonDidChangeComments: Event<Comment[] | undefined>;\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\tinitialCollapsibleState?: CommentThreadCollapsibleState;\n\tonDidChangeInitialCollapsibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tstate?: CommentThreadState;\n\tcanReply: boolean;\n\tinput?: CommentInput;\n\tonDidChangeInput: Event<CommentInput | undefined>;\n\tonDidChangeRange: Event<T>;\n\tonDidChangeLabel: Event<string | undefined>;\n\tonDidChangeCollapsibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tonDidChangeState: Event<CommentThreadState | undefined>;\n\tonDidChangeCanReply: Event<boolean>;\n\tisDisposed: boolean;\n\tisTemplate: boolean;\n}\n\n/**\n * @internal\n */\n\nexport interface CommentingRanges {\n\treadonly resource: URI;\n\tranges: IRange[];\n}\n\n/**\n * @internal\n */\nexport interface CommentReaction {\n\treadonly label?: string;\n\treadonly iconPath?: UriComponents;\n\treadonly count?: number;\n\treadonly hasReacted?: boolean;\n\treadonly canEdit?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CommentOptions {\n\t/**\n\t * An optional string to show on the comment input box when it's collapsed.\n\t */\n\tprompt?: string;\n\n\t/**\n\t * An optional string to show as placeholder in the comment input box when it's focused.\n\t */\n\tplaceHolder?: string;\n}\n\n/**\n * @internal\n */\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\n/**\n * @internal\n */\nexport interface Comment {\n\treadonly uniqueIdInThread: number;\n\treadonly body: string | IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: string;\n\treadonly contextValue?: string;\n\treadonly commentReactions?: CommentReaction[];\n\treadonly label?: string;\n\treadonly mode?: CommentMode;\n\treadonly timestamp?: string;\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadChangedEvent<T> {\n\t/**\n\t * Added comment threads.\n\t */\n\treadonly added: CommentThread<T>[];\n\n\t/**\n\t * Removed comment threads.\n\t */\n\treadonly removed: CommentThread<T>[];\n\n\t/**\n\t * Changed comment threads.\n\t */\n\treadonly changed: CommentThread<T>[];\n}\n\nexport interface CodeLens {\n\trange: IRange;\n\tid?: string;\n\tcommand?: Command;\n}\n\nexport interface CodeLensList {\n\tlenses: CodeLens[];\n\tdispose(): void;\n}\n\nexport interface CodeLensProvider {\n\tonDidChange?: Event<this>;\n\tprovideCodeLenses(model: model.ITextModel, token: CancellationToken): ProviderResult<CodeLensList>;\n\tresolveCodeLens?(model: model.ITextModel, codeLens: CodeLens, token: CancellationToken): ProviderResult<CodeLens>;\n}\n\n\nexport enum InlayHintKind {\n\tType = 1,\n\tParameter = 2,\n}\n\nexport interface InlayHintLabelPart {\n\tlabel: string;\n\ttooltip?: string | IMarkdownString;\n\t// collapsible?: boolean;\n\tcommand?: Command;\n\tlocation?: Location;\n}\n\nexport interface InlayHint {\n\tlabel: string | InlayHintLabelPart[];\n\ttooltip?: string | IMarkdownString;\n\ttextEdits?: TextEdit[];\n\tposition: IPosition;\n\tkind?: InlayHintKind;\n\tpaddingLeft?: boolean;\n\tpaddingRight?: boolean;\n}\n\nexport interface InlayHintList {\n\thints: InlayHint[];\n\tdispose(): void;\n}\n\nexport interface InlayHintsProvider {\n\tdisplayName?: string;\n\tonDidChangeInlayHints?: Event<void>;\n\tprovideInlayHints(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<InlayHintList>;\n\tresolveInlayHint?(hint: InlayHint, token: CancellationToken): ProviderResult<InlayHint>;\n}\n\nexport interface SemanticTokensLegend {\n\treadonly tokenTypes: string[];\n\treadonly tokenModifiers: string[];\n}\n\nexport interface SemanticTokens {\n\treadonly resultId?: string;\n\treadonly data: Uint32Array;\n}\n\nexport interface SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data?: Uint32Array;\n}\n\nexport interface SemanticTokensEdits {\n\treadonly resultId?: string;\n\treadonly edits: SemanticTokensEdit[];\n}\n\nexport interface DocumentSemanticTokensProvider {\n\tonDidChange?: Event<void>;\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentSemanticTokens(model: model.ITextModel, lastResultId: string | null, token: CancellationToken): ProviderResult<SemanticTokens | SemanticTokensEdits>;\n\treleaseDocumentSemanticTokens(resultId: string | undefined): void;\n}\n\nexport interface DocumentRangeSemanticTokensProvider {\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentRangeSemanticTokens(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<SemanticTokens>;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportChangedEvent {\n\tchangedLanguages: string[];\n\tchangedColorMap: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportFactory {\n\tcreateTokenizationSupport(): ProviderResult<ITokenizationSupport>;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationRegistry {\n\n\t/**\n\t * An event triggered when:\n\t *  - a tokenization support is registered, unregistered or changed.\n\t *  - the color map is changed.\n\t */\n\tonDidChange: Event<ITokenizationSupportChangedEvent>;\n\n\t/**\n\t * Fire a change event for a language.\n\t * This is useful for languages that embed other languages.\n\t */\n\tfire(languageIds: string[]): void;\n\n\t/**\n\t * Register a tokenization support.\n\t */\n\tregister(languageId: string, support: ITokenizationSupport): IDisposable;\n\n\t/**\n\t * Register a tokenization support factory.\n\t */\n\tregisterFactory(languageId: string, factory: ITokenizationSupportFactory): IDisposable;\n\n\t/**\n\t * Get or create the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tgetOrCreate(languageId: string): Promise<ITokenizationSupport | null>;\n\n\t/**\n\t * Get the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tget(languageId: string): ITokenizationSupport | null;\n\n\t/**\n\t * Returns false if a factory is still pending.\n\t */\n\tisResolved(languageId: string): boolean;\n\n\t/**\n\t * Set the new color map that all tokens will use in their ColorId binary encoded bits for foreground and background.\n\t */\n\tsetColorMap(colorMap: Color[]): void;\n\n\tgetColorMap(): Color[] | null;\n\n\tgetDefaultBackground(): Color | null;\n}\n\n/**\n * @internal\n */\nexport const TokenizationRegistry: ITokenizationRegistry = new TokenizationRegistryImpl();\n\n\n/**\n * @internal\n */\nexport enum ExternalUriOpenerPriority {\n\tNone = 0,\n\tOption = 1,\n\tDefault = 2,\n\tPreferred = 3,\n}\n\n/**\n * @internal\n */\nexport interface DocumentOnDropEdit {\n\tinsertText: string | { snippet: string };\n\tadditionalEdit?: WorkspaceEdit;\n}\n\n/**\n * @internal\n */\nexport interface DocumentOnDropEditProvider {\n\tprovideDocumentOnDropEdits(model: model.ITextModel, position: IPosition, dataTransfer: VSDataTransfer, token: CancellationToken): ProviderResult<DocumentOnDropEdit>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/languages';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { EndOfLineSequence, ITextModel } from 'vs/editor/common/model';\nimport { IMirrorTextModel, IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText, IWordAtPosition } from 'vs/editor/common/core/wordHelper';\nimport { IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/languages';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/languages/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/languages/supports/inplaceReplaceSupport';\nimport { IDiffComputationResult, IUnicodeHighlightsResult } from 'vs/editor/common/services/editorWorker';\nimport { createMonacoBaseAPI } from 'vs/editor/common/services/editorBaseApi';\nimport { IEditorWorkerHost } from 'vs/editor/common/services/editorWorkerHost';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { UnicodeTextModelHighlighter, UnicodeHighlighterOptions } from 'vs/editor/common/services/unicodeTextModelHighlighter';\nimport { DiffComputer, IChange } from 'vs/editor/common/diff/smartLinesDiffComputer';\nimport { ILinesDiffComputer } from 'vs/editor/common/diff/linesDiffComputer';\nimport { linesDiffComputers } from 'vs/editor/common/diff/linesDiffComputers';\nimport { createProxyObject, getAllMethodNames } from 'vs/base/common/objects';\nimport { IDocumentDiffProviderOptions } from 'vs/editor/common/diff/documentDiffProvider';\n\nexport interface IMirrorModel extends IMirrorTextModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = undefined> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\n\turi: URI;\n\tversion: number;\n\teol: string;\n\tgetValue(): string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\twords(wordDefinition: RegExp): Iterable<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\nexport interface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nexport class MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\n\n\t\tconst lines = this._lines;\n\t\tconst wordenize = this._wordenize.bind(this);\n\n\t\tlet lineNumber = 0;\n\t\tlet lineText = '';\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\n\t\treturn {\n\t\t\t*[Symbol.iterator]() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\t\t\twordRangesIdx += 1;\n\t\t\t\t\t\tyield value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lineNumber < lines.length) {\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\n\t\t\t\t\t\t\twordRangesIdx = 0;\n\t\t\t\t\t\t\tlineNumber += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tconst content = this._lines[lineNumber - 1];\n\t\tconst ranges = this._wordenize(content, wordDefinition);\n\t\tconst words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tconst lineEnding = this._eol;\n\t\tconst startLineIndex = range.startLineNumber - 1;\n\t\tconst endLineIndex = range.endLineNumber - 1;\n\t\tconst resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tconst maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare const require: any;\n\n/**\n * @internal\n */\nexport class EditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprotected readonly _host: IEditorWorkerHost;\n\tprivate _models: { [uri: string]: MirrorModel };\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(host: IEditorWorkerHost, foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._host = host;\n\t\tthis._models = Object.create(null);\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprivate _getModels(): ICommonModel[] {\n\t\tconst all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tpublic async computeUnicodeHighlights(url: string, options: UnicodeHighlighterOptions, range?: IRange): Promise<IUnicodeHighlightsResult> {\n\t\tconst model = this._getModel(url);\n\t\tif (!model) {\n\t\t\treturn { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n\t\t}\n\t\treturn UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic async computeDiff(originalUrl: string, modifiedUrl: string, options: IDocumentDiffProviderOptions): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn EditorSimpleWorker.computeDiff(original, modified, options);\n\t}\n\n\tprivate static computeDiff(originalTextModel: ICommonModel | ITextModel, modifiedTextModel: ICommonModel | ITextModel, options: IDocumentDiffProviderOptions): IDiffComputationResult {\n\t\tconst diffAlgorithm: ILinesDiffComputer = options.diffAlgorithm === 'experimental' ? linesDiffComputers.experimental : linesDiffComputers.smart;\n\n\t\tconst originalLines = originalTextModel.getLinesContent();\n\t\tconst modifiedLines = modifiedTextModel.getLinesContent();\n\n\t\tconst result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n\n\t\tconst identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n\n\t\treturn {\n\t\t\tidentical,\n\t\t\tquitEarly: result.quitEarly,\n\t\t\tchanges: result.changes.map(m => ([m.originalRange.startLineNumber, m.originalRange.endLineNumberExclusive, m.modifiedRange.startLineNumber, m.modifiedRange.endLineNumberExclusive, m.innerChanges?.map(m => [\n\t\t\t\tm.originalRange.startLineNumber,\n\t\t\t\tm.originalRange.startColumn,\n\t\t\t\tm.originalRange.endLineNumber,\n\t\t\t\tm.originalRange.endColumn,\n\t\t\t\tm.modifiedRange.startLineNumber,\n\t\t\t\tm.modifiedRange.startColumn,\n\t\t\t\tm.modifiedRange.endLineNumber,\n\t\t\t\tm.modifiedRange.endColumn,\n\t\t\t])]))\n\t\t};\n\t}\n\n\tprivate static _modelsAreIdentical(original: ICommonModel | ITextModel, modified: ICommonModel | ITextModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic async computeDirtyDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<IChange[] | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: false,\n\t\t\tshouldPostProcessCharChanges: false,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true,\n\t\t\tmaxComputationTime: 1000\n\t\t});\n\t\treturn diffComputer.computeDiff().changes;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic async computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = edits.slice(0).sort((a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tconst aRng = a.range ? 0 : 1;\n\t\t\tconst bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, false);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic async computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn computeLinks(model);\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic async textualSuggest(modelUrls: string[], leadingWord: string | undefined, wordDef: string, wordDefFlags: string): Promise<{ words: string[]; duration: number } | null> {\n\n\t\tconst sw = new StopWatch(true);\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst seen = new Set<string>();\n\n\t\touter: for (const url of modelUrls) {\n\t\t\tconst model = this._getModel(url);\n\t\t\tif (!model) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const word of model.words(wordDefRegExp)) {\n\t\t\t\tif (word === leadingWord || !isNaN(Number(word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.add(word);\n\t\t\t\tif (seen.size > EditorSimpleWorker._suggestionsLimit) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { words: Array.from(seen), duration: sw.elapsed() };\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tpublic async computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Object.create(null);\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tconst words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\tpublic async navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tconst selectionText = model.getValueInRange(range);\n\n\t\tconst wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn null;\n\t\t}\n\t\tconst word = model.getValueInRange(wordRange);\n\t\tconst result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn result;\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any, foreignHostMethods: string[]): Promise<string[]> {\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._host.fhr(method, args);\n\t\t};\n\n\t\tconst foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n\n\t\tconst ctx: IWorkerContext<any> = {\n\t\t\thost: foreignHost,\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\treturn Promise.resolve(getAllMethodNames(this._foreignModule));\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tresolve(getAllMethodNames(this._foreignModule));\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: IEditorWorkerHost): IRequestHandler {\n\treturn new EditorSimpleWorker(host, null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobals.monaco = createMonacoBaseAPI();\n}\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","_amdLoaderGlobal","Environment","AMDLoader","LoaderEvent","type","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","NullLoaderEventRecorder","isWindows","uri","MonacoEnvironment","monacoBaseUrl","trustedTypesPolicy","value","_","args","fnArgs","fnBody","canUseEval","loadAMDLoader","resolve","reject","loaderSrc","response","text","configureAMDLoader","loadCode","moduleId","ws","messageHandler","msg","transfer","e","beforeReadyMessages","isFirstMessage","message","getCodiconAriaLabel","_match","codiconName","exports","Codicon","id","definition","description","getClassNamesArray","modifier","classNames","CSSIcon","cssIconIdRegex","asClassNameArray","icon","match","asClassName","asCSSSelector","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","ErrorHandler","ErrorNoTelemetry","listener","newUnexpectedErrorHandler","setUnexpectedErrorHandler","onUnexpectedError","isCancellationError","onUnexpectedExternalError","transformErrorForSerialization","error","name","stack","canceledName","CancellationError","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","NotImplementedError","NotSupportedError","ExpectedError","BugIndicatingError","tail","array","n","tail2","arr","equals","one","other","itemEquals","a","b","removeFastWithoutKeepingOrder","index","last","binarySearch","key","comparator","binarySearch2","length","compareToKey","low","high","mid","comp","findFirstInSorted","p","quickSelect","nth","data","compare","pivotValue","lower","higher","pivots","val","groupBy","currentGroup","element","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","delta","splices","removed","added","splice","top","topStep","topAsync","batch","token","o","m","errors_1","j","coalesce","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","isNonEmptyArray","distinct","keyFn","seen","uniqueFilter","findLast","predicate","idx","lastIndex","fn","firstOrDefault","notFoundValue","lastOrDefault","commonPrefixLength","flatten","range","arg","indexer","mapper","r","t","insert","remove","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed","x","temp","pushToStart","pushToEnd","pushMany","items","item","mapArrayOrNot","asArray","getRandomElement","mapFind","mapFn","mapped","insertInto","newItems","startIdx","getActualStartIndex","newItemsLength","CompareResult","isLessThan","isGreaterThan","isNeitherLessOrGreaterThan","compareBy","selector","tieBreakComparators","comparators","item1","item2","numberComparator","findMaxBy","max","findLastMaxBy","findMinBy","ArrayQueue","endIdx","count","CallbackIterable","iterate","handler","cb","first","_callback","ok","assertNever","assert","condition","assertFn","checkAdjacentItems","once","_this","didCall","Iterable","is","thing","_empty","empty","single","iterable","isEmpty","some","find","filter","map","concat","iterables","concatNested","reduce","reducer","initialValue","forEach","slice","consume","atMost","consumed","iterator","next","collect","at","bt","ai","bi","an","bn","KeyCode","ScanCode","KeyCodeStrMap","keyCode","str","uiMap","userSettingsUSMap","userSettingsGeneralMap","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","scanCode","mappings","seenKeyCode","seenScanCode","mapping","_keyCodeOrd","immutable","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","KeyMod","KeyChord","firstPart","secondPart","chordPart","Lazy","executor","f","TRACK_DISPOSABLES","disposableTracker","setDisposableTracker","tracker","__is_disposable_tracked__","child","parent","Disposable","disposable","trackDisposable","markAsDisposed","setParentOfDisposable","setParentOfDisposables","children","markAsSingleton","singleton","isDisposable","dispose","iterator_1","errors","d","disposeIfDisposable","disposables","combinedDisposable","toDisposable","self","functional_1","DisposableStore","MutableDisposable","oldValue","RefCountedDisposable","_disposable","SafeDisposable","callback","ReferenceCollection","reference","object","AsyncReferenceCollection","referenceCollection","ref","ImmortalReference","disposeOnReturn","store","Node","LinkedList","node","atTheEnd","newNode","oldLast","oldFirst","didRemove","res","anchor","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_locale","_language","_translationsConfigFile","_userAgent","nodeProcess","isElectronProcess","isElectronRenderer","el","rawNlsConfig","nlsConfig","resolved","Platform","PlatformToString","platform","_platform","Language","isDefaultVariant","isDefault","pending","candidate","lastId","myId","OperatingSystem","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","safeProcess","platform_1","sandboxProcess","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","validateString","isPathSeparator","code","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","sep","pathObject","dir","base","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","process","rootEnd","device","isAbsolute","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","ext","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","trailingSeparator","hasRoot","hasPerformanceNow","StopWatch","highResolution","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","lifecycle_1","_addLeakageTraceLogic","options","origListenerDidAdd","Stacktrace","event","thisArgs","didFire","snapshot","each","signal","any","events","merge","initial","output","emitter","Emitter","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","firstCall","cache","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","runAndSubscribe","runAndSubscribeWithStore","run","EmitterObserver","obs","_observable","_change","fromObservable","EventProfiling","listenerCount","stopwatch_1","elapsed","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","LeakageMonitor","customThreshold","threshold","topStack","topCount","Listener","callbackThis","listeners","linkedList_1","firstListener","removeMonitor","removeListener","PrivateEventDeliveryQueue","EventDeliveryQueue","EventDeliveryQueueElement","newQueue","AsyncEmitter","promiseJoin","thenables","values","PauseableEmitter","DebounceEmitter","MicrotaskEmitter","EventMultiplexer","EventBufferer","Relay","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","event_1","CancellationTokenSource","cancel","Cache","task","cts","cancellation_1","promise","LRUCachedFunction","CachedFunction","isFalsyOrWhitespace","_formatRegexp","format","group","_format2Regexp","format2","template","escape","html","escapeRegExpCharacters","character","ch","truncate","maxLength","suffix","trim","haystack","needle","trimmed","ltrim","rtrim","needleLen","haystackLen","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","modifiers","regExpLeadsToEndlessLoop","regexp","regExpContainsBackreference","regexpValue","regExpFlags","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","replaceAsync","search","replacer","parts","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","CodePointIterator","codePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","initialOffset","graphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","endOffset","charCount","CONTAINS_RTL","makeContainsRtl","containsRTL","IS_BASIC_ASCII","isBasicASCII","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","startsWithUTF8BOM","stripUTF8BOM","fuzzyContains","query","queryLen","targetLower","lastIndexOf","indexOf","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","getNLines","singleLetterHash","getGraphemeBreakType","breakTypeA","breakTypeB","GraphemeBreakType","getGraphemeBreakRawData","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","getOffsetBeforeLastEmojiComponent","isEmojiModifier","resultOffset","CodePoint","AmbiguousCharacters","locales","confusableDictionary","lazy_1","cache_1","arrayToMap","mergeMaps","map1","map2","intersectMaps","_a","filteredLocales","l","languageSpecificMap","locale","commonMap","k","InvisibleCharacters","hash","doHash","hashVal","numberHash","arrayHash","objectHash","stringHash","booleanHash","initialHashVal","s","Hasher","SHA1Constant","leftRotate","bits","totalBits","mask","fill","dest","leftPad","char","toHexString","bufferOrValue","bitsize","StringSHA1","strLen","buff","buffLen","leftoverHighSurrogate","strings","ml","bigBlock32","c","StringDiffSequence","source","characters","stringDiff","original","modified","pretty","LcsDiff","Debug","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","LocalConstants","DiffChangeHelper","diffChange_1","originalIndex","modifiedIndex","originalSequence","modifiedSequence","continueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","sequence","elements","hashes","hash_1","newIndex","originalElement","modifiedElement","index1","index2","originalEnd","modifiedEnd","quitEarlyArr","changes","midOriginalArr","midModifiedArr","midOriginal","midModified","leftChanges","rightChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","tempOriginalIndex","matchLengthOfLongest","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","prevChange","bestDelta","bestScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","isString","isStringArray","elem","isObject","isTypedArray","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","isUndefinedOrNull","assertType","assertIsDefined","assertAllDefined","hasOwnProperty","isEmptyObject","isFunction","areFunctions","objects","validateConstraints","constraints","validateConstraint","constraint","withNullAsUndefined","withUndefinedAsNull","deepClone","deepFreeze","_hasOwnProperty","prop","types_1","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","destination","overwrite","oneKeys","otherKeys","safeStringify","baseValue","targetValue","getCaseInsensitive","lowercaseKey","equivalentKey","getAllPropertyNames","proto","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","Constants","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","schemeOrData","authority","fragment","uriToFsPath","Uri","percentDecode","components","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","MessageType","RequestMessage","vsWorker","req","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","workerId","replyMessage","reply","requestMessage","SimpleWorkerClient","workerFactory","host","lazyProxyReject","propertyIsDynamicEvent","propertyIsEvent","loaderConfiguration","hostMethods","objects_1","proxyMethodRequest","proxyListen","availableMethods","createProxyDynamicEvent","SimpleWorkerServer","postMessage","requestHandlerFactory","loaderConfig","hostProxy","require","module","create","CharacterClassifier","_defaultValue","defaultValue","uint_1","asciiMap","_value","Boolean","CharacterSet","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","aLineNumber","bLineNumber","aColumn","bColumn","Range","startLineNumber","startColumn","endLineNumber","endColumn","position","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","position_1","lineCount","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","SelectionDirection","Selection","range_1","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","direction","sel","WordCharacterClass","WordCharacterClassifier","characterClassifier_1","wordSeparators","computeFn","input","createWordRegExp","allowInWords","ensureValidWordDefinition","wordDefinition","flags","_defaultConfig","setDefaultGetWordAtTextConfig","rm","getWordAtText","textOffset","config","t1","prevRegexIndex","regexIndex","thisMatch","_findRegexMatchEnclosingPosition","stopPos","matchIndex","SequenceDiff","seq1Range","seq2Range","OffsetRange","endExclusive","SequenceFromIntArray","MyersDiffAlgorithm","seq1","seq2","getXAfterSnake","y","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","loop","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","lastAligningPosS1","lastAligningPosS2","endX","endY","diffAlgorithm_1","prev","Array2D","width","height","DynamicProgrammingDiffing","sequence1","sequence2","equalityScore","lcsLengths","utils_1","directions","lengths","s1","s2","horizontalLen","verticalLen","extendedSeqScore","newValue","prevLen","reportDecreasingAligningPositions","LineRangeMapping","originalRange","modifiedRange","innerChanges","RangeMapping","LineRange","endLineNumberExclusive","MINIMUM_MATCHING_CHARACTER_LENGTH","SmartLinesDiffComputer","originalLines","modifiedLines","DiffComputer","lastChange","linesDiffComputer_1","assert_1","m1","m2","computeDiff","diff_1","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","opts","createContinueProcessingPredicate","diffResult","quitEarly","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","txt","maximumRuntime","startTime","StandardLinesDiffComputer","dynamicProgrammingDiffing_1","myersDiffAlgorithm_1","perfectHashes","getOrCreateHash","srcDocLines","tgtDocLines","lineAlignments","offset1","offset2","alignments","characterDiffs","lineRangeMappingFromRangeMappings","sourceSlice","Slice","targetSlice","g","a1","a2","shouldBeGrouped","lineRange","chars","line","offsetOfPrevLineBreak","smartLinesDiffComputer_1","standardLinesDiffComputer_1","State","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","currentState","_stateMachine","getStateMachine","CharacterClass","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","model","stateMachine","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","computeLinks","BasicInplaceReplace","range1","text1","range2","text2","up","numberResult","precision","n1","n2","valueSets","valueSet","OverviewRulerLane","MinimapPosition","InjectedTextCursorStops","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TextModelResolvedOptions","src","newOpts","FindMatch","matches","TrackedRangeStickiness","isITextSnapshot","PositionAffinity","ModelConstants","ValidAnnotatedEditOperation","identifier","forceMoveMarkers","isAutoWhitespaceEdit","_isTracked","SearchData","regex","simpleSearch","ApplyEditsResult","reverseEdits","trimAutoWhitespaceLineNumbers","shouldSynchronizeModel","PrefixSumComputer","insertValues","oldValues","oldPrefixSum","insertValuesLen","maxCount","sum","midStop","midStart","PrefixSumIndexOfResult","ConstantTimePrefixSumComputer","viewLinesAbove","arrays_1","sumAbove","remainder","MirrorTextModel","eol","versionId","eolLength","linesLength","lineStartValues","prefixSumComputer_1","lineIndex","insertText","insertLines","strings_1","newLengths","LIMIT_FIND_COUNT","SearchParams","matchCase","multiline","isMultilineRegexSource","canUseSimpleSearch","model_1","wordCharacterClassifier_1","nextChCode","createFindMatch","rawMatches","captureMatches","LineFeedCounter","lineFeedsOffsets","lineFeedsOffsetsLen","textLen","min","TextModelSearch","searchParams","searchRange","limitResultCount","searchData","Searcher","deltaOffset","lfCounter","match0","startOffset","lineFeedCountBeforeMatch","lineFeedCountInMatch","startPosition","endPosition","searcher","counter","resultLen","searchStringLen","textLength","lastMatchIndex","isValidMatch","searchStart","searchTextStart","fromColumn","bestResult","leftIsWordBounday","matchStartIndex","matchLength","charBefore","firstCharInMatch","rightIsWordBounday","charAfter","lastCharInMatch","searchRegex","UnicodeTextModelHighlighter","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","buildRegExpCharClassExpr","textModelSearch_1","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineLength","charCodeBefore","word","wordHelper_1","highlightReason","MAX_RESULT_LENGTH","primaryConfusable","notAmbiguousInLocales","codePoints","UnicodeHighlighterReasonKind","set","cp","isAllowedInvisibleCharacter","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","SimpleHighlightReason","AccessibilitySupport","CodeActionTriggerType","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","IndentAction","InlayHintKind","InlineCompletionTriggerKind","MarkerSeverity","MarkerTag","MouseTargetType","OverlayWidgetPositionPreference","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","WrappingIndent","TokenizationRegistry","languages","language","support","languageId","factory","myData","TokenizationSupportFactoryData","tokenizationSupport","colorMap","_registry","_languageId","_factory","Token","TokenizationResult","tokens","endState","EncodedTokenizationResult","CompletionItemKinds","byKind","codicons_1","toIcon","kind","codicon","strict","isLocationLink","uri_1","SymbolKinds","FoldingRangeKind","Command","CommentThreadCollapsibleState","CommentThreadState","CommentMode","tokenizationRegistry_1","ExternalUriOpenerPriority","keyCodes_1","createMonacoBaseAPI","standaloneEnums","selection_1","languages_1","MirrorModel","mirrorTextModel_1","wordAtText","wordAtPosition","wordenize","lineText","wordRangesIdx","wordRanges","content","words","lineEnding","startLineIndex","endLineIndex","resultLines","hasChanged","maxCharacter","EditorSimpleWorker","foreignModuleFactory","all","strURL","url","unicodeTextModelHighlighter_1","originalUrl","modifiedUrl","originalTextModel","modifiedTextModel","diffAlgorithm","linesDiffComputers_1","originalLineCount","modifiedLineCount","ignoreTrimWhitespace","modelUrl","edits","lastEol","aRng","bRng","editOffset","newEdit","linkComputer_1","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","outer","selectionText","wordRange","inplaceReplaceSupport_1","createData","foreignHostMethods","ctx","foreignModule","editorBaseApi_1"],"file":"workerMain.js"}