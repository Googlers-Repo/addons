{"version":3,"sources":["out-vscode-reh-web/bootstrap-amd.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n//@ts-check\n'use strict';\n\n// Store the node.js require function in a variable\n// before loading our AMD loader to avoid issues\n// when this file is bundled with other files.\nconst nodeRequire = require;\n\nconst loader = require('./vs/loader');\nconst bootstrap = require('./bootstrap');\nconst performance = require('./vs/base/common/performance');\n\n// Bootstrap: NLS\nconst nlsConfig = bootstrap.setupNLS();\n\n// Bootstrap: Loader\nloader.config({\n\tbaseUrl: bootstrap.fileUriFromPath(__dirname, { isWindows: process.platform === 'win32' }),\n\tcatchError: true,\n\tnodeRequire,\n\t'vs/nls': nlsConfig,\n\tamdModulesPattern: /^vs\\//,\n\trecordStats: true\n});\n\n// Running in Electron\nif (process.env['ELECTRON_RUN_AS_NODE'] || process.versions['electron']) {\n\tloader.define('fs', ['original-fs'], function (originalFS) {\n\t\treturn originalFS;  // replace the patched electron fs with the original node fs for all AMD code\n\t});\n}\n\n// Pseudo NLS support\nif (nlsConfig && nlsConfig.pseudo) {\n\tloader(['vs/nls'], function (nlsPlugin) {\n\t\tnlsPlugin.setPseudoTranslation(nlsConfig.pseudo);\n\t});\n}\n\nexports.load = function (entrypoint, onLoad, onError) {\n\tif (!entrypoint) {\n\t\treturn;\n\t}\n\n\t// code cache config\n\tif (process.env['VSCODE_CODE_CACHE_PATH']) {\n\t\tloader.config({\n\t\t\tnodeCachedData: {\n\t\t\t\tpath: process.env['VSCODE_CODE_CACHE_PATH'],\n\t\t\t\tseed: entrypoint\n\t\t\t}\n\t\t});\n\t}\n\n\tonLoad = onLoad || function () { };\n\tonError = onError || function (err) { console.error(err); };\n\n\tperformance.mark(`code/fork/willLoadCode`);\n\tloader([entrypoint], onLoad, onError);\n};\n"],"mappings":"aAWA,MAAM,YAAc,QAEd,OAAS,QAAQ,aAAa,EAC9B,UAAY,QAAQ,aAAa,EACjC,YAAc,QAAQ,8BAA8B,EAGpD,UAAY,UAAU,SAAS,EAGrC,OAAO,OAAO,CACb,QAAS,UAAU,gBAAgB,UAAW,CAAE,UAAW,QAAQ,WAAa,OAAQ,CAAC,EACzF,WAAY,GACZ,YACA,SAAU,UACV,kBAAmB,QACnB,YAAa,EACd,CAAC,GAGG,QAAQ,IAAI,sBAA2B,QAAQ,SAAS,WAC3D,OAAO,OAAO,KAAM,CAAC,aAAa,EAAG,SAAUA,EAAY,CAC1D,OAAOA,CACR,CAAC,EAIE,WAAa,UAAU,QAC1B,OAAO,CAAC,QAAQ,EAAG,SAAUC,EAAW,CACvCA,EAAU,qBAAqB,UAAU,MAAM,CAChD,CAAC,EAGF,QAAQ,KAAO,SAAUC,EAAYC,EAAQC,EAAS,CACjD,CAACF,IAKD,QAAQ,IAAI,wBACf,OAAO,OAAO,CACb,eAAgB,CACf,KAAM,QAAQ,IAAI,uBAClB,KAAMA,CACP,CACD,CAAC,EAGFC,EAASA,GAAU,UAAY,CAAE,EACjCC,EAAUA,GAAW,SAAUC,EAAK,CAAE,QAAQ,MAAMA,CAAG,CAAG,EAE1D,YAAY,KAAK,wBAAwB,EACzC,OAAO,CAACH,CAAU,EAAGC,EAAQC,CAAO,EACrC","names":["originalFS","nlsPlugin","entrypoint","onLoad","onError","err"],"file":"bootstrap-amd.js"}